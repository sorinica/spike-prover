Forder_extension
R15 Coq.Setoids.Setoid <> <> lib
R38 weaved_relation <> <> lib
R63 equational_theory <> <> lib
R90 equational_extension <> <> lib
R120 term <> <> lib
R134 subterm_dp <> <> lib
R161 Coq.Lists.List <> <> lib
R182 list_permut <> <> lib
R210 terminaison <> <> lib
R238 Coq.Relations.Relations <> <> lib
R264 Coq.Wellfounded.Wellfounded <> <> lib
R308 equational_theory_spec <> <> mod
mod 285 <> MakeMarkedEqTh
R353 term_spec <> <> mod
mod 348 <> F
mod 385 <> Symb
def 408 MakeMarkedEqTh.F.Symb A
R419 Coq.Init.Datatypes "x * y" not
R414 Coq.Init.Datatypes <> bool ind
R421 order_extension EqtT.T symbol syndef
def 459 MakeMarkedEqTh.F.Symb eq_A
R468 Coq.Init.Logic <> eq ind
R471 order_extension MakeMarkedEqTh.F.Symb A def
prf 487 MakeMarkedEqTh.F.Symb eq_proof
R498 Coq.Relations.Relation_Definitions <> equivalence rec
R512 order_extension MakeMarkedEqTh.F.Symb eq_A def
R510 order_extension MakeMarkedEqTh.F.Symb A def
R693 order_extension MakeMarkedEqTh.F.Symb eq_A def
R691 order_extension MakeMarkedEqTh.F.Symb A def
R693 order_extension MakeMarkedEqTh.F.Symb eq_A def
R691 order_extension MakeMarkedEqTh.F.Symb A def
R730 Coq.Relations.Relation_Definitions <> equiv_refl proj
R745 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
R693 order_extension MakeMarkedEqTh.F.Symb eq_A def
R691 order_extension MakeMarkedEqTh.F.Symb A def
R784 Coq.Relations.Relation_Definitions <> equiv_sym proj
R798 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
R693 order_extension MakeMarkedEqTh.F.Symb eq_A def
R691 order_extension MakeMarkedEqTh.F.Symb A def
R841 Coq.Relations.Relation_Definitions <> equiv_trans proj
R857 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
R693 order_extension MakeMarkedEqTh.F.Symb eq_A def
R691 order_extension MakeMarkedEqTh.F.Symb A def
R730 Coq.Relations.Relation_Definitions <> equiv_refl proj
R745 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
R784 Coq.Relations.Relation_Definitions <> equiv_sym proj
R798 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
R841 Coq.Relations.Relation_Definitions <> equiv_trans proj
R857 order_extension MakeMarkedEqTh.F.Symb eq_proof thm
def 893 MakeMarkedEqTh.F.Symb eq_bool
R915 Coq.Init.Datatypes <> bool ind
R959 Coq.Init.Datatypes "( x , y , .. , z )" not
R960 Coq.Init.Datatypes <> true constr
R970 Coq.Init.Datatypes "( x , y , .. , z )" not
R971 Coq.Init.Datatypes <> false constr
R984 Coq.Init.Datatypes <> false constr
R1000 Coq.Init.Datatypes "( x , y , .. , z )" not
R1001 Coq.Init.Datatypes <> false constr
R1012 Coq.Init.Datatypes "( x , y , .. , z )" not
R1013 Coq.Init.Datatypes <> true constr
R1025 Coq.Init.Datatypes <> false constr
R1041 Coq.Init.Datatypes "( x , y , .. , z )" not
R1050 Coq.Init.Datatypes "( x , y , .. , z )" not
R1061 order_extension EqtT.T.F.Symb eq_bool defax
R910 order_extension MakeMarkedEqTh.F.Symb A def
R910 order_extension MakeMarkedEqTh.F.Symb A def
prf 1115 MakeMarkedEqTh.F.Symb eq_bool_ok
R1159 order_extension MakeMarkedEqTh.F.Symb eq_bool def
R1194 Coq.Init.Logic "x <> y" not
R1181 Coq.Init.Logic "x = y" not
R1144 order_extension MakeMarkedEqTh.F.Symb A def
R1144 order_extension MakeMarkedEqTh.F.Symb A def
R1350 order_extension EqtT.T eq_symb_bool syndef
R1408 order_extension EqtT.T eq_symb_bool_ok syndef
R1350 order_extension EqtT.T eq_symb_bool syndef
R1350 order_extension EqtT.T eq_symb_bool syndef
R1408 order_extension EqtT.T eq_symb_bool_ok syndef
R1408 order_extension EqtT.T eq_symb_bool_ok syndef
R1408 order_extension EqtT.T eq_symb_bool_ok syndef
R1408 order_extension EqtT.T eq_symb_bool_ok syndef
R1571 order_extension Symb <> mod
def 1593 MakeMarkedEqTh.F arity
R1615 order_extension EqtT.T.F arity defax
R1631 Coq.Init.Datatypes <> snd def
R1604 order_extension MakeMarkedEqTh.F.Symb A def
R1645 order_extension F <> mod
R1663 term <> <> modtype
R1674 order_extension F <> modtype
R1677 order_extension T.X <> modtype
mod 1658 <> T
R1704 equational_theory <> <> modtype
R1727 order_extension T <> modtype
mod 1697 <> EQT
def 1745 MakeMarkedEqTh inject_symb
R1779 order_extension MakeMarkedEqTh.T symbol syndef
R1791 Coq.Init.Datatypes "( x , y , .. , z )" not
R1792 Coq.Init.Datatypes <> false constr
R1762 order_extension EqtT.T symbol syndef
def 1816 MakeMarkedEqTh mark_symb
R1843 order_extension MakeMarkedEqTh.T symbol syndef
R1855 Coq.Init.Datatypes "( x , y , .. , z )" not
R1856 Coq.Init.Datatypes <> true constr
R1862 Coq.Init.Datatypes <> snd def
R1831 order_extension MakeMarkedEqTh.T symbol syndef
R1874 order_extension MakeMarkedEqTh <> mod
R1918 equational_theory_spec <> <> mod
mod 1898 <> OrderingPair
R1963 order_extension T <> modtype
mod 1958 <> M
def 1984 OrderingPair Trel_stable
R2126 order_extension Eqt.T apply_subst def
R2101 order_extension Eqt.T apply_subst def
R2062 order_extension Eqt.T substitution def
R2045 order_extension Eqt.T term ind
R2045 order_extension Eqt.T term ind
R2005 Coq.Relations.Relation_Definitions <> relation def
R2014 order_extension Eqt.T term ind
R2005 Coq.Relations.Relation_Definitions <> relation def
R2014 order_extension Eqt.T term ind
def 2165 OrderingPair Trel_monotone
R2301 order_extension Eqt.T Term constr
R2287 order_extension Eqt.T Term constr
R2259 weaved_relation <> one_step_list ind
R2239 Coq.Lists.List <> list ind
R2244 order_extension Eqt.T term ind
R2239 Coq.Lists.List <> list ind
R2244 order_extension Eqt.T term ind
R2220 order_extension Eqt.T symbol syndef
R2184 Coq.Relations.Relation_Definitions <> relation def
R2193 order_extension Eqt.T term ind
def 2329 OrderingPair Trel_compat
R2393 order_extension Eqt.T term ind
R2393 order_extension Eqt.T term ind
R2393 order_extension Eqt.T term ind
R2350 Coq.Relations.Relation_Definitions <> relation def
R2359 order_extension Eqt.T term ind
R2350 Coq.Relations.Relation_Definitions <> relation def
R2359 order_extension Eqt.T term ind
sec 2447 OrderingPair S
var 2463 OrderingPair.S R
var 2465 OrderingPair.S O
R2469 Coq.Relations.Relation_Definitions <> relation def
R2478 order_extension Eqt.T term ind
var 2501 OrderingPair.S R_stable
R2512 order_extension OrderingPair Trel_stable def
var 2544 OrderingPair.S O_monotone
R2557 order_extension OrderingPair Trel_monotone def
prf 2585 OrderingPair stable_monotone_R_list
R2616 Coq.Relations.Relation_Definitions <> inclusion def
R2662 weaved_relation <> one_step_list ind
R2629 weaved_relation <> one_step_list ind
R2644 order_extension Eqt one_step ind
R2721 order_extension Eqt one_step ind
R2854 weaved_relation <> one_step_list ind
R2786 weaved_relation <> one_step_list ind
R2801 order_extension Eqt one_step ind
R2930 order_extension Eqt.T term_rec8 defax
R2721 order_extension Eqt one_step ind
R2854 weaved_relation <> one_step_list ind
R2786 weaved_relation <> one_step_list ind
R2801 order_extension Eqt one_step ind
R2930 order_extension Eqt.T term_rec8 defax
prf 3587 OrderingPair stable_monotone_R_term
R3612 Coq.Relations.Relation_Definitions <> inclusion def
R3625 order_extension Eqt one_step ind
R3773 order_extension OrderingPair stable_monotone_R_list thm
R3773 order_extension OrderingPair stable_monotone_R_list thm
R3832 order_extension OrderingPair.S <> sec
R3839 order_extension OrderingPair <> mod
R3875 equational_theory_spec <> <> mod
mod 3861 <> OrdAFS
R3920 order_extension T <> modtype
mod 3915 <> M
R3949 order_extension OrderingPair <> modtype
R3962 order_extension <> <> modtype
mod 3943 <> op
ind 3981 OrdAFS afs_val
constr 3998 OrdAFS AFS_id
constr 4033 OrdAFS AFS_arg
constr 4064 OrdAFS AFS_filt
R4019 order_extension <> afs_val ind
R4007 order_extension Eqt.T symbol syndef
R4050 order_extension <> afs_val ind
R4043 Coq.Init.Datatypes <> nat ind
R4099 order_extension <> afs_val ind
R4087 Coq.Lists.List <> list ind
R4092 Coq.Init.Datatypes <> nat ind
R4075 order_extension Eqt.T symbol syndef
def 4120 OrdAFS afs_filt
R4134 Coq.Lists.List <> list ind
R4139 order_extension Eqt.T term ind
R4153 Coq.Lists.List <> list ind
R4158 Coq.Init.Datatypes <> nat ind
R4165 Coq.Lists.List <> list ind
R4170 order_extension Eqt.T term ind
R4205 Coq.Lists.List "x :: y" not
R4225 Coq.Lists.List <> nth_error def
R4252 Coq.Init.Datatypes <> Some constr
R4264 Coq.Lists.List "x :: y" not
R4267 order_extension <> afs_filt def
R4294 order_extension <> afs_filt def
R4329 Coq.Lists.List <> nil constr
def 4354 OrdAFS afs_term
R4387 order_extension OrdAFS afs_val ind
R4375 order_extension Eqt.T symbol syndef
R4401 order_extension Eqt.T term ind
R4411 order_extension Eqt.T term ind
R4444 order_extension Eqt.T Var constr
R4463 order_extension Eqt.T Term constr
R4558 order_extension OrdAFS AFS_id constr
R4570 order_extension Eqt.T Term constr
R4590 order_extension OrdAFS AFS_arg constr
R4603 Coq.Lists.List <> nth def
R4613 order_extension Eqt.T Term constr
R4622 Coq.Lists.List <> nil constr
R4635 order_extension OrdAFS AFS_filt constr
R4652 order_extension Eqt.T Term constr
R4662 order_extension OrdAFS afs_filt def
R4493 Coq.Lists.List <> map def
R4498 order_extension <> afs_term def
prf 4706 OrdAFS nth_map
R4835 Coq.Init.Logic "x = y" not
R4817 Coq.Lists.List <> nth def
R4824 Coq.Lists.List <> map def
R4840 Coq.Lists.List <> nth def
R4803 Coq.Init.Peano "x < y" not
R4805 Coq.Lists.List <> length def
R4791 Coq.Init.Datatypes <> nat ind
R4778 Coq.Lists.List <> list ind
R4990 Coq.Arith.Lt <> lt_S_n thm
R4990 Coq.Arith.Lt <> lt_S_n thm
sec 5036 OrdAFS S
var 5053 OrdAFS.S Tle
var 5057 OrdAFS.S Tlt
R5063 Coq.Relations.Relation_Definitions <> relation def
R5072 order_extension Eqt.T term ind
var 5095 OrdAFS.S Tlt_wf
R5104 Coq.Init.Wf <> well_founded def
var 5137 OrdAFS.S Tle_mono
R5148 order_extension OrdAFS.op Trel_monotone def
var 5182 OrdAFS.S Tlt_Tle_compat
R5199 order_extension OrdAFS.op Trel_compat def
var 5236 OrdAFS.S Tle_refl
R5247 Coq.Relations.Relation_Definitions <> reflexive def
var 5279 OrdAFS.S Tle_trans
R5291 Coq.Relations.Relation_Definitions <> transitive def
var 5323 OrdAFS.S afs_symb
R5346 order_extension OrdAFS afs_val ind
R5334 order_extension Eqt.T symbol syndef
def 5364 OrdAFS afs
R5371 order_extension OrdAFS afs_term def
def 5398 OrdAFS Tlt_afs
R5415 order_extension Eqt.T term ind
R5415 order_extension Eqt.T term ind
def 5457 OrdAFS Tle_afs
R5474 order_extension Eqt.T term ind
R5474 order_extension Eqt.T term ind
prf 5519 OrdAFS Tlt_Tle_compat_afs
R5540 order_extension OrdAFS.op Trel_compat def
prf 5680 OrdAFS Tle_monotone_afs
R5699 order_extension OrdAFS.op Trel_monotone def
R5940 Coq.Arith.Lt <> le_or_lt thm
R5953 Coq.Lists.List <> length def
R5940 Coq.Arith.Lt <> le_or_lt thm
R5953 Coq.Lists.List <> length def
R5999 Coq.Lists.List <> nth_overflow thm
R6024 Coq.Lists.List <> map_length thm
R6064 Coq.Lists.List <> nth_overflow thm
R6089 Coq.Lists.List <> map_length thm
R6115 weaved_relation <> one_step_list_length_eq thm
R5999 Coq.Lists.List <> nth_overflow thm
R6024 Coq.Lists.List <> map_length thm
R6064 Coq.Lists.List <> nth_overflow thm
R6089 Coq.Lists.List <> map_length thm
R6115 weaved_relation <> one_step_list_length_eq thm
R6358 Coq.Arith.Lt <> lt_S_n thm
R6358 Coq.Arith.Lt <> lt_S_n thm
R6391 TransClosure <> refl_trans_clos ind
R6463 order_extension OrdAFS afs_filt def
R6473 Coq.Lists.List <> map def
R6436 order_extension OrdAFS afs_filt def
R6446 Coq.Lists.List <> map def
R6408 weaved_relation <> one_step_list ind
R6609 order_extension Eqt.T Term constr
R6391 TransClosure <> refl_trans_clos ind
R6463 order_extension OrdAFS afs_filt def
R6473 Coq.Lists.List <> map def
R6436 order_extension OrdAFS afs_filt def
R6446 Coq.Lists.List <> map def
R6408 weaved_relation <> one_step_list ind
R6609 order_extension Eqt.T Term constr
R6839 Coq.Init.Logic "A \/ B" not
R6796 Coq.Init.Logic "A /\ B" not
R6789 Coq.Init.Logic "x = y" not
R6764 Coq.Lists.List <> nth_error def
R6775 Coq.Lists.List <> map def
R6791 Coq.Init.Datatypes <> None constr
R6833 Coq.Init.Logic "x = y" not
R6808 Coq.Lists.List <> nth_error def
R6819 Coq.Lists.List <> map def
R6835 Coq.Init.Datatypes <> None constr
R6853 Coq.Init.Logic "'exists' x , p" not
R6864 Coq.Init.Logic "'exists' x , p" not
R6919 Coq.Init.Logic "A /\ B" not
R6909 Coq.Init.Logic "x = y" not
R6884 Coq.Lists.List <> nth_error def
R6895 Coq.Lists.List <> map def
R6911 Coq.Init.Datatypes <> Some constr
R6966 Coq.Init.Logic "A /\ B" not
R6956 Coq.Init.Logic "x = y" not
R6931 Coq.Lists.List <> nth_error def
R6942 Coq.Lists.List <> map def
R6958 Coq.Init.Datatypes <> Some constr
R7134 Coq.Lists.List "x :: y" not
R7137 order_extension OrdAFS afs_filt def
R7147 Coq.Lists.List <> map def
R7338 Coq.Lists.List "x :: y" not
R6839 Coq.Init.Logic "A \/ B" not
R6796 Coq.Init.Logic "A /\ B" not
R6789 Coq.Init.Logic "x = y" not
R6764 Coq.Lists.List <> nth_error def
R6775 Coq.Lists.List <> map def
R6791 Coq.Init.Datatypes <> None constr
R6833 Coq.Init.Logic "x = y" not
R6808 Coq.Lists.List <> nth_error def
R6819 Coq.Lists.List <> map def
R6835 Coq.Init.Datatypes <> None constr
R6853 Coq.Init.Logic "'exists' x , p" not
R6864 Coq.Init.Logic "'exists' x , p" not
R6919 Coq.Init.Logic "A /\ B" not
R6909 Coq.Init.Logic "x = y" not
R6884 Coq.Lists.List <> nth_error def
R6895 Coq.Lists.List <> map def
R6911 Coq.Init.Datatypes <> Some constr
R6966 Coq.Init.Logic "A /\ B" not
R6956 Coq.Init.Logic "x = y" not
R6931 Coq.Lists.List <> nth_error def
R6942 Coq.Lists.List <> map def
R6958 Coq.Init.Datatypes <> Some constr
R7134 Coq.Lists.List "x :: y" not
R7137 order_extension OrdAFS afs_filt def
R7147 Coq.Lists.List <> map def
R7338 Coq.Lists.List "x :: y" not
R7716 Coq.Lists.List <> nth_error def
R7727 Coq.Lists.List <> map def
R7716 Coq.Lists.List <> nth_error def
R7727 Coq.Lists.List <> map def
def 7925 OrdAFS sigma_afs
R7969 Coq.Lists.List <> map def
R7983 Coq.Init.Datatypes "( x , y , .. , z )" not
R7984 Coq.Init.Datatypes <> fst def
R7996 Coq.Init.Datatypes <> snd def
R7944 order_extension Eqt.T substitution def
prf 8023 OrdAFS afs_subst
R8085 Coq.Init.Logic "x = y" not
R8062 order_extension Eqt.T apply_subst def
R8087 order_extension Eqt.T apply_subst def
R8102 order_extension OrdAFS sigma_afs def
R8170 order_extension Eqt.T term_rec3 defax
R8170 order_extension Eqt.T term_rec3 defax
R8272 order_extension Eqt.T eq_var_bool syndef
R8272 order_extension Eqt.T eq_var_bool syndef
R8592 Coq.Arith.Lt <> le_or_lt thm
R8605 Coq.Lists.List <> length def
R8592 Coq.Arith.Lt <> le_or_lt thm
R8605 Coq.Lists.List <> length def
R8650 Coq.Lists.List <> nth_overflow thm
R8681 Coq.Lists.List <> map_length thm
R8701 Coq.Lists.List <> map_length thm
R8741 Coq.Lists.List <> nth_overflow thm
R8772 Coq.Lists.List <> map_length thm
R8650 Coq.Lists.List <> nth_overflow thm
R8681 Coq.Lists.List <> map_length thm
R8701 Coq.Lists.List <> map_length thm
R8741 Coq.Lists.List <> nth_overflow thm
R8772 Coq.Lists.List <> map_length thm
R8832 order_extension OrdAFS nth_map thm
R8852 Coq.Lists.List <> map_length thm
R8892 order_extension OrdAFS nth_map thm
R8932 order_extension OrdAFS nth_map thm
R9008 Coq.Lists.List <> nth_In thm
R8832 order_extension OrdAFS nth_map thm
R8852 Coq.Lists.List <> map_length thm
R8892 order_extension OrdAFS nth_map thm
R8932 order_extension OrdAFS nth_map thm
R9008 Coq.Lists.List <> nth_In thm
R9254 Coq.Init.Logic "A \/ B" not
R9212 Coq.Init.Logic "A /\ B" not
R9205 Coq.Init.Logic "x = y" not
R9153 Coq.Lists.List <> nth_error def
R9164 Coq.Lists.List <> map def
R9173 Coq.Lists.List <> map def
R9178 order_extension Eqt.T apply_subst def
R9207 Coq.Init.Datatypes <> None constr
R9248 Coq.Init.Logic "x = y" not
R9224 Coq.Lists.List <> nth_error def
R9235 Coq.Lists.List <> map def
R9250 Coq.Init.Datatypes <> None constr
R9268 Coq.Init.Logic "'exists' x , p" not
R9279 Coq.Init.Logic "'exists' x , p" not
R9361 Coq.Init.Logic "A /\ B" not
R9351 Coq.Init.Logic "x = y" not
R9299 Coq.Lists.List <> nth_error def
R9310 Coq.Lists.List <> map def
R9319 Coq.Lists.List <> map def
R9324 order_extension Eqt.T apply_subst def
R9353 Coq.Init.Datatypes <> Some constr
R9407 Coq.Init.Logic "A /\ B" not
R9397 Coq.Init.Logic "x = y" not
R9373 Coq.Lists.List <> nth_error def
R9384 Coq.Lists.List <> map def
R9399 Coq.Init.Datatypes <> Some constr
R9422 Coq.Init.Logic "x = y" not
R9424 order_extension Eqt.T apply_subst def
R9439 order_extension OrdAFS sigma_afs def
R9254 Coq.Init.Logic "A \/ B" not
R9212 Coq.Init.Logic "A /\ B" not
R9205 Coq.Init.Logic "x = y" not
R9153 Coq.Lists.List <> nth_error def
R9164 Coq.Lists.List <> map def
R9173 Coq.Lists.List <> map def
R9178 order_extension Eqt.T apply_subst def
R9207 Coq.Init.Datatypes <> None constr
R9248 Coq.Init.Logic "x = y" not
R9224 Coq.Lists.List <> nth_error def
R9235 Coq.Lists.List <> map def
R9250 Coq.Init.Datatypes <> None constr
R9268 Coq.Init.Logic "'exists' x , p" not
R9279 Coq.Init.Logic "'exists' x , p" not
R9361 Coq.Init.Logic "A /\ B" not
R9351 Coq.Init.Logic "x = y" not
R9299 Coq.Lists.List <> nth_error def
R9310 Coq.Lists.List <> map def
R9319 Coq.Lists.List <> map def
R9324 order_extension Eqt.T apply_subst def
R9353 Coq.Init.Datatypes <> Some constr
R9407 Coq.Init.Logic "A /\ B" not
R9397 Coq.Init.Logic "x = y" not
R9373 Coq.Lists.List <> nth_error def
R9384 Coq.Lists.List <> map def
R9399 Coq.Init.Datatypes <> Some constr
R9422 Coq.Init.Logic "x = y" not
R9424 order_extension Eqt.T apply_subst def
R9439 order_extension OrdAFS sigma_afs def
R9831 order_extension Eqt.T apply_subst def
R9831 order_extension Eqt.T apply_subst def
R9977 order_extension OrdAFS.S <> sec
R9984 order_extension OrdAFS <> mod
R10018 equational_theory_spec <> <> mod
mod 10000 <> OrdSafeAFS
R10063 order_extension T <> modtype
mod 10058 <> M
R10092 order_extension OrderingPair <> modtype
R10105 order_extension <> <> modtype
mod 10086 <> op
ind 10124 OrdSafeAFS afs_val
constr 10141 OrdSafeAFS AFS_perm
R10176 order_extension <> afs_val ind
R10164 Coq.Lists.List <> list ind
R10169 Coq.Init.Datatypes <> nat ind
R10152 order_extension Eqt.T symbol syndef
def 10197 OrdSafeAFS afs_rest
R10215 Coq.Lists.List <> list ind
R10220 Coq.Init.Datatypes <> nat ind
R10230 Coq.Init.Datatypes <> nat ind
R10261 Coq.Init.Datatypes <> S constr
R10271 Coq.Lists.List <> existsb def
R10280 Coq.Arith.EqNat <> beq_nat def
R10353 order_extension <> afs_rest def
R10367 Coq.Lists.List "x :: y" not
R10318 order_extension <> afs_rest def
def 10410 OrdSafeAFS afs_filt
R10424 Coq.Lists.List <> list ind
R10429 order_extension Eqt.T term ind
R10443 Coq.Lists.List <> list ind
R10448 Coq.Init.Datatypes <> nat ind
R10455 Coq.Lists.List <> list ind
R10460 order_extension Eqt.T term ind
R10495 Coq.Lists.List "x :: y" not
R10515 Coq.Lists.List <> nth_error def
R10542 Coq.Init.Datatypes <> Some constr
R10554 Coq.Lists.List "x :: y" not
R10557 order_extension <> afs_filt def
R10584 order_extension <> afs_filt def
R10619 Coq.Lists.List <> nil constr
def 10644 OrdSafeAFS afs_term
R10677 order_extension OrdSafeAFS afs_val ind
R10665 order_extension Eqt.T symbol syndef
R10691 order_extension Eqt.T term ind
R10701 order_extension Eqt.T term ind
R10734 order_extension Eqt.T Var constr
R10753 order_extension Eqt.T Term constr
R10848 order_extension OrdSafeAFS AFS_perm constr
R10873 order_extension Eqt.T Term constr
R10883 order_extension OrdSafeAFS afs_filt def
R10896 order_extension OrdSafeAFS afs_rest def
R10912 Coq.Lists.List <> length def
R10783 Coq.Lists.List <> map def
R10788 order_extension <> afs_term def
prf 10953 OrdSafeAFS rest_safe
R10989 Coq.Lists.List <> In def
R10995 order_extension OrdSafeAFS afs_rest def
R10982 Coq.Init.Peano "x < y" not
R11131 Coq.Lists.List <> In def
R11137 order_extension OrdSafeAFS afs_rest def
R11110 Coq.Lists.List <> In def
R11099 Coq.Lists.List <> In def
R11061 Coq.Init.Peano "x < y" not
R11131 Coq.Lists.List <> In def
R11137 order_extension OrdSafeAFS afs_rest def
R11110 Coq.Lists.List <> In def
R11099 Coq.Lists.List <> In def
R11061 Coq.Init.Peano "x < y" not
R11269 Coq.Arith.Lt <> le_lt_or_eq thm
R11318 Coq.Lists.List <> existsb def
R11327 Coq.Arith.EqNat <> beq_nat def
R11373 Coq.Arith.Lt <> lt_S_n thm
R11269 Coq.Arith.Lt <> le_lt_or_eq thm
R11318 Coq.Lists.List <> existsb def
R11327 Coq.Arith.EqNat <> beq_nat def
R11373 Coq.Arith.Lt <> lt_S_n thm
R11373 Coq.Arith.Lt <> lt_S_n thm
R11373 Coq.Arith.Lt <> lt_S_n thm
R11373 Coq.Arith.Lt <> lt_S_n thm
R11487 Coq.Lists.List <> In def
R11493 order_extension OrdSafeAFS afs_rest def
R11476 Coq.Lists.List <> In def
R11580 Coq.Lists.List <> existsb def
R11589 Coq.Arith.EqNat <> beq_nat def
R11487 Coq.Lists.List <> In def
R11493 order_extension OrdSafeAFS afs_rest def
R11476 Coq.Lists.List <> In def
R11580 Coq.Lists.List <> existsb def
R11589 Coq.Arith.EqNat <> beq_nat def
R11666 Coq.Init.Peano <> eq_add_S thm
R11721 Coq.Lists.List <> existsb def
R11730 Coq.Arith.EqNat <> beq_nat def
R11666 Coq.Init.Peano <> eq_add_S thm
R11721 Coq.Lists.List <> existsb def
R11730 Coq.Arith.EqNat <> beq_nat def
R11809 Coq.Lists.List <> existsb_exists thm
R11866 Coq.Arith.EqNat <> beq_nat_true thm
R11809 Coq.Lists.List <> existsb_exists thm
R11866 Coq.Arith.EqNat <> beq_nat_true thm
def 11975 OrdSafeAFS intersperse
R11992 order_extension Eqt.T term ind
R12006 Coq.Lists.List <> list ind
R12012 Coq.Lists.List <> list ind
R12017 order_extension Eqt.T term ind
R12028 Coq.Lists.List <> list ind
R12033 order_extension Eqt.T term ind
R12069 Coq.Lists.List "x :: y" not
R12072 Coq.Lists.List <> nil constr
R12089 Coq.Lists.List "x :: y" not
R12100 Coq.Lists.List "x ++ y" not
R12105 Coq.Lists.List "x :: y" not
R12108 order_extension <> intersperse def
R12136 Coq.Lists.List <> nil constr
def 12161 OrdSafeAFS dissect
R12174 Coq.Init.Datatypes <> nat ind
R12184 Coq.Lists.List <> list ind
R12189 Coq.Init.Datatypes <> nat ind
R12196 Coq.Lists.List <> list ind
R12202 Coq.Lists.List <> list ind
R12207 Coq.Init.Datatypes <> nat ind
R12240 Coq.Lists.List "x :: y" not
R12290 Coq.Arith.EqNat <> beq_nat def
R12360 Coq.Lists.List "x :: y" not
R12375 Coq.Lists.List "x :: y" not
R12372 Coq.Lists.List "x :: y" not
R12405 Coq.Lists.List "x :: y" not
R12400 Coq.Lists.List "x :: y" not
R12402 Coq.Lists.List <> nil constr
R12410 Coq.Lists.List <> nil constr
R12318 Coq.Lists.List "x :: y" not
R12314 Coq.Lists.List <> nil constr
R12265 order_extension <> dissect def
R12441 Coq.Lists.List "x :: y" not
R12437 Coq.Lists.List <> nil constr
R12444 Coq.Lists.List <> nil constr
prf 12467 OrdSafeAFS dissect_not_nil
R12509 Coq.Init.Logic "x <> y" not
R12497 order_extension OrdSafeAFS dissect def
R12512 Coq.Lists.List <> nil constr
R12609 Coq.Arith.EqNat <> beq_nat def
R12646 order_extension OrdSafeAFS dissect def
R12609 Coq.Arith.EqNat <> beq_nat def
R12646 order_extension OrdSafeAFS dissect def
prf 12701 OrdSafeAFS dissect_in
R12740 Coq.Init.Logic "'exists' x : t , p" not
R12762 Coq.Init.Logic "'exists' x : t , p" not
R12788 Coq.Init.Logic "'exists' x : t , p" not
R12832 Coq.Init.Logic "x = y" not
R12820 Coq.Lists.List "x :: y" not
R12826 Coq.Lists.List "x :: y" not
R12834 order_extension OrdSafeAFS dissect def
R12800 Coq.Lists.List <> list ind
R12806 Coq.Lists.List <> list ind
R12811 Coq.Init.Datatypes <> nat ind
R12774 Coq.Lists.List <> list ind
R12779 Coq.Init.Datatypes <> nat ind
R12752 Coq.Lists.List <> list ind
R12757 Coq.Init.Datatypes <> nat ind
R12726 Coq.Lists.List <> In def
R12954 Coq.Arith.EqNat <> beq_nat_refl thm
R13018 Coq.Arith.EqNat <> beq_nat def
R13057 order_extension OrdSafeAFS dissect def
R13151 Coq.Arith.EqNat <> beq_nat def
R12954 Coq.Arith.EqNat <> beq_nat_refl thm
R13018 Coq.Arith.EqNat <> beq_nat def
R13057 order_extension OrdSafeAFS dissect def
R13151 Coq.Arith.EqNat <> beq_nat def
prf 13227 OrdSafeAFS nth_in
R13322 Coq.Init.Logic "x = y" not
R13284 Coq.Lists.List <> nth_error def
R13311 Coq.Lists.List <> length def
R13298 Coq.Lists.List "x ++ y" not
R13303 Coq.Lists.List "x :: y" not
R13324 Coq.Init.Datatypes <> Some constr
R13271 Coq.Lists.List <> list ind
R13271 Coq.Lists.List <> list ind
prf 13420 OrdSafeAFS inter_diss
R13484 Coq.Init.Logic "x = y" not
R13457 order_extension OrdSafeAFS afs_filt def
R13470 Coq.Lists.List "x ++ y" not
R13475 Coq.Lists.List "x :: y" not
R13486 order_extension OrdSafeAFS intersperse def
R13505 Coq.Lists.List <> map def
R13537 order_extension OrdSafeAFS dissect def
R13546 Coq.Lists.List <> length def
R13510 order_extension OrdSafeAFS afs_filt def
R13523 Coq.Lists.List "x ++ y" not
R13528 Coq.Lists.List "x :: y" not
R13605 order_extension OrdSafeAFS dissect def
R13614 Coq.Lists.List <> length def
R13668 Coq.Init.Logic "x = y" not
R13646 order_extension OrdSafeAFS dissect def
R13655 Coq.Lists.List <> length def
R13605 order_extension OrdSafeAFS dissect def
R13614 Coq.Lists.List <> length def
R13668 Coq.Init.Logic "x = y" not
R13646 order_extension OrdSafeAFS dissect def
R13655 Coq.Lists.List <> length def
R13764 order_extension OrdSafeAFS dissect_not_nil thm
R13764 order_extension OrdSafeAFS dissect_not_nil thm
R13948 Coq.Arith.EqNat <> beq_nat def
R13963 Coq.Lists.List <> length def
R14029 order_extension OrdSafeAFS dissect def
R14038 Coq.Lists.List <> length def
R14140 order_extension OrdSafeAFS dissect_not_nil thm
R14196 Coq.Arith.EqNat <> beq_nat_true thm
R14266 order_extension OrdSafeAFS nth_in thm
R13948 Coq.Arith.EqNat <> beq_nat def
R13963 Coq.Lists.List <> length def
R14029 order_extension OrdSafeAFS dissect def
R14038 Coq.Lists.List <> length def
R14140 order_extension OrdSafeAFS dissect_not_nil thm
R14196 Coq.Arith.EqNat <> beq_nat_true thm
R14266 order_extension OrdSafeAFS nth_in thm
R14374 Coq.Arith.EqNat <> beq_nat def
R14389 Coq.Lists.List <> length def
R14469 Coq.Arith.EqNat <> beq_nat_false thm
R14511 order_extension OrdSafeAFS dissect def
R14520 Coq.Lists.List <> length def
R14557 order_extension OrdSafeAFS dissect_not_nil thm
R14374 Coq.Arith.EqNat <> beq_nat def
R14389 Coq.Lists.List <> length def
R14469 Coq.Arith.EqNat <> beq_nat_false thm
R14511 order_extension OrdSafeAFS dissect def
R14520 Coq.Lists.List <> length def
R14557 order_extension OrdSafeAFS dissect_not_nil thm
R14740 Coq.Init.Logic "x = y" not
R14712 Coq.Lists.List <> nth_error def
R14726 Coq.Lists.List "x ++ y" not
R14731 Coq.Lists.List "x :: y" not
R14742 Coq.Lists.List <> nth_error def
R14756 Coq.Lists.List "x ++ y" not
R14761 Coq.Lists.List "x :: y" not
R15076 Coq.Lists.List <> nth_error def
R15090 Coq.Lists.List "x ++ y" not
R15095 Coq.Lists.List "x :: y" not
R14740 Coq.Init.Logic "x = y" not
R14712 Coq.Lists.List <> nth_error def
R14726 Coq.Lists.List "x ++ y" not
R14731 Coq.Lists.List "x :: y" not
R14742 Coq.Lists.List <> nth_error def
R14756 Coq.Lists.List "x ++ y" not
R14761 Coq.Lists.List "x :: y" not
R15076 Coq.Lists.List <> nth_error def
R15090 Coq.Lists.List "x ++ y" not
R15095 Coq.Lists.List "x :: y" not
R15076 Coq.Lists.List <> nth_error def
R15090 Coq.Lists.List "x ++ y" not
R15095 Coq.Lists.List "x :: y" not
R15076 Coq.Lists.List <> nth_error def
R15090 Coq.Lists.List "x ++ y" not
R15095 Coq.Lists.List "x :: y" not
sec 15141 OrdSafeAFS S
var 15158 OrdSafeAFS.S Tle
var 15162 OrdSafeAFS.S Tlt
R15168 Coq.Relations.Relation_Definitions <> relation def
R15177 order_extension Eqt.T term ind
var 15200 OrdSafeAFS.S Tlt_wf
R15209 Coq.Init.Wf <> well_founded def
var 15242 OrdSafeAFS.S Tle_mono
R15253 order_extension OrdSafeAFS.op Trel_monotone def
var 15287 OrdSafeAFS.S Tlt_mono
R15298 order_extension OrdSafeAFS.op Trel_monotone def
var 15332 OrdSafeAFS.S Tlt_Tle_compat
R15349 order_extension OrdSafeAFS.op Trel_compat def
var 15386 OrdSafeAFS.S Tle_trans
R15398 Coq.Relations.Relation_Definitions <> transitive def
var 15431 OrdSafeAFS.S Tlt_trans
R15443 Coq.Relations.Relation_Definitions <> transitive def
var 15475 OrdSafeAFS.S afs_symb
R15498 order_extension OrdSafeAFS afs_val ind
R15486 order_extension Eqt.T symbol syndef
def 15516 OrdSafeAFS afs
R15523 order_extension OrdSafeAFS afs_term def
def 15550 OrdSafeAFS Tlt_afs
R15567 order_extension Eqt.T term ind
R15567 order_extension Eqt.T term ind
def 15609 OrdSafeAFS Tle_afs
R15626 order_extension Eqt.T term ind
R15626 order_extension Eqt.T term ind
prf 15671 OrdSafeAFS Tlt_Tle_compat_afs
R15692 order_extension OrdSafeAFS.op Trel_compat def
prf 15832 OrdSafeAFS gen_monotone_afs
R15930 order_extension OrdSafeAFS.op Trel_monotone def
R15905 order_extension OrdSafeAFS.op Trel_monotone def
R15887 Coq.Relations.Relation_Definitions <> transitive def
R15863 Coq.Relations.Relation_Definitions <> relation def
R15872 order_extension Eqt.T term ind
R16114 weaved_relation <> one_step_list ind
R16144 Coq.Lists.List <> map def
R16131 Coq.Lists.List <> map def
R16248 Coq.Lists.List <> map def
R16253 order_extension OrdSafeAFS afs_term def
R16315 Coq.Lists.List <> map def
R16320 order_extension OrdSafeAFS afs_term def
R16114 weaved_relation <> one_step_list ind
R16144 Coq.Lists.List <> map def
R16131 Coq.Lists.List <> map def
R16248 Coq.Lists.List <> map def
R16253 order_extension OrdSafeAFS afs_term def
R16315 Coq.Lists.List <> map def
R16320 order_extension OrdSafeAFS afs_term def
R16432 TransClosure <> trans_clos ind
R16521 order_extension OrdSafeAFS afs_filt def
R16534 order_extension OrdSafeAFS afs_rest def
R16550 Coq.Lists.List <> length def
R16470 order_extension OrdSafeAFS afs_filt def
R16483 order_extension OrdSafeAFS afs_rest def
R16499 Coq.Lists.List <> length def
R16444 weaved_relation <> one_step_list ind
R16631 order_extension Eqt.T Term constr
R16432 TransClosure <> trans_clos ind
R16521 order_extension OrdSafeAFS afs_filt def
R16534 order_extension OrdSafeAFS afs_rest def
R16550 Coq.Lists.List <> length def
R16470 order_extension OrdSafeAFS afs_filt def
R16483 order_extension OrdSafeAFS afs_rest def
R16499 Coq.Lists.List <> length def
R16444 weaved_relation <> one_step_list ind
R16631 order_extension Eqt.T Term constr
R16729 order_extension OrdSafeAFS rest_safe thm
R16743 Coq.Lists.List <> length def
R16729 order_extension OrdSafeAFS rest_safe thm
R16743 Coq.Lists.List <> length def
R16798 Coq.Init.Logic "x = y" not
R16788 Coq.Lists.List <> length def
R16800 Coq.Lists.List <> length def
R16826 weaved_relation <> one_step_list_length_eq thm
R16902 order_extension OrdSafeAFS afs_rest def
R16918 Coq.Lists.List <> length def
R16798 Coq.Init.Logic "x = y" not
R16788 Coq.Lists.List <> length def
R16800 Coq.Lists.List <> length def
R16826 weaved_relation <> one_step_list_length_eq thm
R16902 order_extension OrdSafeAFS afs_rest def
R16918 Coq.Lists.List <> length def
R16981 weaved_relation <> one_step_in_list thm
R16981 weaved_relation <> one_step_in_list thm
R17080 order_extension OrdSafeAFS inter_diss thm
R17120 order_extension OrdSafeAFS inter_diss thm
R17160 order_extension OrdSafeAFS afs_filt def
R17173 Coq.Lists.List "x ++ y" not
R17178 Coq.Lists.List "x :: y" not
R17080 order_extension OrdSafeAFS inter_diss thm
R17120 order_extension OrdSafeAFS inter_diss thm
R17160 order_extension OrdSafeAFS afs_filt def
R17173 Coq.Lists.List "x ++ y" not
R17178 Coq.Lists.List "x :: y" not
R17212 Coq.Init.Logic "'exists' x , p" not
R17223 Coq.Init.Logic "'exists' x , p" not
R17234 Coq.Init.Logic "'exists' x , p" not
R17268 Coq.Init.Logic "x = y" not
R17256 Coq.Lists.List "x :: y" not
R17262 Coq.Lists.List "x :: y" not
R17270 order_extension OrdSafeAFS dissect def
R17279 Coq.Lists.List <> length def
R17309 order_extension OrdSafeAFS dissect_in thm
R17340 Coq.Lists.List <> app_length thm
R17377 Coq.Lists.List <> length def
R17405 Coq.Arith.Plus <> plus_0_r thm
R17435 Coq.Arith.Plus <> plus_lt_compat_l thm
R17464 Coq.Arith.Lt <> lt_O_Sn thm
R17212 Coq.Init.Logic "'exists' x , p" not
R17223 Coq.Init.Logic "'exists' x , p" not
R17234 Coq.Init.Logic "'exists' x , p" not
R17268 Coq.Init.Logic "x = y" not
R17256 Coq.Lists.List "x :: y" not
R17262 Coq.Lists.List "x :: y" not
R17270 order_extension OrdSafeAFS dissect def
R17279 Coq.Lists.List <> length def
R17309 order_extension OrdSafeAFS dissect_in thm
R17340 Coq.Lists.List <> app_length thm
R17377 Coq.Lists.List <> length def
R17405 Coq.Arith.Plus <> plus_0_r thm
R17435 Coq.Arith.Plus <> plus_lt_compat_l thm
R17464 Coq.Arith.Lt <> lt_O_Sn thm
R17496 order_extension OrdSafeAFS dissect def
R17505 Coq.Lists.List <> length def
R17671 weaved_relation <> rwr_list_expand_strong thm
R17750 order_extension OrdSafeAFS intersperse def
R17765 Coq.Lists.List <> map def
R17774 Coq.Lists.List "x :: y" not
R17797 order_extension OrdSafeAFS intersperse def
R17812 Coq.Lists.List <> map def
R17821 Coq.Lists.List "x :: y" not
R17496 order_extension OrdSafeAFS dissect def
R17505 Coq.Lists.List <> length def
R17671 weaved_relation <> rwr_list_expand_strong thm
R17750 order_extension OrdSafeAFS intersperse def
R17765 Coq.Lists.List <> map def
R17774 Coq.Lists.List "x :: y" not
R17797 order_extension OrdSafeAFS intersperse def
R17812 Coq.Lists.List <> map def
R17821 Coq.Lists.List "x :: y" not
prf 18084 OrdSafeAFS Tlt_monotone_afs
R18103 order_extension OrdSafeAFS.op Trel_monotone def
R18149 order_extension OrdSafeAFS gen_monotone_afs thm
R18149 order_extension OrdSafeAFS gen_monotone_afs thm
prf 18231 OrdSafeAFS Tle_monotone_afs
R18250 order_extension OrdSafeAFS.op Trel_monotone def
R18296 order_extension OrdSafeAFS gen_monotone_afs thm
R18296 order_extension OrdSafeAFS gen_monotone_afs thm
def 18383 OrdSafeAFS sigma_afs
R18427 Coq.Lists.List <> map def
R18441 Coq.Init.Datatypes "( x , y , .. , z )" not
R18442 Coq.Init.Datatypes <> fst def
R18454 Coq.Init.Datatypes <> snd def
R18402 order_extension Eqt.T substitution def
prf 18481 OrdSafeAFS afs_subst
R18543 Coq.Init.Logic "x = y" not
R18520 order_extension Eqt.T apply_subst def
R18545 order_extension Eqt.T apply_subst def
R18560 order_extension OrdSafeAFS sigma_afs def
R18628 order_extension Eqt.T term_rec3 defax
R18628 order_extension Eqt.T term_rec3 defax
R18730 order_extension Eqt.T eq_var_bool syndef
R18730 order_extension Eqt.T eq_var_bool syndef
R18888 Coq.Lists.List <> map_length thm
R18908 Coq.Lists.List <> map_length thm
R18928 Coq.Lists.List <> map_length thm
R18958 order_extension OrdSafeAFS afs_rest def
R18974 Coq.Lists.List <> length def
R18888 Coq.Lists.List <> map_length thm
R18908 Coq.Lists.List <> map_length thm
R18928 Coq.Lists.List <> map_length thm
R18958 order_extension OrdSafeAFS afs_rest def
R18974 Coq.Lists.List <> length def
R19210 Coq.Init.Logic "A \/ B" not
R19168 Coq.Init.Logic "A /\ B" not
R19161 Coq.Init.Logic "x = y" not
R19109 Coq.Lists.List <> nth_error def
R19120 Coq.Lists.List <> map def
R19129 Coq.Lists.List <> map def
R19134 order_extension Eqt.T apply_subst def
R19163 Coq.Init.Datatypes <> None constr
R19204 Coq.Init.Logic "x = y" not
R19180 Coq.Lists.List <> nth_error def
R19191 Coq.Lists.List <> map def
R19206 Coq.Init.Datatypes <> None constr
R19224 Coq.Init.Logic "'exists' x , p" not
R19235 Coq.Init.Logic "'exists' x , p" not
R19317 Coq.Init.Logic "A /\ B" not
R19307 Coq.Init.Logic "x = y" not
R19255 Coq.Lists.List <> nth_error def
R19266 Coq.Lists.List <> map def
R19275 Coq.Lists.List <> map def
R19280 order_extension Eqt.T apply_subst def
R19309 Coq.Init.Datatypes <> Some constr
R19363 Coq.Init.Logic "A /\ B" not
R19353 Coq.Init.Logic "x = y" not
R19329 Coq.Lists.List <> nth_error def
R19340 Coq.Lists.List <> map def
R19355 Coq.Init.Datatypes <> Some constr
R19378 Coq.Init.Logic "x = y" not
R19380 order_extension Eqt.T apply_subst def
R19395 order_extension OrdSafeAFS sigma_afs def
R19210 Coq.Init.Logic "A \/ B" not
R19168 Coq.Init.Logic "A /\ B" not
R19161 Coq.Init.Logic "x = y" not
R19109 Coq.Lists.List <> nth_error def
R19120 Coq.Lists.List <> map def
R19129 Coq.Lists.List <> map def
R19134 order_extension Eqt.T apply_subst def
R19163 Coq.Init.Datatypes <> None constr
R19204 Coq.Init.Logic "x = y" not
R19180 Coq.Lists.List <> nth_error def
R19191 Coq.Lists.List <> map def
R19206 Coq.Init.Datatypes <> None constr
R19224 Coq.Init.Logic "'exists' x , p" not
R19235 Coq.Init.Logic "'exists' x , p" not
R19317 Coq.Init.Logic "A /\ B" not
R19307 Coq.Init.Logic "x = y" not
R19255 Coq.Lists.List <> nth_error def
R19266 Coq.Lists.List <> map def
R19275 Coq.Lists.List <> map def
R19280 order_extension Eqt.T apply_subst def
R19309 Coq.Init.Datatypes <> Some constr
R19363 Coq.Init.Logic "A /\ B" not
R19353 Coq.Init.Logic "x = y" not
R19329 Coq.Lists.List <> nth_error def
R19340 Coq.Lists.List <> map def
R19355 Coq.Init.Datatypes <> Some constr
R19378 Coq.Init.Logic "x = y" not
R19380 order_extension Eqt.T apply_subst def
R19395 order_extension OrdSafeAFS sigma_afs def
R19787 order_extension Eqt.T apply_subst def
R19787 order_extension Eqt.T apply_subst def
R19933 order_extension OrdSafeAFS.S <> sec
R19940 order_extension OrdSafeAFS <> mod
R19975 equational_theory_spec <> <> mod
mod 19960 <> MakeSDP
R20020 order_extension T <> modtype
mod 20015 <> M
R20043 subterm_dp <> <> modtype
R20064 order_extension <> <> modtype
mod 20036 <> sdp
R20092 order_extension OrderingPair <> modtype
R20105 order_extension <> <> modtype
mod 20086 <> op
sec 20122 MakeSDP S
var 20139 MakeSDP.S Tle
var 20143 MakeSDP.S Tlt
R20149 Coq.Relations.Relation_Definitions <> relation def
R20158 order_extension Eqt.T term ind
var 20181 MakeSDP.S Tlt_wf
R20190 Coq.Init.Wf <> well_founded def
var 20223 MakeSDP.S Tle_mono
R20234 order_extension MakeSDP.op Trel_monotone def
var 20268 MakeSDP.S Tlt_Tle_compat
R20285 order_extension MakeSDP.op Trel_compat def
var 20321 MakeSDP.S R_rules
var 20329 MakeSDP.S dps
R20335 Coq.Relations.Relation_Definitions <> relation def
R20344 order_extension Eqt.T term ind
var 20367 MakeSDP.S rules_decrease
R20384 order_extension MakeSDP.op Trel_stable def
var 20424 MakeSDP.S dps_strictly_decrease
R20448 order_extension MakeSDP.op Trel_stable def
prf 20480 MakeSDP rtc_R_step
R20617 order_extension Eqt.T Term constr
R20540 TransClosure <> refl_trans_clos ind
R20557 weaved_relation <> one_step_list ind
R20572 order_extension Eqt one_step ind
R20518 order_extension Eqt.T Term constr
R20784 order_extension Eqt.T Term constr
R20847 order_extension MakeSDP.op stable_monotone_R_list thm
R20784 order_extension Eqt.T Term constr
R20784 order_extension Eqt.T Term constr
R20847 order_extension MakeSDP.op stable_monotone_R_list thm
R20847 order_extension MakeSDP.op stable_monotone_R_list thm
prf 20922 MakeSDP wf_Rcdp
R20932 Coq.Init.Wf <> well_founded def
R20946 order_extension MakeSDP.sdp Rcdp def
R20992 Coq.Wellfounded.Inclusion <> wf_incl thm
R21093 order_extension MakeSDP rtc_R_step thm
R20992 Coq.Wellfounded.Inclusion <> wf_incl thm
R21093 order_extension MakeSDP rtc_R_step thm
var 21221 MakeSDP.S P_rest
R21230 order_extension Eqt.T term ind
def 21254 MakeSDP Rcdp_rest
R21269 closure <> rest def
R21282 order_extension MakeSDP.sdp Rcdp def
prf 21314 MakeSDP wf_Rcdp_rest
R21329 Coq.Init.Wf <> well_founded def
R21396 order_extension MakeSDP.sdp Rcdp def
R21382 Coq.Wellfounded.Inclusion <> wf_incl thm
R21465 order_extension MakeSDP wf_Rcdp thm
R21396 order_extension MakeSDP.sdp Rcdp def
R21382 Coq.Wellfounded.Inclusion <> wf_incl thm
R21465 order_extension MakeSDP wf_Rcdp thm
var 21500 MakeSDP.S dps_large
var 21510 MakeSDP.S dps_union
R21522 Coq.Relations.Relation_Definitions <> relation def
R21531 order_extension Eqt.T term ind
var 21554 MakeSDP.S dps_large_decrease
R21575 order_extension MakeSDP.op Trel_stable def
var 21617 MakeSDP.S dps_large_wf
R21632 Coq.Init.Wf <> well_founded def
var 21683 MakeSDP.S dps_union_def
R21759 Coq.Init.Logic "A \/ B" not
R21715 order_extension Eqt.T term ind
R21715 order_extension Eqt.T term ind
prf 21790 MakeSDP wf_union_Rcdp_rest
R21811 Coq.Init.Wf <> well_founded def
R21886 Coq.Init.Wf <> well_founded_ind thm
R21886 Coq.Init.Wf <> well_founded_ind thm
R21992 Coq.Init.Wf <> well_founded_ind thm
R21992 Coq.Init.Wf <> well_founded_ind thm
R22282 order_extension MakeSDP rtc_R_step thm
R22282 order_extension MakeSDP rtc_R_step thm
R22560 order_extension MakeSDP rtc_R_step thm
R22638 order_extension Eqt.T apply_subst def
R22560 order_extension MakeSDP rtc_R_step thm
R22638 order_extension Eqt.T apply_subst def
R22753 order_extension MakeSDP.S <> sec
R22760 order_extension MakeSDP <> mod
R22801 equational_theory_spec <> <> mod
R22840 equational_theory_spec <> <> mod
R22887 order_extension T.X <> modtype
mod 22777 <> MakeMarkedSDP
R22913 order_extension T <> modtype
mod 22908 <> T
R22935 order_extension T <> modtype
mod 22930 <> M
R22959 order_extension OrderingPair <> modtype
R22972 order_extension <> <> modtype
mod 22952 <> opT
R22995 order_extension OrderingPair <> modtype
R23008 order_extension <> <> modtype
mod 22988 <> opM
R23032 subterm_dp <> <> modtype
R23053 order_extension <> <> modtype
mod 23025 <> sdp
sec 23071 MakeMarkedSDP S
var 23088 MakeMarkedSDP.S Tle
var 23092 MakeMarkedSDP.S Tlt
R23098 Coq.Relations.Relation_Definitions <> relation def
R23107 order_extension EqtM.T term ind
var 23130 MakeMarkedSDP.S Tlt_wf
R23139 Coq.Init.Wf <> well_founded def
var 23172 MakeMarkedSDP.S Tle_mono
R23183 order_extension MakeMarkedSDP.opM Trel_monotone def
var 23221 MakeMarkedSDP.S Tlt_Tle_compat
R23238 order_extension MakeMarkedSDP.opM Trel_compat def
var 23277 MakeMarkedSDP.S inject_symb
R23303 order_extension EqtM.T symbol syndef
R23291 order_extension EqtT.T symbol syndef
def 23327 MakeMarkedSDP inject_term
R23344 order_extension EqtT.T term ind
R23354 order_extension EqtM.T term ind
R23391 order_extension EqtT.T Term constr
R23406 order_extension EqtM.T Term constr
R23430 Coq.Lists.List <> map def
R23439 order_extension <> inject_term def
R23463 order_extension EqtT.T Var constr
R23474 order_extension EqtM.T Var constr
var 23507 MakeMarkedSDP.S mark_symb
R23531 order_extension EqtM.T symbol syndef
R23519 order_extension EqtM.T symbol syndef
def 23557 MakeMarkedSDP mark_term
R23582 order_extension EqtM.T term ind
R23619 order_extension EqtM.T Term constr
R23634 order_extension EqtM.T Term constr
R23572 order_extension EqtM.T term ind
def 23700 MakeMarkedSDP sigma_inject
R23740 order_extension EqtM.T substitution def
R23764 Coq.Lists.List <> map def
R23778 Coq.Init.Datatypes "( x , y , .. , z )" not
R23779 Coq.Init.Datatypes <> fst def
R23786 order_extension MakeMarkedSDP inject_term def
R23799 Coq.Init.Datatypes <> snd def
R23722 order_extension EqtT.T substitution def
prf 23826 MakeMarkedSDP inject_subst
R23899 Coq.Init.Logic "x = y" not
R23863 order_extension MakeMarkedSDP inject_term def
R23876 order_extension EqtT.T apply_subst def
R23901 order_extension EqtM.T apply_subst def
R23937 order_extension MakeMarkedSDP inject_term def
R23916 order_extension MakeMarkedSDP sigma_inject def
R23995 order_extension EqtT.T term_rec3 defax
R23995 order_extension EqtT.T term_rec3 defax
R24097 order_extension EqtM.T eq_var_bool syndef
R24097 order_extension EqtM.T eq_var_bool syndef
def 24352 MakeMarkedSDP is_fapp
R24410 order_extension EqtT.T Term constr
R24424 Coq.Init.Logic <> True ind
R24442 Coq.Init.Logic <> False ind
R24365 order_extension EqtT.T term ind
prf 24470 MakeMarkedSDP mark_inject_subst
R24573 Coq.Init.Logic "x = y" not
R24525 order_extension MakeMarkedSDP mark_term def
R24536 order_extension MakeMarkedSDP inject_term def
R24549 order_extension EqtT.T apply_subst def
R24581 order_extension EqtM.T apply_subst def
R24617 order_extension MakeMarkedSDP mark_term def
R24628 order_extension MakeMarkedSDP inject_term def
R24596 order_extension MakeMarkedSDP sigma_inject def
R24506 order_extension MakeMarkedSDP is_fapp def
R24796 order_extension MakeMarkedSDP inject_subst thm
R24796 order_extension MakeMarkedSDP inject_subst thm
def 24843 MakeMarkedSDP Tlt_mark
R24912 order_extension MakeMarkedSDP mark_term def
R24923 order_extension MakeMarkedSDP inject_term def
R24883 order_extension MakeMarkedSDP mark_term def
R24894 order_extension MakeMarkedSDP inject_term def
R24861 order_extension EqtT.T term ind
R24861 order_extension EqtT.T term ind
def 24950 MakeMarkedSDP Tle_mark
R25019 order_extension MakeMarkedSDP mark_term def
R25030 order_extension MakeMarkedSDP inject_term def
R24990 order_extension MakeMarkedSDP mark_term def
R25001 order_extension MakeMarkedSDP inject_term def
R24968 order_extension EqtT.T term ind
R24968 order_extension EqtT.T term ind
def 25057 MakeMarkedSDP Tle_inject
R25116 order_extension MakeMarkedSDP inject_term def
R25099 order_extension MakeMarkedSDP inject_term def
R25077 order_extension EqtT.T term ind
R25077 order_extension EqtT.T term ind
var 25148 MakeMarkedSDP.S R_rules
var 25156 MakeMarkedSDP.S dps
R25162 Coq.Relations.Relation_Definitions <> relation def
R25171 order_extension EqtT.T term ind
var 25194 MakeMarkedSDP.S rules_decrease
R25211 order_extension MakeMarkedSDP.opT Trel_stable def
var 25262 MakeMarkedSDP.S dps_strictly_decrease
R25286 order_extension MakeMarkedSDP.opT Trel_stable def
prf 25327 MakeMarkedSDP Tle_inject_mono
R25345 order_extension MakeMarkedSDP.opT Trel_monotone def
prf 25521 MakeMarkedSDP R_stable_list
R25610 weaved_relation <> one_step_list ind
R25650 Coq.Lists.List <> map def
R25654 order_extension MakeMarkedSDP inject_term def
R25629 Coq.Lists.List <> map def
R25633 order_extension MakeMarkedSDP inject_term def
R25557 weaved_relation <> one_step_list ind
R25572 order_extension EqtT one_step ind
R25759 order_extension MakeMarkedSDP.opT stable_monotone_R_term thm
R25841 order_extension MakeMarkedSDP Tle_inject_mono thm
R25759 order_extension MakeMarkedSDP.opT stable_monotone_R_term thm
R25841 order_extension MakeMarkedSDP Tle_inject_mono thm
prf 25878 MakeMarkedSDP rtc_R_step
R26026 order_extension EqtT.T Term constr
R25943 TransClosure <> refl_trans_clos ind
R25960 weaved_relation <> one_step_list ind
R25975 order_extension EqtT one_step ind
R25921 order_extension EqtT.T Term constr
R26193 order_extension MakeMarkedSDP mark_term def
R26204 order_extension MakeMarkedSDP inject_term def
R26217 order_extension EqtT.T Term constr
R26283 order_extension MakeMarkedSDP R_stable_list thm
R26193 order_extension MakeMarkedSDP mark_term def
R26204 order_extension MakeMarkedSDP inject_term def
R26217 order_extension EqtT.T Term constr
R26193 order_extension MakeMarkedSDP mark_term def
R26204 order_extension MakeMarkedSDP inject_term def
R26217 order_extension EqtT.T Term constr
R26283 order_extension MakeMarkedSDP R_stable_list thm
R26283 order_extension MakeMarkedSDP R_stable_list thm
prf 26336 MakeMarkedSDP wf_Rcdp
R26346 Coq.Init.Wf <> well_founded def
R26360 order_extension MakeMarkedSDP.sdp Rcdp def
R26406 Coq.Wellfounded.Inclusion <> wf_incl thm
R26444 Coq.Wellfounded.Inverse_Image <> wf_inverse_image thm
R26556 order_extension MakeMarkedSDP rtc_R_step thm
R26406 Coq.Wellfounded.Inclusion <> wf_incl thm
R26444 Coq.Wellfounded.Inverse_Image <> wf_inverse_image thm
R26556 order_extension MakeMarkedSDP rtc_R_step thm
var 26684 MakeMarkedSDP.S P_rest
R26693 order_extension EqtT.T term ind
def 26717 MakeMarkedSDP Rcdp_rest
R26732 closure <> rest def
R26745 order_extension MakeMarkedSDP.sdp Rcdp def
prf 26777 MakeMarkedSDP wf_Rcdp_rest
R26792 Coq.Init.Wf <> well_founded def
R26859 order_extension MakeMarkedSDP.sdp Rcdp def
R26845 Coq.Wellfounded.Inclusion <> wf_incl thm
R26928 order_extension MakeMarkedSDP wf_Rcdp thm
R26859 order_extension MakeMarkedSDP.sdp Rcdp def
R26845 Coq.Wellfounded.Inclusion <> wf_incl thm
R26928 order_extension MakeMarkedSDP wf_Rcdp thm
var 26963 MakeMarkedSDP.S dps_large
var 26973 MakeMarkedSDP.S dps_union
R26985 Coq.Relations.Relation_Definitions <> relation def
R26994 order_extension EqtT.T term ind
var 27017 MakeMarkedSDP.S dps_large_decrease
R27038 order_extension MakeMarkedSDP.opT Trel_stable def
var 27089 MakeMarkedSDP.S dps_large_wf
R27104 Coq.Init.Wf <> well_founded def
var 27155 MakeMarkedSDP.S dps_union_def
R27231 Coq.Init.Logic "A \/ B" not
R27187 order_extension EqtT.T term ind
R27187 order_extension EqtT.T term ind
prf 27262 MakeMarkedSDP wf_union_Rcdp_rest
R27283 Coq.Init.Wf <> well_founded def
R27358 Coq.Init.Wf <> well_founded_ind thm
R27409 Coq.Wellfounded.Inverse_Image <> wf_inverse_image thm
R27358 Coq.Init.Wf <> well_founded_ind thm
R27409 Coq.Wellfounded.Inverse_Image <> wf_inverse_image thm
R27511 Coq.Init.Wf <> well_founded_ind thm
R27511 Coq.Init.Wf <> well_founded_ind thm
R27801 order_extension MakeMarkedSDP rtc_R_step thm
R27801 order_extension MakeMarkedSDP rtc_R_step thm
R28079 order_extension MakeMarkedSDP rtc_R_step thm
R28157 order_extension MakeMarkedSDP mark_term def
R28168 order_extension MakeMarkedSDP inject_term def
R28181 order_extension EqtT.T apply_subst def
R28079 order_extension MakeMarkedSDP rtc_R_step thm
R28157 order_extension MakeMarkedSDP mark_term def
R28168 order_extension MakeMarkedSDP inject_term def
R28181 order_extension EqtT.T apply_subst def
R28286 order_extension MakeMarkedSDP.S <> sec
R28293 order_extension MakeMarkedSDP <> mod
R28331 equational_theory_spec <> <> mod
mod 28316 <> MakeLEX
R28376 order_extension T <> modtype
mod 28371 <> M
R28405 order_extension OrderingPair <> modtype
R28418 order_extension <> <> modtype
mod 28399 <> op
sec 28435 MakeLEX S
var 28452 MakeLEX.S Tle
var 28456 MakeLEX.S Tlt
R28462 Coq.Relations.Relation_Definitions <> relation def
R28471 order_extension Eqt.T term ind
var 28494 MakeLEX.S Tlt_wf
R28503 Coq.Init.Wf <> well_founded def
var 28536 MakeLEX.S Tle_mono
R28547 order_extension MakeLEX.op Trel_monotone def
var 28581 MakeLEX.S Tlt_mono
R28592 order_extension MakeLEX.op Trel_monotone def
var 28626 MakeLEX.S Tlt_Tle_compat
R28643 order_extension MakeLEX.op Trel_compat def
var 28679 MakeLEX.S R_rules
R28689 Coq.Relations.Relation_Definitions <> relation def
R28698 order_extension Eqt.T term ind
var 28721 MakeLEX.S rules_decrease
R28738 order_extension MakeLEX.op Trel_stable def
prf 28774 MakeLEX wf_R
R28781 Coq.Init.Wf <> well_founded def
R28795 order_extension Eqt one_step ind
R28841 Coq.Wellfounded.Inclusion <> wf_incl thm
R28908 order_extension MakeLEX.op stable_monotone_R_term thm
R28841 Coq.Wellfounded.Inclusion <> wf_incl thm
R28908 order_extension MakeLEX.op stable_monotone_R_term thm
var 28987 MakeLEX.S R_large
var 28995 MakeLEX.S R_union
R29005 Coq.Relations.Relation_Definitions <> relation def
R29014 order_extension Eqt.T term ind
var 29037 MakeLEX.S rules_large_decrease
R29060 order_extension MakeLEX.op Trel_stable def
var 29100 MakeLEX.S rules_large_wf
R29117 Coq.Init.Wf <> well_founded def
R29131 order_extension Eqt one_step ind
var 29169 MakeLEX.S rules_union_def
R29249 Coq.Init.Logic "A \/ B" not
R29203 order_extension Eqt.T term ind
R29203 order_extension Eqt.T term ind
prf 29278 MakeLEX wf_union_R
R29291 Coq.Init.Wf <> well_founded def
R29305 order_extension Eqt one_step ind
R29367 Coq.Init.Wf <> well_founded_ind thm
R29367 Coq.Init.Wf <> well_founded_ind thm
R29499 order_extension Eqt one_step ind
R29473 Coq.Init.Wf <> well_founded_ind thm
R29499 order_extension Eqt one_step ind
R29473 Coq.Init.Wf <> well_founded_ind thm
R29652 Coq.Init.Logic "A \/ B" not
R29627 order_extension Eqt one_step ind
R29655 order_extension Eqt one_step ind
R29652 Coq.Init.Logic "A \/ B" not
R29627 order_extension Eqt one_step ind
R29655 order_extension Eqt one_step ind
R29814 Coq.Init.Logic "A \/ B" not
R29789 order_extension Eqt one_step ind
R29817 order_extension Eqt one_step ind
R29753 order_extension Eqt one_step ind
R30038 Coq.Init.Logic "A \/ B" not
R29995 weaved_relation <> one_step_list ind
R30010 order_extension Eqt one_step ind
R30049 weaved_relation <> one_step_list ind
R30064 order_extension Eqt one_step ind
R29941 weaved_relation <> one_step_list ind
R29956 order_extension Eqt one_step ind
R29895 order_extension Eqt.T term_rec7 defax
R29814 Coq.Init.Logic "A \/ B" not
R29789 order_extension Eqt one_step ind
R29817 order_extension Eqt one_step ind
R29753 order_extension Eqt one_step ind
R30038 Coq.Init.Logic "A \/ B" not
R29995 weaved_relation <> one_step_list ind
R30010 order_extension Eqt one_step ind
R30049 weaved_relation <> one_step_list ind
R30064 order_extension Eqt one_step ind
R29941 weaved_relation <> one_step_list ind
R29956 order_extension Eqt one_step ind
R29895 order_extension Eqt.T term_rec7 defax
R31206 order_extension MakeLEX.op stable_monotone_R_term thm
R31206 order_extension MakeLEX.op stable_monotone_R_term thm
R31382 order_extension MakeLEX.op stable_monotone_R_term thm
R31382 order_extension MakeLEX.op stable_monotone_R_term thm
R31452 order_extension MakeLEX.S <> sec
R31459 order_extension MakeLEX <> mod
