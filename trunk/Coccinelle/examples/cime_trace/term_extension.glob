Fterm_extension
R15 Coq.Lists.List <> <> lib
R36 Coq.Bool.Bool <> <> lib
R57 TransClosure <> <> lib
R79 term <> <> lib
R93 terminaison <> <> lib
R121 term_spec <> <> mod
mod 114 <> Make
R202 Coq.Lists.List <> nil constr
R237 Coq.Lists.List "x :: y" not
R345 TransClosure <> refl_trans_clos ind
R470 Coq.Lists.List "x :: y" not
R218 Coq.Lists.List <> nil constr
R222 term_extension M term ind
R549 Coq.Lists.List <> nil constr
R572 Coq.Lists.List "x :: y" not
R704 term_extension M Term constr
R757 term_extension M Var constr
R1098 TransClosure <> refl_trans_clos ind
def 1227 Make eq_term_term_bool
R1261 Coq.Init.Datatypes <> bool ind
R1308 Coq.Init.Datatypes "( x , y , .. , z )" not
R1316 Coq.Init.Datatypes "( x , y , .. , z )" not
R1329 Coq.Init.Datatypes <> andb def
R1354 term_extension M eq_bool def
R1335 term_extension M eq_bool def
prf 1390 Make eq_term_term_bool_ok
R1443 term_extension Make eq_term_term_bool def
R1507 Coq.Init.Logic "x <> y" not
R1486 Coq.Init.Logic "x = y" not
R1585 term_extension M eq_bool_ok defax
R1585 term_extension M eq_bool_ok defax
R1617 term_extension M eq_bool def
R1617 term_extension M eq_bool def
R1650 term_extension M eq_bool_ok defax
R1650 term_extension M eq_bool_ok defax
R1682 term_extension M eq_bool def
R1682 term_extension M eq_bool def
prf 1903 Make term_eq_bool_equiv
R1956 Coq.Init.Logic "A <-> B" not
R1952 Coq.Init.Logic "x = y" not
R1974 Coq.Init.Logic "x = y" not
R1960 term_extension M eq_bool def
R1976 Coq.Init.Datatypes <> true constr
R1942 term_extension M term ind
R1942 term_extension M term ind
R2023 term_extension M eq_bool_ok defax
R2023 term_extension M eq_bool_ok defax
R2052 term_extension M eq_bool def
R2052 term_extension M eq_bool def
R2119 term_extension Make <> mod
mod 2134 <> IntVars
def 2154 IntVars A
R2159 Coq.Init.Datatypes <> nat ind
def 2173 IntVars eq_bool
R2188 Coq.Init.Datatypes <> nat ind
R2195 Coq.Init.Datatypes <> bool ind
R2230 Coq.Init.Datatypes "" not
R2232 Coq.Init.Datatypes "" not
R2237 Coq.Init.Datatypes <> true constr
R2249 Coq.Init.Datatypes <> S constr
R2254 Coq.Init.Datatypes <> S constr
R2262 term_extension <> eq_bool def
R2289 Coq.Init.Datatypes <> false constr
prf 2311 IntVars eq_bool_ok
R2341 term_extension IntVars eq_bool def
R2373 Coq.Init.Logic "x <> y" not
R2362 Coq.Init.Logic "x = y" not
R2448 Coq.Init.Logic <> refl_equal constr
R2448 Coq.Init.Logic <> refl_equal constr
R2558 term_extension IntVars eq_bool def
R2558 term_extension IntVars eq_bool def
R2678 term_extension IntVars <> mod
