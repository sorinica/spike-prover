Fmore_list_extention
R15 more_list <> <> lib
R41 decidable_set <> <> lib
R71 list_set <> <> lib
R96 Coq.Lists.List <> <> lib
R110 Coq.omega.Omega <> <> lib
modtype 129 <> S
ax 144 S A
R157 more_list_extention S <> modtype
R175 more_list_extention S <> mod
R180 decidable_set <> <> mod
R216 more_list_extention AX A defax
R244 Coq.Init.Logic <> eq ind
R247 more_list_extention AX A defax
mod 167 <> Make
R272 list_set <> <> modtype
R286 more_list_extention <> <> modtype
mod 263 <> XSet
prf 339 Make mem_bool_app
R411 Coq.Init.Logic "x = y" not
R384 more_list <> mem_bool def
R406 Coq.Lists.List "x ++ y" not
R393 more_list_extention X eq_bool defax
R415 Coq.Init.Datatypes <> orb def
R444 more_list <> mem_bool def
R453 more_list_extention X eq_bool defax
R420 more_list <> mem_bool def
R429 more_list_extention X eq_bool defax
R520 more_list <> mem_bool def
R529 more_list_extention X eq_bool defax
R520 more_list <> mem_bool def
R529 more_list_extention X eq_bool defax
sec 647 Make S
var 665 Make.S order
R683 Coq.Init.Datatypes <> bool ind
R678 more_list_extention AX A defax
R673 more_list_extention AX A defax
R749 Coq.Init.Datatypes "x * y" not
R742 Coq.Lists.List <> list ind
R747 more_list_extention AX A defax
R751 Coq.Lists.List <> list ind
R756 more_list_extention AX A defax
R726 more_list_extention AX A defax
R714 Coq.Lists.List <> list ind
R719 more_list_extention AX A defax
R794 Coq.Lists.List <> nil constr
R801 Coq.Init.Datatypes "( x , y , .. , z )" not
R802 Coq.Lists.List <> nil constr
R806 Coq.Lists.List <> nil constr
R822 Coq.Lists.List "x :: y" not
R856 more_list_extention <> split def
R946 Coq.Init.Datatypes "( x , y , .. , z )" not
R951 Coq.Lists.List "x :: y" not
R916 Coq.Init.Datatypes "( x , y , .. , z )" not
R918 Coq.Lists.List "x :: y" not
R726 more_list_extention AX A defax
R714 Coq.Lists.List <> list ind
R719 more_list_extention AX A defax
R714 Coq.Lists.List <> list ind
R719 more_list_extention AX A defax
R726 more_list_extention AX A defax
R749 Coq.Init.Datatypes "x * y" not
R742 Coq.Lists.List <> list ind
R747 more_list_extention AX A defax
R751 Coq.Lists.List <> list ind
R756 more_list_extention AX A defax
R794 Coq.Lists.List <> nil constr
R801 Coq.Init.Datatypes "( x , y , .. , z )" not
R802 Coq.Lists.List <> nil constr
R806 Coq.Lists.List <> nil constr
R822 Coq.Lists.List "x :: y" not
R856 more_list_extention <> split def
R946 Coq.Init.Datatypes "( x , y , .. , z )" not
R951 Coq.Lists.List "x :: y" not
R916 Coq.Init.Datatypes "( x , y , .. , z )" not
R918 Coq.Lists.List "x :: y" not
prf 979 Make split_length
R1037 more_list_extention Make split def
R1093 Coq.Init.Logic "x = y" not
R1076 Coq.Init.Peano "n + m" not
R1061 Coq.Lists.List <> length def
R1078 Coq.Lists.List <> length def
R1095 Coq.Lists.List <> length def
R1180 more_list_extention Make split def
R1180 more_list_extention Make split def
R1322 Coq.funind.Recdef <> <> lib
R1377 Coq.Lists.List <> list ind
R1382 more_list_extention AX A defax
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1418 Coq.Lists.List <> nil constr
R1425 Coq.Lists.List <> nil constr
R1440 Coq.Lists.List "x :: y" not
R1474 more_list_extention Make split def
R1507 Coq.Lists.List "x ++ y" not
R1502 more_list_extention <> qs def
R1511 Coq.Lists.List "x :: y" not
R1514 more_list_extention <> qs def
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1377 Coq.Lists.List <> list ind
R1382 more_list_extention AX A defax
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1418 Coq.Lists.List <> nil constr
R1425 Coq.Lists.List <> nil constr
R1440 Coq.Lists.List "x :: y" not
R1474 more_list_extention Make split def
R1507 Coq.Lists.List "x ++ y" not
R1502 more_list_extention <> qs def
R1511 Coq.Lists.List "x :: y" not
R1514 more_list_extention <> qs def
R0 more_list_extention <> qs def
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1366 Coq.Lists.List <> length def
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1349 Coq.Lists.List <> list ind
R1354 more_list_extention AX A defax
R1577 more_list_extention Make split_length thm
R1577 more_list_extention Make split_length thm
R1680 more_list_extention Make split_length thm
R1680 more_list_extention Make split_length thm
prf 1773 Make split_mem_bool
R1870 Coq.Init.Logic "x = y" not
R1849 more_list <> mem_bool def
R1858 more_list_extention X eq_bool defax
R1872 Coq.Init.Datatypes <> orb def
R1901 more_list <> mem_bool def
R1910 more_list_extention X eq_bool defax
R1877 more_list <> mem_bool def
R1886 more_list_extention X eq_bool defax
R1827 Coq.Init.Logic "x = y" not
R1817 more_list_extention Make split def
R1829 Coq.Init.Datatypes "( x , y , .. , z )" not
R1986 more_list_extention Make split def
R1986 more_list_extention Make split def
R2196 more_list_extention X eq_bool defax
R2216 more_list <> mem_bool def
R2225 more_list_extention X eq_bool defax
R2247 more_list <> mem_bool def
R2256 more_list_extention X eq_bool defax
R2196 more_list_extention X eq_bool defax
R2216 more_list <> mem_bool def
R2225 more_list_extention X eq_bool defax
R2216 more_list <> mem_bool def
R2225 more_list_extention X eq_bool defax
R2247 more_list <> mem_bool def
R2256 more_list_extention X eq_bool defax
R2247 more_list <> mem_bool def
R2256 more_list_extention X eq_bool defax
R2247 more_list <> mem_bool def
R2256 more_list_extention X eq_bool defax
R2247 more_list <> mem_bool def
R2256 more_list_extention X eq_bool defax
prf 2312 Make qs_valid
R2373 Coq.Init.Logic "x = y" not
R2342 more_list <> mem_bool def
R2361 more_list_extention X eq_bool defax
R2375 more_list <> mem_bool def
R2405 more_list_extention Make qs thm
R2394 more_list_extention X eq_bool defax
R2469 more_list_extention Make qs thm
R2469 more_list_extention Make qs thm
R2522 more_list_extention Make mem_bool_app thm
R2522 more_list_extention Make mem_bool_app thm
R2609 more_list_extention Make split_mem_bool thm
R2609 more_list_extention Make split_mem_bool thm
R2650 more_list_extention X eq_bool defax
R2669 more_list <> mem_bool def
R2678 more_list_extention X eq_bool defax
R2699 more_list <> mem_bool def
R2708 more_list_extention X eq_bool defax
R2650 more_list_extention X eq_bool defax
R2669 more_list <> mem_bool def
R2678 more_list_extention X eq_bool defax
R2669 more_list <> mem_bool def
R2678 more_list_extention X eq_bool defax
R2699 more_list <> mem_bool def
R2708 more_list_extention X eq_bool defax
R2699 more_list <> mem_bool def
R2708 more_list_extention X eq_bool defax
R2699 more_list <> mem_bool def
R2708 more_list_extention X eq_bool defax
R2699 more_list <> mem_bool def
R2708 more_list_extention X eq_bool defax
R2759 more_list_extention Make.S <> sec
prf 2771 Make change_in
R2885 Coq.Init.Logic "x = y" not
R2830 more_list <> mem_bool def
R2860 more_list_extention Make qs thm
R2870 more_list_extention Make.XSet remove_red def
R2849 more_list_extention X eq_bool defax
R2887 Coq.Init.Datatypes <> true constr
R2813 Coq.Lists.List <> In def
R2937 more_list <> in_impl_mem thm
R2983 Coq.Init.Logic <> refl_equal constr
R2961 Coq.Init.Logic <> eq ind
R2964 more_list_extention AX A defax
R2937 more_list <> in_impl_mem thm
R2983 Coq.Init.Logic <> refl_equal constr
R2961 Coq.Init.Logic <> eq ind
R2964 more_list_extention AX A defax
R3015 more_list_extention Make.XSet remove_red_included thm
R3015 more_list_extention Make.XSet remove_red_included thm
R3068 more_list <> mem_bool_ok thm
R3108 more_list_extention Make.XSet remove_red def
R3094 more_list_extention X eq_bool_ok defax
R3068 more_list <> mem_bool_ok thm
R3108 more_list_extention Make.XSet remove_red def
R3094 more_list_extention X eq_bool_ok defax
R3138 more_list <> mem_bool def
R3168 more_list_extention Make.XSet remove_red def
R3157 more_list_extention X eq_bool defax
R3138 more_list <> mem_bool def
R3168 more_list_extention Make.XSet remove_red def
R3157 more_list_extention X eq_bool defax
R3267 more_list_extention Make qs_valid thm
R3267 more_list_extention Make qs_valid thm
R3315 more_list_extention Make <> mod
