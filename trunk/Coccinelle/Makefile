#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile V8.3        ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -I basis -I list_extensions -I term_algebra -I term_orderings -I ac_matching -I unification -I examples/cime_trace basis/closure.v basis/decidable_set.v basis/more_logic.v basis/ordered_set.v basis/Qwf.v basis/terminaison.v basis/TransClosure.v list_extensions/dickson.v list_extensions/equiv_list.v list_extensions/list_permut.v list_extensions/list_set.v list_extensions/list_sort.v list_extensions/math_permut.v list_extensions/more_list.v list_extensions/weaved_relation.v term_algebra/equational_theory_spec.v term_algebra/equational_theory.v term_algebra/rwr_strategies.v term_algebra/term_spec.v term_algebra/term.v term_orderings/dp.v term_orderings/graph_dp.v term_orderings/igraph_dp.v term_orderings/inner_dp.v term_orderings/interp.v term_orderings/isubterm_dp.v term_orderings/matrix.v term_orderings/modular_dp.v term_orderings/rpo.v term_orderings/subterm_dp.v term_orderings/term_o.v term_orderings/usable_rules_dp.v ac_matching/ac.v ac_matching/cf_eq_ac.v ac_matching/matching_algo.v ac_matching/matching_complete.v ac_matching/matching_sound.v ac_matching/matching.v ac_matching/matching_well_formed.v ac_matching/matching_well_founded.v unification/free_unif.v unification/unification.v examples/cime_trace/arith_extension.v examples/cime_trace/closure_extension.v examples/cime_trace/dp_extension.v examples/cime_trace/equational_extension.v examples/cime_trace/more_list_extention.v examples/cime_trace/Newman.v examples/cime_trace/non_termination.v examples/cime_trace/order_extension.v examples/cime_trace/or_ext_generated.v examples/cime_trace/rewriting.v examples/cime_trace/ring_extention2.v examples/cime_trace/ring_extention.v examples/cime_trace/rpo_extension.v examples/cime_trace/term_extension.v 
#

# 
# This Makefile may take 3 arguments passed as environment variables:
#   - COQBIN to specify the directory where Coq binaries resides;
#   - CAMLBIN and CAMLP4BIN to give the path for the OCaml and Camlp4/5 binaries.
COQLIB:=$(shell $(COQBIN)coqtop -where | sed -e 's/\\/\\\\/g')
CAMLP4:="$(shell $(COQBIN)coqtop -config | awk -F = '/CAMLP4=/{print $$2}')"
ifndef CAMLP4BIN
  CAMLP4BIN:=$(CAMLBIN)
endif

CAMLP4LIB:=$(shell $(CAMLP4BIN)$(CAMLP4) -where)

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

OCAMLLIBS:=-I basis\
  -I list_extensions\
  -I term_algebra\
  -I term_orderings\
  -I ac_matching\
  -I unification\
  -I examples/cime_trace
COQSRCLIBS:=-I $(COQLIB)/kernel -I $(COQLIB)/lib \
  -I $(COQLIB)/library -I $(COQLIB)/parsing \
  -I $(COQLIB)/pretyping -I $(COQLIB)/interp \
  -I $(COQLIB)/proofs -I $(COQLIB)/tactics \
  -I $(COQLIB)/toplevel \
  -I $(COQLIB)/plugins/cc \
  -I $(COQLIB)/plugins/dp \
  -I $(COQLIB)/plugins/extraction \
  -I $(COQLIB)/plugins/field \
  -I $(COQLIB)/plugins/firstorder \
  -I $(COQLIB)/plugins/fourier \
  -I $(COQLIB)/plugins/funind \
  -I $(COQLIB)/plugins/groebner \
  -I $(COQLIB)/plugins/interface \
  -I $(COQLIB)/plugins/micromega \
  -I $(COQLIB)/plugins/nsatz \
  -I $(COQLIB)/plugins/omega \
  -I $(COQLIB)/plugins/quote \
  -I $(COQLIB)/plugins/ring \
  -I $(COQLIB)/plugins/romega \
  -I $(COQLIB)/plugins/rtauto \
  -I $(COQLIB)/plugins/setoid_ring \
  -I $(COQLIB)/plugins/subtac \
  -I $(COQLIB)/plugins/subtac/test \
  -I $(COQLIB)/plugins/syntax \
  -I $(COQLIB)/plugins/xml
COQLIBS:=-I basis\
  -I list_extensions\
  -I term_algebra\
  -I term_orderings\
  -I ac_matching\
  -I unification\
  -I examples/cime_trace 
COQDOCLIBS:=

##########################
#                        #
# Variables definitions. #
#                        #
##########################

ZFLAGS=$(OCAMLLIBS) $(COQSRCLIBS) -I $(CAMLP4LIB)
OPT:=
COQFLAGS:=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
ifdef CAMLBIN
  COQMKTOPFLAGS:=-camlbin $(CAMLBIN) -camlp4bin $(CAMLP4BIN)
endif
COQC:=$(COQBIN)coqc
COQDEP:=$(COQBIN)coqdep -c
GALLINA:=$(COQBIN)gallina
COQDOC:=$(COQBIN)coqdoc
COQMKTOP:=$(COQBIN)coqmktop
CAMLLIB:=$(shell $(CAMLBIN)ocamlc.opt -where)
CAMLC:=$(CAMLBIN)ocamlc.opt -c -rectypes
CAMLOPTC:=$(CAMLBIN)ocamlopt.opt -c -rectypes
CAMLLINK:=$(CAMLBIN)ocamlc.opt -rectypes
CAMLOPTLINK:=$(CAMLBIN)ocamlopt.opt -rectypes
GRAMMARS:=grammar.cma
CAMLP4EXTEND:=pa_extend.cmo pa_macro.cmo q_MLast.cmo
CAMLP4OPTIONS:=
PP:=-pp "$(CAMLP4BIN)$(CAMLP4)o -I $(CAMLLIB) -I . $(COQSRCLIBS) $(CAMLP4EXTEND) $(GRAMMARS) $(CAMLP4OPTIONS) -impl"

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES:=basis/closure.v\
  basis/decidable_set.v\
  basis/more_logic.v\
  basis/ordered_set.v\
  basis/Qwf.v\
  basis/terminaison.v\
  basis/TransClosure.v\
  list_extensions/dickson.v\
  list_extensions/equiv_list.v\
  list_extensions/list_permut.v\
  list_extensions/list_set.v\
  list_extensions/list_sort.v\
  list_extensions/math_permut.v\
  list_extensions/more_list.v\
  list_extensions/weaved_relation.v\
  term_algebra/equational_theory_spec.v\
  term_algebra/equational_theory.v\
  term_algebra/rwr_strategies.v\
  term_algebra/term_spec.v\
  term_algebra/term.v\
  term_orderings/dp.v\
  term_orderings/graph_dp.v\
  term_orderings/igraph_dp.v\
  term_orderings/inner_dp.v\
  term_orderings/isubterm_dp.v\
  term_orderings/matrix.v\
  term_orderings/modular_dp.v\
  term_orderings/rpo.v\
  term_orderings/subterm_dp.v\
  term_orderings/interp.v\
  term_orderings/term_o.v\
  term_orderings/usable_rules_dp.v\
  ac_matching/ac.v\
  ac_matching/cf_eq_ac.v\
  ac_matching/matching_algo.v\
  ac_matching/matching_complete.v\
  ac_matching/matching_sound.v\
  ac_matching/matching.v\
  ac_matching/matching_well_formed.v\
  ac_matching/matching_well_founded.v\
  unification/free_unif.v\
  unification/unification.v\
  examples/cime_trace/arith_extension.v\
  examples/cime_trace/closure_extension.v\
  examples/cime_trace/dp_extension.v\
  examples/cime_trace/equational_extension.v\
  examples/cime_trace/more_list_extention.v\
  examples/cime_trace/Newman.v\
  examples/cime_trace/non_termination.v\
  examples/cime_trace/order_extension.v\
  examples/cime_trace/or_ext_generated.v\
  examples/cime_trace/rewriting.v\
  examples/cime_trace/ring_extention2.v\
  examples/cime_trace/ring_extention.v\
  examples/cime_trace/rpo_extension.v\
  examples/cime_trace/term_extension.v
VOFILES:=$(VFILES:.v=.vo)
VOFILES0:=$(filter-out ,$(VOFILES))
GLOBFILES:=$(VFILES:.v=.glob)
VIFILES:=$(VFILES:.v=.vi)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)

spike: term_orderings/rpo.vo
all: $(VOFILES) 
spec: $(VIFILES)

gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all.pdf: $(VFILES)
	$(COQDOC) -toc -pdf $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.pdf: $(VFILES)
	$(COQDOC) -toc -pdf -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`



####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend html

%.vo %.glob: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

%.vi: %.v
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

%.g: %.v
	$(GALLINA) $<

%.tex: %.v
	$(COQDOC) -latex $< -o $@

%.html: %.v %.glob
	$(COQDOC) -html $< -o $@

%.g.tex: %.v
	$(COQDOC) -latex -g $< -o $@

%.g.html: %.v %.glob
	$(COQDOC) -html -g $< -o $@

%.v.d: %.v
	$(COQDEP) -slash $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install:
	mkdir -p $(COQLIB)/user-contrib
	(for i in $(VOFILES0); do \
	 install -d `dirname $(COQLIB)/user-contrib/$(INSTALLDEFAULTROOT)/$$i`; \
	 install $$i $(COQLIB)/user-contrib/$(INSTALLDEFAULTROOT)/$$i; \
	 done)

clean:
	rm -f $(CMOFILES) $(CMIFILES) $(CMXFILES) $(CMXSFILES) $(OFILES) $(VOFILES) $(VIFILES) $(GFILES) $(MLFILES:.ml=.cmo) $(MLFILES:.ml=.cmx) *~
	rm -f doc/glob all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(HTMLFILES) $(GHTMLFILES) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) $(VFILES:.v=.v.d)
	- rm -rf html

archclean:
	rm -f *.cmx *.o


printenv: 
	@echo CAMLC =	$(CAMLC)
	@echo CAMLOPTC =	$(CAMLOPTC)
	@echo CAMLP4LIB =	$(CAMLP4LIB)

-include $(VFILES:.v=.v.d)
.SECONDARY: $(VFILES:.v=.v.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

VERSION=1.5
COQVERSION=8.2-1
NAME=coccinelle-$(VERSION)-$(COQVERSION)
export::  
	mkdir -p export/$(NAME)
	for i in `find . -type d | grep -v export | grep -v \.svn `; do mkdir -p export/$(NAME)/$$i; done
	cp Licence*.txt Makefile export/$(NAME)
	for i in `find . -name \*.v | grep -v export | grep -v \.svn`; do cp $$i export/$(NAME)/$$i; done
	cd export; tar zcf $(NAME).tar.gz $(NAME)
.PHONY: doc doc/glob
doc/glob :
	rm -f $(VOFILES)
	$(MAKE) COQDOCFLAGS="-dump-glob doc/glob" all
	rm -f doc/*.html
doc : doc/glob
	 $(COQDOC) --glob-from doc/glob -d doc $(VFILES)
