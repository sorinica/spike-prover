DIGEST a771b05a909e2054e0128a66c1f14c87
FCoccinelle.dickson
R905:910 Coq.Setoids.Setoid <> <> lib
R928:936 Coq.Relations.Relations <> <> lib
R954:957 Coq.Lists.List <> <> lib
R975:983 Coccinelle.more_list <> <> lib
R1001:1008 Coq.Sets.Multiset <> <> lib
R1026:1036 Coccinelle.list_permut <> <> lib
R1054:1064 Coccinelle.ordered_set <> <> lib
R1082:1086 Coq.Arith.Arith <> <> lib
R1104:1110 Coccinelle.closure <> <> lib
R1128:1133 Coq.funind.FunInd <> <> lib
R1179:1181 Coq.Init.Logic <> :type_scope:x_'='_x not
modtype 1256:1256 <> D
R1289:1303 Coccinelle.decidable_set S <> mod
mod 1284:1285 <> D.DS
R1335:1347 Coccinelle.list_permut S <> mod
R1374:1377 Coccinelle.dickson D A defax
R1476:1477 Coq.Init.Logic <> eq ind
R1479:1482 Coccinelle.dickson D A defax
mod 1330:1331 <> D.LP
ind 1559:1581 D multiset_extension_step
constr 1634:1641 D rmv_case
R1588:1595 Coq.Relations.Relation_Definitions <> relation def
R1597:1597 Coccinelle.dickson D A defax
R1608:1611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1618:1621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1612:1615 Coq.Init.Datatypes <> list ind
R1617:1617 Coccinelle.dickson D A defax
R1602:1605 Coq.Init.Datatypes <> list ind
R1607:1607 Coccinelle.dickson D A defax
R1672:1672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1709:1720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1740:1743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1762:1771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1772:1794 Coccinelle.dickson <> multiset_extension_step ind
R1801:1802 Coccinelle.dickson <> l2 var
R1798:1799 Coccinelle.dickson <> l1 var
R1796:1796 Coccinelle.dickson <> R var
R1744:1749 Coccinelle.dickson D permut syndef
R1756:1759 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1755:1755 Coccinelle.dickson <> a var
R1760:1760 Coccinelle.dickson <> l var
R1751:1752 Coccinelle.dickson <> l2 var
R1721:1726 Coccinelle.dickson D permut syndef
R1734:1737 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1732:1733 Coccinelle.dickson <> la var
R1738:1738 Coccinelle.dickson <> l var
R1728:1729 Coccinelle.dickson <> l1 var
R1700:1703 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1704:1704 Coccinelle.dickson <> R var
R1708:1708 Coccinelle.dickson <> a var
R1706:1706 Coccinelle.dickson <> b var
R1683:1685 Coccinelle.more_list <> mem def
R1698:1699 Coccinelle.dickson <> la var
R1696:1696 Coccinelle.dickson <> b var
R1687:1694 Coccinelle.dickson D eq_A defax
ax 1881:1917 D list_permut_multiset_extension_step_1
R1953:1959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1990:1993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1994:2016 Coccinelle.dickson D multiset_extension_step ind
R2023:2023 Coccinelle.dickson <> l var
R2020:2021 Coccinelle.dickson <> l2 var
R2018:2018 Coccinelle.dickson <> R var
R1960:1982 Coccinelle.dickson D multiset_extension_step ind
R1989:1989 Coccinelle.dickson <> l var
R1986:1987 Coccinelle.dickson <> l1 var
R1984:1984 Coccinelle.dickson <> R var
R1941:1946 Coccinelle.dickson D permut syndef
R1951:1952 Coccinelle.dickson <> l2 var
R1948:1949 Coccinelle.dickson <> l1 var
ax 2037:2073 D list_permut_multiset_extension_step_2
R2109:2115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2146:2149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2150:2172 Coccinelle.dickson D multiset_extension_step ind
R2178:2179 Coccinelle.dickson <> l2 var
R2176:2176 Coccinelle.dickson <> l var
R2174:2174 Coccinelle.dickson <> R var
R2116:2138 Coccinelle.dickson D multiset_extension_step ind
R2144:2145 Coccinelle.dickson <> l1 var
R2142:2142 Coccinelle.dickson <> l var
R2140:2140 Coccinelle.dickson <> R var
R2097:2102 Coccinelle.dickson D permut syndef
R2107:2108 Coccinelle.dickson <> l2 var
R2104:2105 Coccinelle.dickson <> l1 var
R2212:2219 Coq.Relations.Relation_Definitions <> relation def
R2221:2221 Coccinelle.dickson D A defax
R2227:2249 Coccinelle.dickson D multiset_extension_step ind
R2251:2251 Coccinelle.dickson <> R var
R2278:2282 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2272:2277 Coccinelle.dickson D permut syndef
R2289:2293 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2283:2288 Coccinelle.dickson D permut syndef
R2294:2296 Coq.Init.Logic <> iff def
ax 2370:2384 D list_permut_acc
R2418:2424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2459:2462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2463:2465 Coq.Init.Wf <> Acc ind
R2495:2496 Coccinelle.dickson <> l2 var
R2468:2490 Coccinelle.dickson D multiset_extension_step ind
R2492:2492 Coccinelle.dickson <> R var
R2425:2427 Coq.Init.Wf <> Acc ind
R2457:2458 Coccinelle.dickson <> l1 var
R2430:2452 Coccinelle.dickson D multiset_extension_step ind
R2454:2454 Coccinelle.dickson <> R var
R2406:2411 Coccinelle.dickson D permut syndef
R2416:2417 Coccinelle.dickson <> l1 var
R2413:2414 Coccinelle.dickson <> l2 var
ax 2529:2535 D dickson
R2566:2569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2570:2581 Coq.Init.Wf <> well_founded def
R2584:2606 Coccinelle.dickson D multiset_extension_step ind
R2608:2608 Coccinelle.dickson <> R var
R2552:2563 Coq.Init.Wf <> well_founded def
R2565:2565 Coccinelle.dickson <> R var
ax 2623:2636 D dickson_strong
R2655:2655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2683:2687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2688:2690 Coq.Init.Wf <> Acc ind
R2720:2720 Coccinelle.dickson <> l var
R2693:2715 Coccinelle.dickson D multiset_extension_step ind
R2717:2717 Coccinelle.dickson <> R var
R2672:2675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2676:2678 Coq.Init.Wf <> Acc ind
R2682:2682 Coccinelle.dickson <> a var
R2680:2680 Coccinelle.dickson <> R var
R2666:2667 Coq.Lists.List <> In def
R2671:2671 Coccinelle.dickson <> l var
R2669:2669 Coccinelle.dickson <> a var
ax 2734:2780 D context_trans_clos_multiset_extension_step_app1
R2848:2876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2877:2886 Coccinelle.TransClosure <> trans_clos ind
R2928:2931 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2927:2927 Coccinelle.dickson <> l var
R2932:2933 Coccinelle.dickson <> l2 var
R2918:2921 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2917:2917 Coccinelle.dickson <> l var
R2922:2923 Coccinelle.dickson <> l1 var
R2889:2911 Coccinelle.dickson D multiset_extension_step ind
R2913:2913 Coccinelle.dickson <> R var
R2804:2813 Coccinelle.TransClosure <> trans_clos ind
R2846:2847 Coccinelle.dickson <> l2 var
R2843:2844 Coccinelle.dickson <> l1 var
R2816:2838 Coccinelle.dickson D multiset_extension_step ind
R2840:2840 Coccinelle.dickson <> R var
R2959:2962 Coq.Init.Datatypes <> list ind
R2966:2968 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2965:2965 Coccinelle.dickson D A defax
R2969:2972 Coq.Init.Datatypes <> list ind
R2974:2974 Coccinelle.dickson D A defax
R2980:2983 Coq.Init.Datatypes <> list ind
R2985:2985 Coccinelle.dickson D A defax
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R3087:3090 Coq.Init.Datatypes <> list ind
R3094:3096 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R3093:3093 Coccinelle.dickson D A defax
R3097:3100 Coq.Init.Datatypes <> list ind
R3102:3102 Coccinelle.dickson D A defax
R3108:3111 Coq.Init.Datatypes <> list ind
R3113:3113 Coccinelle.dickson D A defax
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
ax 3205:3220 D multiset_closure
R3236:3236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3265:3269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3284:3289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3344:3349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3350:3356 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3358:3359 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3360:3366 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3369:3372 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3401:3406 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3373:3378 Coccinelle.dickson D permut syndef
R3383:3383 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3393:3397 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3384:3390 Coccinelle.dickson D appendn def
R3392:3392 Coccinelle.dickson <> l var
R3398:3399 Coccinelle.dickson <> pq var
R3380:3380 Coccinelle.dickson <> p var
R3433:3438 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3407:3412 Coccinelle.dickson D permut syndef
R3417:3417 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3425:3429 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3418:3422 Coccinelle.dickson D consn def
R3424:3424 Coccinelle.dickson <> l var
R3430:3431 Coccinelle.dickson <> pq var
R3414:3414 Coccinelle.dickson <> q var
R3447:3452 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3440:3443 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3439:3439 Coccinelle.dickson <> l var
R3444:3446 Coq.Init.Datatypes <> nil constr
R3453:3453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3526:3533 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3629:3629 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3486:3489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3517:3520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3521:3521 Coccinelle.dickson <> R var
R3525:3525 Coccinelle.dickson <> a var
R3523:3523 Coccinelle.dickson <> b var
R3500:3502 Coccinelle.more_list <> mem def
R3515:3516 Coccinelle.dickson <> la var
R3513:3513 Coccinelle.dickson <> b var
R3504:3511 Coccinelle.dickson D eq_A defax
R3475:3476 Coq.Lists.List <> In def
R3485:3485 Coccinelle.dickson <> l var
R3478:3478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3480:3480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3483:3483 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3479:3479 Coccinelle.dickson <> a var
R3481:3482 Coccinelle.dickson <> la var
R3534:3534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3551:3555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3590:3593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3620:3623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3624:3628 Coq.Init.Logic <> False ind
R3594:3596 Coccinelle.more_list <> mem def
R3610:3616 Coccinelle.dickson D appendn def
R3618:3618 Coccinelle.dickson <> l var
R3607:3607 Coccinelle.dickson <> a var
R3598:3605 Coccinelle.dickson D eq_A defax
R3566:3568 Coccinelle.more_list <> mem def
R3582:3586 Coccinelle.dickson D consn def
R3588:3588 Coccinelle.dickson <> l var
R3579:3579 Coccinelle.dickson <> a var
R3570:3577 Coccinelle.dickson D eq_A defax
R3545:3545 Coq.Init.Logic <> :type_scope:'~'_x not
R3546:3546 Coccinelle.dickson <> R var
R3550:3550 Coccinelle.dickson <> a var
R3548:3548 Coccinelle.dickson <> a var
R3302:3311 Coccinelle.TransClosure <> trans_clos ind
R3343:3343 Coccinelle.dickson <> q var
R3341:3341 Coccinelle.dickson <> p var
R3314:3336 Coccinelle.dickson D multiset_extension_step ind
R3338:3338 Coccinelle.dickson <> R var
R3270:3279 Coq.Relations.Relation_Definitions <> transitive def
R3283:3283 Coccinelle.dickson <> R var
R3249:3249 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3255:3257 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3264:3264 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3250:3250 Coccinelle.dickson <> R var
R3254:3254 Coccinelle.dickson <> y var
R3252:3252 Coccinelle.dickson <> x var
R3258:3258 Coq.Init.Logic <> :type_scope:'~'_x not
R3259:3259 Coccinelle.dickson <> R var
R3263:3263 Coccinelle.dickson <> y var
R3261:3261 Coccinelle.dickson <> x var
R3637:3637 Coccinelle.dickson D <> modtype
R3660:3674 Coccinelle.decidable_set S <> mod
mod 3648:3651 <> Make
R3699:3719 Coccinelle.decidable_set Convert <> modtype
R3722:3724 Coccinelle.dickson DS1 <> modtype
mod 3693:3694 <> Make.DS
R3748:3763 Coccinelle.list_permut Make <> modtype
R3766:3767 Coccinelle.dickson Make.DS <> modtype
mod 3742:3743 <> Make.LP
ind 3847:3869 Make multiset_extension_step
constr 3922:3929 Make rmv_case
R3876:3883 Coq.Relations.Relation_Definitions <> relation def
R3885:3885 Coccinelle.dickson Make A defax
R3896:3899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3906:3909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3900:3903 Coq.Init.Datatypes <> list ind
R3905:3905 Coccinelle.dickson Make A defax
R3890:3893 Coq.Init.Datatypes <> list ind
R3895:3895 Coccinelle.dickson Make A defax
R3960:3960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3997:4008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4028:4031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4050:4059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4060:4082 Coccinelle.dickson <> multiset_extension_step ind
R4089:4090 Coccinelle.dickson <> l2 var
R4086:4087 Coccinelle.dickson <> l1 var
R4084:4084 Coccinelle.dickson <> R var
R4032:4037 Coccinelle.dickson Make permut syndef
R4044:4047 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4043:4043 Coccinelle.dickson <> a var
R4048:4048 Coccinelle.dickson <> l var
R4039:4040 Coccinelle.dickson <> l2 var
R4009:4014 Coccinelle.dickson Make permut syndef
R4022:4025 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4020:4021 Coccinelle.dickson <> la var
R4026:4026 Coccinelle.dickson <> l var
R4016:4017 Coccinelle.dickson <> l1 var
R3988:3991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3992:3992 Coccinelle.dickson <> R var
R3996:3996 Coccinelle.dickson <> a var
R3994:3994 Coccinelle.dickson <> b var
R3971:3973 Coccinelle.more_list <> mem def
R3986:3987 Coccinelle.dickson <> la var
R3984:3984 Coccinelle.dickson <> b var
R3975:3982 Coccinelle.dickson Make eq_A defax
prf 4165:4201 Make list_permut_multiset_extension_step_1
R4237:4243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4274:4277 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4278:4300 Coccinelle.dickson Make multiset_extension_step ind
R4307:4307 Coccinelle.dickson <> l var
R4304:4305 Coccinelle.dickson <> l2 var
R4302:4302 Coccinelle.dickson <> R var
R4244:4266 Coccinelle.dickson Make multiset_extension_step ind
R4273:4273 Coccinelle.dickson <> l var
R4270:4271 Coccinelle.dickson <> l1 var
R4268:4268 Coccinelle.dickson <> R var
R4225:4230 Coccinelle.dickson Make permut syndef
R4235:4236 Coccinelle.dickson <> l2 var
R4232:4233 Coccinelle.dickson <> l1 var
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
prf 4541:4577 Make list_permut_multiset_extension_step_2
R4613:4619 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4650:4653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4654:4676 Coccinelle.dickson Make multiset_extension_step ind
R4682:4683 Coccinelle.dickson <> l2 var
R4680:4680 Coccinelle.dickson <> l var
R4678:4678 Coccinelle.dickson <> R var
R4620:4642 Coccinelle.dickson Make multiset_extension_step ind
R4648:4649 Coccinelle.dickson <> l1 var
R4646:4646 Coccinelle.dickson <> l var
R4644:4644 Coccinelle.dickson <> R var
R4601:4606 Coccinelle.dickson Make permut syndef
R4611:4612 Coccinelle.dickson <> l2 var
R4608:4609 Coccinelle.dickson <> l1 var
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4944:4951 Coq.Relations.Relation_Definitions <> relation def
R4953:4953 Coccinelle.dickson Make A defax
R4959:4981 Coccinelle.dickson Make multiset_extension_step ind
R4983:4983 Coccinelle.dickson <> R var
R5010:5014 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R5004:5009 Coccinelle.dickson Make permut syndef
R5021:5025 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R5015:5020 Coccinelle.dickson Make permut syndef
R5026:5028 Coq.Init.Logic <> iff def
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 5526:5534 Make two_cases
R5593:5597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5598:5598 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5676:5682 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5764:5764 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5599:5605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5608:5609 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5628:5645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5610:5615 Coccinelle.dickson Make permut syndef
R5621:5624 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5620:5620 Coccinelle.dickson <> a var
R5625:5626 Coccinelle.dickson <> n' var
R5617:5617 Coccinelle.dickson <> n var
R5646:5668 Coccinelle.dickson Make multiset_extension_step ind
R5675:5675 Coccinelle.dickson <> m var
R5672:5673 Coccinelle.dickson <> n' var
R5670:5670 Coccinelle.dickson <> R var
R5683:5689 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5691:5692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5693:5693 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5729:5746 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5720:5723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5724:5724 Coccinelle.dickson <> R var
R5728:5728 Coccinelle.dickson <> a var
R5726:5726 Coccinelle.dickson <> b var
R5704:5706 Coccinelle.more_list <> mem def
R5719:5719 Coccinelle.dickson <> k var
R5717:5717 Coccinelle.dickson <> b var
R5708:5715 Coccinelle.dickson Make eq_A defax
R5747:5752 Coccinelle.dickson Make permut syndef
R5758:5761 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5757:5757 Coccinelle.dickson <> k var
R5762:5762 Coccinelle.dickson <> m var
R5754:5754 Coccinelle.dickson <> n var
R5557:5579 Coccinelle.dickson Make multiset_extension_step ind
R5587:5590 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5586:5586 Coccinelle.dickson <> a var
R5591:5591 Coccinelle.dickson <> m var
R5583:5583 Coccinelle.dickson <> n var
R5581:5581 Coccinelle.dickson <> R var
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R6066:6069 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6066:6069 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6171:6171 Coccinelle.dickson Make A defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6171:6171 Coccinelle.dickson Make A defax
R6210:6213 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6210:6213 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6417:6420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6417:6420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6813:6822 Coccinelle.dickson Make permut_sym defax
R6836:6853 Coccinelle.dickson Make permut_cons_inside defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R7092:7097 Coq.Init.Logic <> sym_eq syndef
R7092:7097 Coq.Init.Logic <> sym_eq syndef
prf 7178:7192 Make list_permut_acc
R7226:7232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7267:7270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7271:7273 Coq.Init.Wf <> Acc ind
R7303:7304 Coccinelle.dickson <> l2 var
R7276:7298 Coccinelle.dickson Make multiset_extension_step ind
R7300:7300 Coccinelle.dickson <> R var
R7233:7235 Coq.Init.Wf <> Acc ind
R7265:7266 Coccinelle.dickson <> l1 var
R7238:7260 Coccinelle.dickson Make multiset_extension_step ind
R7262:7262 Coccinelle.dickson <> R var
R7214:7219 Coccinelle.dickson Make permut syndef
R7224:7225 Coccinelle.dickson <> l1 var
R7221:7222 Coccinelle.dickson <> l2 var
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
prf 7748:7759 Make dickson_aux1
R7775:7782 Coq.Relations.Relation_Definitions <> relation def
R7784:7784 Coccinelle.dickson Make A defax
R7791:7791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7914:7919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7963:7968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7969:7969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8072:8077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8078:8080 Coq.Init.Wf <> Acc ind
R8112:8115 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8111:8111 Coccinelle.dickson <> a var
R8116:8116 Coccinelle.dickson <> m var
R8083:8105 Coccinelle.dickson Make multiset_extension_step ind
R8107:8107 Coccinelle.dickson <> R var
R8013:8030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8031:8033 Coq.Init.Wf <> Acc ind
R8065:8068 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8064:8064 Coccinelle.dickson <> a var
R8069:8070 Coccinelle.dickson <> m' var
R8036:8058 Coccinelle.dickson Make multiset_extension_step ind
R8060:8060 Coccinelle.dickson <> R var
R7982:8004 Coccinelle.dickson Make multiset_extension_step ind
R8006:8006 Coccinelle.dickson <> R var
R8012:8012 Coccinelle.dickson <> m var
R8009:8010 Coccinelle.dickson <> m' var
R7930:7932 Coq.Init.Wf <> Acc ind
R7962:7962 Coccinelle.dickson <> m var
R7935:7957 Coccinelle.dickson Make multiset_extension_step ind
R7959:7959 Coccinelle.dickson <> R var
R7807:7813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7857:7873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7874:7876 Coq.Init.Wf <> Acc ind
R7908:7911 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7907:7907 Coccinelle.dickson <> b var
R7912:7912 Coccinelle.dickson <> m var
R7879:7901 Coccinelle.dickson Make multiset_extension_step ind
R7903:7903 Coccinelle.dickson <> R var
R7824:7826 Coq.Init.Wf <> Acc ind
R7856:7856 Coccinelle.dickson <> m var
R7829:7851 Coccinelle.dickson Make multiset_extension_step ind
R7853:7853 Coccinelle.dickson <> R var
R7802:7802 Coccinelle.dickson <> R var
R7806:7806 Coccinelle.dickson <> a var
R7804:7804 Coccinelle.dickson <> b var
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
prf 8496:8507 Make dickson_aux2
R8558:8563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8574:8574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8719:8726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8727:8729 Coq.Init.Wf <> Acc ind
R8761:8764 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8760:8760 Coccinelle.dickson <> a var
R8765:8765 Coccinelle.dickson <> m var
R8732:8754 Coccinelle.dickson Make multiset_extension_step ind
R8756:8756 Coccinelle.dickson <> R var
R8590:8607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8651:8678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8679:8681 Coq.Init.Wf <> Acc ind
R8713:8716 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8712:8712 Coccinelle.dickson <> b var
R8717:8717 Coccinelle.dickson <> m var
R8684:8706 Coccinelle.dickson Make multiset_extension_step ind
R8708:8708 Coccinelle.dickson <> R var
R8618:8620 Coq.Init.Wf <> Acc ind
R8650:8650 Coccinelle.dickson <> m var
R8623:8645 Coccinelle.dickson Make multiset_extension_step ind
R8647:8647 Coccinelle.dickson <> R var
R8585:8585 Coccinelle.dickson <> R var
R8589:8589 Coccinelle.dickson <> a var
R8587:8587 Coccinelle.dickson <> b var
R8525:8527 Coq.Init.Wf <> Acc ind
R8557:8557 Coccinelle.dickson <> m var
R8530:8552 Coccinelle.dickson Make multiset_extension_step ind
R8554:8554 Coccinelle.dickson <> R var
R8810:8817 Coq.Init.Wf <> Acc_iter syndef
R8895:8899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
R8810:8817 Coq.Init.Wf <> Acc_iter syndef
R8895:8899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
prf 9088:9099 Make dickson_aux3
R9122:9125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9169:9172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9173:9175 Coq.Init.Wf <> Acc ind
R9207:9210 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9206:9206 Coccinelle.dickson <> a var
R9211:9211 Coccinelle.dickson <> m var
R9178:9200 Coccinelle.dickson Make multiset_extension_step ind
R9202:9202 Coccinelle.dickson <> R var
R9136:9138 Coq.Init.Wf <> Acc ind
R9168:9168 Coccinelle.dickson <> m var
R9141:9163 Coccinelle.dickson Make multiset_extension_step ind
R9165:9165 Coccinelle.dickson <> R var
R9115:9117 Coq.Init.Wf <> Acc ind
R9121:9121 Coccinelle.dickson <> a var
R9119:9119 Coccinelle.dickson <> R var
R9247:9254 Coq.Init.Wf <> Acc_iter syndef
R9282:9285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9329:9333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a var
R9372:9372 Coccinelle.dickson <> m var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a var
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
R9247:9254 Coq.Init.Wf <> Acc_iter syndef
R9282:9285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9329:9333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a var
R9372:9372 Coccinelle.dickson <> m var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a var
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
prf 9549:9555 Make dickson
R9586:9589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9590:9601 Coq.Init.Wf <> well_founded def
R9604:9626 Coccinelle.dickson Make multiset_extension_step ind
R9628:9628 Coccinelle.dickson <> R var
R9572:9583 Coq.Init.Wf <> well_founded def
R9585:9585 Coccinelle.dickson <> R var
R9661:9672 Coq.Init.Wf <> well_founded def
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> :type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> :type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
prf 9904:9917 Make dickson_strong
R9936:9936 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9964:9968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9969:9971 Coq.Init.Wf <> Acc ind
R10001:10001 Coccinelle.dickson <> l var
R9974:9996 Coccinelle.dickson Make multiset_extension_step ind
R9998:9998 Coccinelle.dickson <> R var
R9953:9956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9957:9959 Coq.Init.Wf <> Acc ind
R9963:9963 Coccinelle.dickson <> a var
R9961:9961 Coccinelle.dickson <> R var
R9947:9948 Coq.Lists.List <> In def
R9952:9952 Coccinelle.dickson <> l var
R9950:9950 Coccinelle.dickson <> a var
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> :type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> :type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
prf 10369:10416 Make list_permut_trans_clos_multiset_extension_step_1
R10452:10458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10504:10510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10512:10521 Coccinelle.TransClosure <> trans_clos ind
R10524:10546 Coccinelle.dickson Make multiset_extension_step ind
R10548:10548 Coccinelle.dickson <> R var
R10555:10555 Coccinelle.dickson <> l var
R10552:10553 Coccinelle.dickson <> l2 var
R10460:10469 Coccinelle.TransClosure <> trans_clos ind
R10472:10494 Coccinelle.dickson Make multiset_extension_step ind
R10496:10496 Coccinelle.dickson <> R var
R10503:10503 Coccinelle.dickson <> l var
R10500:10501 Coccinelle.dickson <> l1 var
R10440:10445 Coccinelle.dickson Make permut syndef
R10450:10451 Coccinelle.dickson <> l2 var
R10447:10448 Coccinelle.dickson <> l1 var
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 10817:10864 Make list_permut_trans_clos_multiset_extension_step_2
R10900:10906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10952:10958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10960:10969 Coccinelle.TransClosure <> trans_clos ind
R10972:10994 Coccinelle.dickson Make multiset_extension_step ind
R10996:10996 Coccinelle.dickson <> R var
R11002:11003 Coccinelle.dickson <> l2 var
R11000:11000 Coccinelle.dickson <> l var
R10908:10917 Coccinelle.TransClosure <> trans_clos ind
R10920:10942 Coccinelle.dickson Make multiset_extension_step ind
R10944:10944 Coccinelle.dickson <> R var
R10950:10951 Coccinelle.dickson <> l1 var
R10948:10948 Coccinelle.dickson <> l var
R10888:10893 Coccinelle.dickson Make permut syndef
R10898:10899 Coccinelle.dickson <> l2 var
R10895:10896 Coccinelle.dickson <> l1 var
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11165:11171 Coccinelle.TransClosure <> t_trans constr
R11165:11171 Coccinelle.TransClosure <> t_trans constr
prf 11222:11257 Make context_multiset_extension_step_app1
R11312:11340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11341:11363 Coccinelle.dickson Make multiset_extension_step ind
R11379:11382 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11378:11378 Coccinelle.dickson <> l var
R11383:11384 Coccinelle.dickson <> l2 var
R11369:11372 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11368:11368 Coccinelle.dickson <> l var
R11373:11374 Coccinelle.dickson <> l1 var
R11365:11365 Coccinelle.dickson <> R var
R11281:11303 Coccinelle.dickson Make multiset_extension_step ind
R11310:11311 Coccinelle.dickson <> l2 var
R11307:11308 Coccinelle.dickson <> l1 var
R11305:11305 Coccinelle.dickson <> R var
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11492:11493 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11476:11477 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11492:11493 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11476:11477 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11541:11544 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11541:11544 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11606:11612 Coq.Lists.List <> app_ass syndef
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11701:11704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11701:11704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
prf 11862:11908 Make context_trans_clos_multiset_extension_step_app1
R11976:12004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12005:12014 Coccinelle.TransClosure <> trans_clos ind
R12056:12059 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12055:12055 Coccinelle.dickson <> l var
R12060:12061 Coccinelle.dickson <> l2 var
R12046:12049 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12045:12045 Coccinelle.dickson <> l var
R12050:12051 Coccinelle.dickson <> l1 var
R12017:12039 Coccinelle.dickson Make multiset_extension_step ind
R12041:12041 Coccinelle.dickson <> R var
R11932:11941 Coccinelle.TransClosure <> trans_clos ind
R11974:11975 Coccinelle.dickson <> l2 var
R11971:11972 Coccinelle.dickson <> l1 var
R11944:11966 Coccinelle.dickson Make multiset_extension_step ind
R11968:11968 Coccinelle.dickson <> R var
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12193:12196 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12193:12196 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
prf 12275:12310 Make context_multiset_extension_step_cons
R12326:12326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12343:12350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12412:12440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12441:12463 Coccinelle.dickson Make multiset_extension_step ind
R12470:12471 Coccinelle.dickson <> l2 var
R12467:12468 Coccinelle.dickson <> l1 var
R12465:12465 Coccinelle.dickson <> R var
R12367:12389 Coccinelle.dickson Make multiset_extension_step ind
R12405:12408 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12404:12404 Coccinelle.dickson <> a var
R12409:12410 Coccinelle.dickson <> l2 var
R12395:12398 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12394:12394 Coccinelle.dickson <> a var
R12399:12400 Coccinelle.dickson <> l1 var
R12391:12391 Coccinelle.dickson <> R var
R12337:12337 Coq.Init.Logic <> :type_scope:'~'_x not
R12338:12338 Coccinelle.dickson <> R var
R12342:12342 Coccinelle.dickson <> a var
R12340:12340 Coccinelle.dickson <> a var
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13268:13274 Coq.Lists.List <> app_ass syndef
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13268:13274 Coq.Lists.List <> app_ass syndef
R13268:13274 Coq.Lists.List <> app_ass syndef
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13333:13339 Coq.Lists.List <> ass_app syndef
R13333:13339 Coq.Lists.List <> ass_app syndef
R13333:13339 Coq.Lists.List <> ass_app syndef
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13721:13727 Coq.Lists.List <> app_ass syndef
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13721:13727 Coq.Lists.List <> app_ass syndef
R13721:13727 Coq.Lists.List <> app_ass syndef
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13786:13792 Coq.Lists.List <> ass_app syndef
R13786:13792 Coq.Lists.List <> ass_app syndef
R13786:13792 Coq.Lists.List <> ass_app syndef
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
prf 13979:14021 Make remove_context_multiset_extension_step_app1
R14038:14038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14055:14062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14124:14152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14153:14175 Coccinelle.dickson Make multiset_extension_step ind
R14182:14183 Coccinelle.dickson <> l2 var
R14179:14180 Coccinelle.dickson <> l1 var
R14177:14177 Coccinelle.dickson <> R var
R14079:14101 Coccinelle.dickson Make multiset_extension_step ind
R14117:14120 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14116:14116 Coccinelle.dickson <> l var
R14121:14122 Coccinelle.dickson <> l2 var
R14107:14110 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14106:14106 Coccinelle.dickson <> l var
R14111:14112 Coccinelle.dickson <> l1 var
R14103:14103 Coccinelle.dickson <> R var
R14049:14049 Coq.Init.Logic <> :type_scope:'~'_x not
R14050:14050 Coccinelle.dickson <> R var
R14054:14054 Coccinelle.dickson <> a var
R14052:14052 Coccinelle.dickson <> a var
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14425:14425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14425:14425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14569:14569 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14569:14569 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
prf 14744:14779 Make context_multiset_extension_step_app2
R14834:14862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14863:14885 Coccinelle.dickson Make multiset_extension_step ind
R14902:14905 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14900:14901 Coccinelle.dickson <> l2 var
R14906:14906 Coccinelle.dickson <> l var
R14892:14895 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14890:14891 Coccinelle.dickson <> l1 var
R14896:14896 Coccinelle.dickson <> l var
R14887:14887 Coccinelle.dickson <> R var
R14803:14825 Coccinelle.dickson Make multiset_extension_step ind
R14832:14833 Coccinelle.dickson <> l2 var
R14829:14830 Coccinelle.dickson <> l1 var
R14827:14827 Coccinelle.dickson <> R var
R14985:14992 Coccinelle.dickson Make rmv_case constr
R15016:15017 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14999:15000 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14985:14992 Coccinelle.dickson Make rmv_case constr
R15016:15017 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14999:15000 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15048:15054 Coq.Lists.List <> app_ass syndef
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15048:15054 Coq.Lists.List <> app_ass syndef
R15048:15054 Coq.Lists.List <> app_ass syndef
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15173:15176 Coq.Init.Datatypes <> list ind
R15180:15182 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15179:15179 Coccinelle.dickson Make A defax
R15183:15186 Coq.Init.Datatypes <> list ind
R15188:15188 Coccinelle.dickson Make A defax
R15194:15197 Coq.Init.Datatypes <> list ind
R15199:15199 Coccinelle.dickson Make A defax
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
prf 15284:15292 Make mem_consn
R15337:15341 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15312:15314 Coccinelle.more_list <> mem def
R15328:15332 Coccinelle.dickson Make consn def
R15334:15335 Coccinelle.dickson <> ll var
R15325:15325 Coccinelle.dickson <> a var
R15316:15323 Coccinelle.dickson Make eq_A defax
R15342:15348 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15351:15352 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15353:15354 Coq.Lists.List <> In def
R15363:15364 Coccinelle.dickson <> ll var
R15356:15356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15358:15358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15361:15361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15357:15357 Coccinelle.dickson <> a var
R15359:15360 Coccinelle.dickson <> la var
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
prf 15847:15855 Make consn_app
R15894:15896 Coq.Init.Logic <> :type_scope:x_'='_x not
R15876:15880 Coccinelle.dickson Make consn def
R15886:15889 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15883:15885 Coccinelle.dickson <> ll1 var
R15890:15892 Coccinelle.dickson <> ll2 var
R15906:15909 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15897:15901 Coccinelle.dickson Make consn def
R15903:15905 Coccinelle.dickson <> ll1 var
R15910:15914 Coccinelle.dickson Make consn def
R15916:15918 Coccinelle.dickson <> ll2 var
R16059:16062 Coq.Init.Datatypes <> list ind
R16066:16068 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R16065:16065 Coccinelle.dickson Make A defax
R16069:16072 Coq.Init.Datatypes <> list ind
R16074:16074 Coccinelle.dickson Make A defax
R16080:16083 Coq.Init.Datatypes <> list ind
R16085:16085 Coccinelle.dickson Make A defax
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
prf 16173:16183 Make appendn_app
R16224:16226 Coq.Init.Logic <> :type_scope:x_'='_x not
R16204:16210 Coccinelle.dickson Make appendn def
R16216:16219 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16213:16215 Coccinelle.dickson <> ll1 var
R16220:16222 Coccinelle.dickson <> ll2 var
R16238:16241 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16227:16233 Coccinelle.dickson Make appendn def
R16235:16237 Coccinelle.dickson <> ll1 var
R16242:16248 Coccinelle.dickson Make appendn def
R16250:16252 Coccinelle.dickson <> ll2 var
R16363:16369 Coq.Lists.List <> ass_app syndef
R16363:16369 Coq.Lists.List <> ass_app syndef
R16363:16369 Coq.Lists.List <> ass_app syndef
prf 16393:16402 Make in_appendn
R16449:16452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16453:16459 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16461:16462 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16463:16469 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16472:16473 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16486:16489 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16474:16475 Coq.Lists.List <> In def
R16484:16485 Coccinelle.dickson <> ll var
R16477:16477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16479:16479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16482:16482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16478:16478 Coccinelle.dickson <> b var
R16480:16481 Coccinelle.dickson <> lb var
R16490:16492 Coccinelle.more_list <> mem def
R16505:16506 Coccinelle.dickson <> lb var
R16503:16503 Coccinelle.dickson <> a var
R16494:16501 Coccinelle.dickson Make eq_A defax
R16422:16424 Coccinelle.more_list <> mem def
R16438:16444 Coccinelle.dickson Make appendn def
R16446:16447 Coccinelle.dickson <> ll var
R16435:16435 Coccinelle.dickson <> a var
R16426:16433 Coccinelle.dickson Make eq_A defax
R16554:16560 Coccinelle.dickson Make appendn def
R16554:16560 Coccinelle.dickson Make appendn def
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
prf 16842:16861 Make multiset_closure_aux
R16879:16886 Coq.Relations.Relation_Definitions <> relation def
R16888:16888 Coccinelle.dickson Make A defax
R16932:16937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16964:16969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16978:16983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16984:16984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17057:17063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17064:17073 Coccinelle.TransClosure <> trans_clos ind
R17105:17105 Coccinelle.dickson <> q var
R17103:17103 Coccinelle.dickson <> p var
R17076:17098 Coccinelle.dickson Make multiset_extension_step ind
R17100:17100 Coccinelle.dickson <> R var
R17017:17020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17048:17051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17052:17052 Coccinelle.dickson <> R var
R17056:17056 Coccinelle.dickson <> a var
R17054:17054 Coccinelle.dickson <> b var
R17031:17033 Coccinelle.more_list <> mem def
R17046:17047 Coccinelle.dickson <> la var
R17044:17044 Coccinelle.dickson <> b var
R17035:17042 Coccinelle.dickson Make eq_A defax
R17006:17007 Coq.Lists.List <> In def
R17016:17016 Coccinelle.dickson <> l var
R17009:17009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17011:17011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17014:17014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17010:17010 Coccinelle.dickson <> a var
R17012:17013 Coccinelle.dickson <> la var
R16971:16974 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16970:16970 Coccinelle.dickson <> l var
R16975:16977 Coq.Init.Datatypes <> nil constr
R16938:16943 Coccinelle.dickson Make permut syndef
R16948:16948 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16956:16960 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16949:16953 Coccinelle.dickson Make consn def
R16955:16955 Coccinelle.dickson <> l var
R16961:16962 Coccinelle.dickson <> pq var
R16945:16945 Coccinelle.dickson <> q var
R16904:16909 Coccinelle.dickson Make permut syndef
R16914:16914 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16924:16928 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16915:16921 Coccinelle.dickson Make appendn def
R16923:16923 Coccinelle.dickson <> l var
R16929:16930 Coccinelle.dickson <> pq var
R16911:16911 Coccinelle.dickson <> p var
R17243:17245 Coq.Init.Logic <> :type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
R17243:17245 Coq.Init.Logic <> :type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
R17338:17341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17344:17344 Coccinelle.dickson <> b var
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17338:17341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17344:17344 Coccinelle.dickson <> b var
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17531:17534 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17531:17534 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17574:17580 Coq.Lists.List <> app_ass syndef
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17858:17861 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17837:17840 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17814:17817 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17885:17888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17858:17861 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17837:17840 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17814:17817 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17885:17888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17946:17952 Coq.Lists.List <> ass_app syndef
R17946:17952 Coq.Lists.List <> ass_app syndef
R17946:17952 Coq.Lists.List <> ass_app syndef
prf 18054:18074 Make multiset_closure_aux2
R18092:18099 Coq.Relations.Relation_Definitions <> relation def
R18101:18101 Coccinelle.dickson Make A defax
R18148:18153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18186:18191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18213:18218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18219:18219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18292:18298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18299:18308 Coccinelle.TransClosure <> trans_clos ind
R18340:18340 Coccinelle.dickson <> q var
R18338:18338 Coccinelle.dickson <> p var
R18311:18333 Coccinelle.dickson Make multiset_extension_step ind
R18335:18335 Coccinelle.dickson <> R var
R18252:18255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18283:18286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18287:18287 Coccinelle.dickson <> R var
R18291:18291 Coccinelle.dickson <> a var
R18289:18289 Coccinelle.dickson <> b var
R18266:18268 Coccinelle.more_list <> mem def
R18281:18282 Coccinelle.dickson <> la var
R18279:18279 Coccinelle.dickson <> b var
R18270:18277 Coccinelle.dickson Make eq_A defax
R18241:18242 Coq.Lists.List <> In def
R18251:18251 Coccinelle.dickson <> l var
R18244:18244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18246:18246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18249:18249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18245:18245 Coccinelle.dickson <> a var
R18247:18248 Coccinelle.dickson <> la var
R18200:18203 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18193:18196 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18192:18192 Coccinelle.dickson <> l var
R18197:18199 Coq.Init.Datatypes <> nil constr
R18206:18209 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18204:18205 Coccinelle.dickson <> le var
R18210:18212 Coq.Init.Datatypes <> nil constr
R18154:18159 Coccinelle.dickson Make permut syndef
R18166:18169 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18164:18165 Coccinelle.dickson <> le var
R18170:18170 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18178:18182 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18171:18175 Coccinelle.dickson Make consn def
R18177:18177 Coccinelle.dickson <> l var
R18183:18184 Coccinelle.dickson <> pq var
R18161:18161 Coccinelle.dickson <> q var
R18120:18125 Coccinelle.dickson Make permut syndef
R18130:18130 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18140:18144 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18131:18137 Coccinelle.dickson Make appendn def
R18139:18139 Coccinelle.dickson <> l var
R18145:18146 Coccinelle.dickson <> pq var
R18127:18127 Coccinelle.dickson <> p var
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
R18434:18434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
R18434:18434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18496:18499 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18496:18499 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18641:18644 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18641:18644 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18681:18687 Coq.Lists.List <> ass_app syndef
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18681:18687 Coq.Lists.List <> ass_app syndef
R18681:18687 Coq.Lists.List <> ass_app syndef
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18722:18730 Coccinelle.dickson Make consn_app thm
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18969:18971 Coq.Init.Logic <> :type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R18969:18971 Coq.Init.Logic <> :type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> :type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> :type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
mod 19234:19236 <> Make.LDS
def 19251:19251 Make.LDS A
R19258:19261 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19268:19268 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19257:19257 Coccinelle.dickson Make.DS A defax
R19262:19265 Coq.Init.Datatypes <> list ind
R19267:19267 Coccinelle.dickson Make.DS A defax
def 19288:19291 Make.LDS eq_A
R19297:19298 Coq.Init.Logic <> eq ind
R19300:19300 Coccinelle.dickson Make.LDS A def
prf 19310:19317 Make.LDS eq_proof
R19321:19331 Coq.Relations.Relation_Definitions <> equivalence rec
R19335:19338 Coccinelle.dickson Make.LDS eq_A def
R19333:19333 Coccinelle.dickson Make.LDS A def
R19348:19351 Coccinelle.dickson Make.LDS eq_A def
R19376:19385 Coq.Init.Logic <> refl_equal syndef
R19376:19385 Coq.Init.Logic <> refl_equal syndef
R19468:19477 Coq.Init.Logic <> refl_equal syndef
R19468:19477 Coq.Init.Logic <> refl_equal syndef
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
def 19744:19755 Make.LDS eq_bool_list
R19764:19767 Coq.Init.Datatypes <> bool ind
R19787:19788 Coccinelle.dickson <> l2 var
R19783:19784 Coccinelle.dickson <> l1 var
R19802:19804 Coq.Init.Datatypes <> nil constr
R19807:19809 Coq.Init.Datatypes <> nil constr
R19814:19817 Coq.Init.Datatypes <> true constr
R19826:19828 Coq.Init.Datatypes <> nil constr
R19833:19836 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19843:19847 Coq.Init.Datatypes <> false constr
R19859:19862 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19868:19870 Coq.Init.Datatypes <> nil constr
R19875:19879 Coq.Init.Datatypes <> false constr
R19891:19894 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19903:19906 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19917:19927 Coccinelle.dickson DS1 eq_bool defax
R19964:19968 Coq.Init.Datatypes <> false constr
R19940:19951 Coccinelle.dickson <> eq_bool_list def
R19956:19957 Coccinelle.dickson <> l2 var
R19953:19954 Coccinelle.dickson <> l1 var
def 19992:19998 Make.LDS eq_bool
R20010:20013 Coq.Init.Datatypes <> bool ind
R20033:20035 Coccinelle.dickson <> al2 var
R20028:20030 Coccinelle.dickson <> al1 var
R20046:20046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20049:20049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20052:20052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20055:20055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20058:20058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20061:20061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20069:20079 Coccinelle.dickson DS1 eq_bool defax
R20116:20120 Coq.Init.Datatypes <> false constr
R20092:20103 Coccinelle.dickson Make.LDS eq_bool_list def
prf 20136:20145 Make.LDS eq_bool_ok
R20171:20177 Coccinelle.dickson Make.LDS eq_bool def
R20183:20185 Coccinelle.dickson <> al2 var
R20179:20181 Coccinelle.dickson <> al1 var
R20192:20195 Coq.Init.Datatypes <> true constr
R20203:20205 Coq.Init.Logic <> :type_scope:x_'='_x not
R20200:20202 Coccinelle.dickson <> al1 var
R20206:20208 Coccinelle.dickson <> al2 var
R20212:20216 Coq.Init.Datatypes <> false constr
R20221:20221 Coq.Init.Logic <> :type_scope:'~'_x not
R20225:20227 Coq.Init.Logic <> :type_scope:x_'='_x not
R20222:20224 Coccinelle.dickson <> al1 var
R20228:20230 Coccinelle.dickson <> al2 var
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2 var
R20435:20436 Coccinelle.dickson <> l1 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> :type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1 var
R20459:20460 Coccinelle.dickson <> l2 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> :type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> :type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1 var
R20479:20480 Coccinelle.dickson <> l2 var
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2 var
R20435:20436 Coccinelle.dickson <> l1 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> :type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1 var
R20459:20460 Coccinelle.dickson <> l2 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> :type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> :type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1 var
R20479:20480 Coccinelle.dickson <> l2 var
R20538:20547 Coq.Init.Logic <> refl_equal syndef
R20538:20547 Coq.Init.Logic <> refl_equal syndef
R20590:20603 Coccinelle.dickson DS1 eq_bool_ok defax
R20619:20629 Coccinelle.dickson DS1 eq_bool defax
R20590:20603 Coccinelle.dickson DS1 eq_bool_ok defax
R20619:20629 Coccinelle.dickson DS1 eq_bool defax
R20716:20727 Coccinelle.dickson Make.LDS eq_bool_list def
R20716:20727 Coccinelle.dickson Make.LDS eq_bool_list def
R20787:20796 Coq.Init.Logic <> refl_equal syndef
R20787:20796 Coq.Init.Logic <> refl_equal syndef
R20860:20869 Coq.Init.Logic <> refl_equal syndef
R20860:20869 Coq.Init.Logic <> refl_equal syndef
R20933:20942 Coq.Init.Logic <> refl_equal syndef
R20933:20942 Coq.Init.Logic <> refl_equal syndef
R20987:20998 Coccinelle.dickson Make.LDS eq_bool_list def
R20987:20998 Coccinelle.dickson Make.LDS eq_bool_list def
R21059:21068 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21074:21081 Coccinelle.dickson Make.LDS eq_proof thm
R21059:21068 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21074:21081 Coccinelle.dickson Make.LDS eq_proof thm
R21146:21155 Coq.Init.Logic <> refl_equal syndef
R21146:21155 Coq.Init.Logic <> refl_equal syndef
R21219:21228 Coq.Init.Logic <> refl_equal syndef
R21219:21228 Coq.Init.Logic <> refl_equal syndef
R21245:21247 Coccinelle.dickson Make.LDS <> mod
R21266:21286 Coccinelle.decidable_set Convert <> modtype
R21288:21290 Coccinelle.dickson Make.LDS <> modtype
mod 21258:21261 <> Make.LEDS
R21308:21323 Coccinelle.list_permut Make <> modtype
R21326:21329 Coccinelle.dickson Make.LEDS <> modtype
mod 21301:21303 <> Make.LLP
prf 21340:21351 Make permut_consn
R21390:21393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21394:21399 Coccinelle.dickson Make permut syndef
R21414:21418 Coccinelle.dickson Make consn def
R21420:21422 Coccinelle.dickson <> ll2 var
R21402:21406 Coccinelle.dickson Make consn def
R21408:21410 Coccinelle.dickson <> ll1 var
R21372:21381 Coccinelle.dickson Make permut syndef
R21387:21389 Coccinelle.dickson <> ll2 var
R21383:21385 Coccinelle.dickson <> ll1 var
R21509:21518 Coccinelle.list_permut <> permut_nil thm
R21521:21534 Coccinelle.dickson Make permut_sym defax
R21509:21518 Coccinelle.list_permut <> permut_nil thm
R21521:21534 Coccinelle.dickson Make permut_sym defax
R21509:21518 Coccinelle.list_permut <> permut_nil thm
R21521:21534 Coccinelle.dickson Make permut_sym defax
R21575:21576 Coq.Lists.List <> In def
R21578:21578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21580:21580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21583:21583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21575:21576 Coq.Lists.List <> In def
R21578:21578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21580:21580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21583:21583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21603:21614 Coccinelle.list_permut <> in_permut_in thm
R21603:21614 Coccinelle.list_permut <> in_permut_in thm
R21603:21614 Coccinelle.list_permut <> in_permut_in thm
R21645:21652 Coq.Lists.List <> In_split syndef
R21645:21652 Coq.Lists.List <> In_split syndef
R21709:21730 Coccinelle.dickson Make permut_cons_inside defax
R21709:21730 Coccinelle.dickson Make permut_cons_inside defax
R21709:21730 Coccinelle.dickson Make permut_cons_inside defax
R21709:21730 Coccinelle.dickson Make permut_cons_inside defax
R21746:21754 Coccinelle.dickson Make consn_app thm
R21775:21792 Coccinelle.dickson Make permut_cons_inside defax
R21746:21754 Coccinelle.dickson Make consn_app thm
R21746:21754 Coccinelle.dickson Make consn_app thm
R21775:21792 Coccinelle.dickson Make permut_cons_inside defax
R21775:21792 Coccinelle.dickson Make permut_cons_inside defax
R21775:21792 Coccinelle.dickson Make permut_cons_inside defax
R21806:21814 Coccinelle.dickson Make consn_app thm
R21806:21814 Coccinelle.dickson Make consn_app thm
R21806:21814 Coccinelle.dickson Make consn_app thm
R21846:21855 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21861:21868 Coccinelle.dickson Make eq_proof defax
R21846:21855 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21861:21868 Coccinelle.dickson Make eq_proof defax
R21879:21888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21894:21906 Coccinelle.dickson Make eq_proof defax
R21879:21888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21894:21906 Coccinelle.dickson Make eq_proof defax
prf 21922:21935 Make permut_appendn
R21974:21977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21978:21983 Coccinelle.dickson Make permut syndef
R22000:22006 Coccinelle.dickson Make appendn def
R22008:22010 Coccinelle.dickson <> ll2 var
R21986:21992 Coccinelle.dickson Make appendn def
R21994:21996 Coccinelle.dickson <> ll1 var
R21956:21965 Coccinelle.dickson Make permut syndef
R21971:21973 Coccinelle.dickson <> ll2 var
R21967:21969 Coccinelle.dickson <> ll1 var
R22097:22106 Coccinelle.list_permut <> permut_nil thm
R22109:22122 Coccinelle.dickson Make permut_sym defax
R22097:22106 Coccinelle.list_permut <> permut_nil thm
R22109:22122 Coccinelle.dickson Make permut_sym defax
R22097:22106 Coccinelle.list_permut <> permut_nil thm
R22109:22122 Coccinelle.dickson Make permut_sym defax
R22163:22164 Coq.Lists.List <> In def
R22166:22166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22168:22168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22171:22171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22163:22164 Coq.Lists.List <> In def
R22166:22166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22168:22168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22171:22171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22191:22202 Coccinelle.list_permut <> in_permut_in thm
R22191:22202 Coccinelle.list_permut <> in_permut_in thm
R22191:22202 Coccinelle.list_permut <> in_permut_in thm
R22233:22240 Coq.Lists.List <> In_split syndef
R22233:22240 Coq.Lists.List <> In_split syndef
R22294:22304 Coccinelle.dickson Make appendn_app thm
R22294:22304 Coccinelle.dickson Make appendn_app thm
R22294:22304 Coccinelle.dickson Make appendn_app thm
R22322:22333 Coccinelle.dickson Make permut_trans defax
R22338:22356 Coccinelle.dickson Make list_permut_app_app defax
R22322:22333 Coccinelle.dickson Make permut_trans defax
R22338:22356 Coccinelle.dickson Make list_permut_app_app defax
R22376:22382 Coq.Lists.List <> ass_app syndef
R22376:22382 Coq.Lists.List <> ass_app syndef
R22376:22382 Coq.Lists.List <> ass_app syndef
R22396:22406 Coccinelle.dickson Make permut_app1 defax
R22396:22406 Coccinelle.dickson Make permut_app1 defax
R22396:22406 Coccinelle.dickson Make permut_app1 defax
R22417:22428 Coccinelle.dickson Make permut_trans defax
R22433:22451 Coccinelle.dickson Make list_permut_app_app defax
R22417:22428 Coccinelle.dickson Make permut_trans defax
R22433:22451 Coccinelle.dickson Make list_permut_app_app defax
R22471:22481 Coccinelle.dickson Make appendn_app thm
R22471:22481 Coccinelle.dickson Make appendn_app thm
R22471:22481 Coccinelle.dickson Make appendn_app thm
R22517:22538 Coccinelle.dickson Make permut_cons_inside defax
R22517:22538 Coccinelle.dickson Make permut_cons_inside defax
R22517:22538 Coccinelle.dickson Make permut_cons_inside defax
R22517:22538 Coccinelle.dickson Make permut_cons_inside defax
R22562:22571 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22577:22589 Coccinelle.dickson Make eq_proof defax
R22562:22571 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22577:22589 Coccinelle.dickson Make eq_proof defax
prf 22605:22625 Make multiset_closure_aux3
R22676:22694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22695:22701 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22704:22705 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22706:22712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22716:22718 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22743:22790 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22719:22728 Coccinelle.dickson Make permut syndef
R22735:22738 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22733:22734 Coccinelle.dickson <> ll var
R22739:22741 Coccinelle.dickson <> ll' var
R22730:22730 Coccinelle.dickson <> l var
R22812:22859 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22791:22796 Coccinelle.dickson Make permut syndef
R22810:22811 Coccinelle.dickson <> lc var
R22799:22803 Coccinelle.dickson Make consn def
R22805:22806 Coccinelle.dickson <> ll var
R22860:22865 Coccinelle.dickson Make permut syndef
R22879:22881 Coccinelle.dickson <> cns var
R22868:22872 Coccinelle.dickson Make consn def
R22874:22876 Coccinelle.dickson <> ll' var
R22648:22653 Coccinelle.dickson Make permut syndef
R22668:22671 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22666:22667 Coccinelle.dickson <> lc var
R22672:22674 Coccinelle.dickson <> cns var
R22656:22660 Coccinelle.dickson Make consn def
R22662:22662 Coccinelle.dickson <> l var
R22943:22962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22998:23001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23019:23037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23038:23044 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23047:23048 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23049:23055 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23059:23061 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23086:23133 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23062:23071 Coccinelle.dickson Make permut syndef
R23078:23081 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23076:23077 Coccinelle.dickson <> ll var
R23082:23084 Coccinelle.dickson <> ll' var
R23073:23073 Coccinelle.dickson <> l var
R23155:23202 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23134:23139 Coccinelle.dickson Make permut syndef
R23153:23154 Coccinelle.dickson <> lc var
R23142:23146 Coccinelle.dickson Make consn def
R23148:23149 Coccinelle.dickson <> ll var
R23203:23208 Coccinelle.dickson Make permut syndef
R23222:23224 Coccinelle.dickson <> cns var
R23211:23215 Coccinelle.dickson Make consn def
R23217:23219 Coccinelle.dickson <> ll' var
R23007:23009 Coq.Init.Logic <> :type_scope:x_'='_x not
R23002:23006 Coccinelle.dickson <> lccns var
R23012:23015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23010:23011 Coccinelle.dickson <> lc var
R23016:23018 Coccinelle.dickson <> cns var
R22988:22990 Coq.Init.Logic <> :type_scope:x_'='_x not
R22982:22987 Coccinelle.dickson <> consnl var
R22991:22995 Coccinelle.dickson Make consn def
R22997:22997 Coccinelle.dickson <> l var
R22924:22929 Coccinelle.dickson Make permut syndef
R22938:22942 Coccinelle.dickson <> lccns var
R22931:22936 Coccinelle.dickson <> consnl var
R22943:22962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22998:23001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23019:23037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23038:23044 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23047:23048 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23049:23055 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23059:23061 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23086:23133 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23062:23071 Coccinelle.dickson Make permut syndef
R23078:23081 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23076:23077 Coccinelle.dickson <> ll var
R23082:23084 Coccinelle.dickson <> ll' var
R23073:23073 Coccinelle.dickson <> l var
R23155:23202 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23134:23139 Coccinelle.dickson Make permut syndef
R23153:23154 Coccinelle.dickson <> lc var
R23142:23146 Coccinelle.dickson Make consn def
R23148:23149 Coccinelle.dickson <> ll var
R23203:23208 Coccinelle.dickson Make permut syndef
R23222:23224 Coccinelle.dickson <> cns var
R23211:23215 Coccinelle.dickson Make consn def
R23217:23219 Coccinelle.dickson <> ll' var
R23007:23009 Coq.Init.Logic <> :type_scope:x_'='_x not
R23002:23006 Coccinelle.dickson <> lccns var
R23012:23015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23010:23011 Coccinelle.dickson <> lc var
R23016:23018 Coccinelle.dickson <> cns var
R22988:22990 Coq.Init.Logic <> :type_scope:x_'='_x not
R22982:22987 Coccinelle.dickson <> consnl var
R22991:22995 Coccinelle.dickson Make consn def
R22997:22997 Coccinelle.dickson <> l var
R22924:22929 Coccinelle.dickson Make permut syndef
R22938:22942 Coccinelle.dickson <> lccns var
R22931:22936 Coccinelle.dickson <> consnl var
R23372:23374 Coq.Init.Datatypes <> nil constr
R23378:23380 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23377:23377 Coccinelle.dickson Make A defax
R23381:23384 Coq.Init.Datatypes <> list ind
R23386:23386 Coccinelle.dickson Make A defax
R23400:23402 Coq.Init.Datatypes <> nil constr
R23406:23408 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23405:23405 Coccinelle.dickson Make A defax
R23409:23412 Coq.Init.Datatypes <> list ind
R23414:23414 Coccinelle.dickson Make A defax
R23372:23374 Coq.Init.Datatypes <> nil constr
R23378:23380 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23377:23377 Coccinelle.dickson Make A defax
R23381:23384 Coq.Init.Datatypes <> list ind
R23386:23386 Coccinelle.dickson Make A defax
R23400:23402 Coq.Init.Datatypes <> nil constr
R23406:23408 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23405:23405 Coccinelle.dickson Make A defax
R23409:23412 Coq.Init.Datatypes <> list ind
R23414:23414 Coccinelle.dickson Make A defax
R23624:23633 Coccinelle.more_list <> split_list thm
R23624:23633 Coccinelle.more_list <> split_list thm
R23733:23742 Coq.Init.Logic <> refl_equal syndef
R23724:23727 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23757:23763 Coq.Lists.List <> ass_app syndef
R23733:23742 Coq.Init.Logic <> refl_equal syndef
R23724:23727 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23757:23763 Coq.Lists.List <> ass_app syndef
R23757:23763 Coq.Lists.List <> ass_app syndef
R23792:23801 Coq.Init.Logic <> refl_equal syndef
R23792:23801 Coq.Init.Logic <> refl_equal syndef
R23876:23879 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23869:23869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23872:23872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23875:23875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23876:23879 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23869:23869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23872:23872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23875:23875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23927:23948 Coccinelle.dickson Make permut_cons_inside defax
R23971:23980 Coq.Init.Logic <> refl_equal syndef
R23927:23948 Coccinelle.dickson Make permut_cons_inside defax
R23927:23948 Coccinelle.dickson Make permut_cons_inside defax
R23927:23948 Coccinelle.dickson Make permut_cons_inside defax
R23971:23980 Coq.Init.Logic <> refl_equal syndef
R23995:24012 Coccinelle.dickson Make permut_cons_inside defax
R23995:24012 Coccinelle.dickson Make permut_cons_inside defax
R23995:24012 Coccinelle.dickson Make permut_cons_inside defax
R23995:24012 Coccinelle.dickson Make permut_cons_inside defax
R24139:24148 Coq.Init.Logic <> refl_equal syndef
R24124:24133 Coq.Init.Logic <> refl_equal syndef
R24139:24148 Coq.Init.Logic <> refl_equal syndef
R24124:24133 Coq.Init.Logic <> refl_equal syndef
R24213:24216 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24206:24206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24209:24209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24212:24212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24213:24216 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24206:24206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24209:24209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24212:24212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24248:24269 Coccinelle.dickson Make permut_cons_inside defax
R24292:24301 Coq.Init.Logic <> refl_equal syndef
R24248:24269 Coccinelle.dickson Make permut_cons_inside defax
R24248:24269 Coccinelle.dickson Make permut_cons_inside defax
R24248:24269 Coccinelle.dickson Make permut_cons_inside defax
R24292:24301 Coq.Init.Logic <> refl_equal syndef
R24316:24326 Coq.Lists.List <> app_nil_end thm
R24316:24326 Coq.Lists.List <> app_nil_end thm
R24316:24326 Coq.Lists.List <> app_nil_end thm
R24359:24369 Coccinelle.dickson Make permut_cons defax
R24359:24369 Coccinelle.dickson Make permut_cons defax
R24359:24369 Coccinelle.dickson Make permut_cons defax
R24359:24369 Coccinelle.dickson Make permut_cons defax
R24464:24473 Coq.Init.Logic <> refl_equal syndef
R24451:24454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24464:24473 Coq.Init.Logic <> refl_equal syndef
R24451:24454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24488:24494 Coq.Lists.List <> ass_app syndef
R24488:24494 Coq.Lists.List <> ass_app syndef
R24488:24494 Coq.Lists.List <> ass_app syndef
R24519:24528 Coq.Init.Logic <> refl_equal syndef
R24519:24528 Coq.Init.Logic <> refl_equal syndef
R24593:24596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24585:24585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24588:24589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24592:24592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24593:24596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24585:24585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24588:24589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24592:24592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24646:24660 Coccinelle.dickson Make permut_cons defax
R24683:24692 Coq.Init.Logic <> refl_equal syndef
R24646:24660 Coccinelle.dickson Make permut_cons defax
R24646:24660 Coccinelle.dickson Make permut_cons defax
R24646:24660 Coccinelle.dickson Make permut_cons defax
R24683:24692 Coq.Init.Logic <> refl_equal syndef
R24714:24731 Coccinelle.dickson Make permut_cons_inside defax
R24714:24731 Coccinelle.dickson Make permut_cons_inside defax
R24714:24731 Coccinelle.dickson Make permut_cons_inside defax
R24714:24731 Coccinelle.dickson Make permut_cons_inside defax
R24832:24841 Coq.Init.Logic <> refl_equal syndef
R24817:24826 Coq.Init.Logic <> refl_equal syndef
R24799:24802 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24787:24791 Coccinelle.dickson Make consn def
R24832:24841 Coq.Init.Logic <> refl_equal syndef
R24817:24826 Coq.Init.Logic <> refl_equal syndef
R24799:24802 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24787:24791 Coccinelle.dickson Make consn def
prf 24860:24875 Make multiset_closure
R24905:24910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24965:24970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24971:24977 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24979:24980 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24981:24987 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24990:24993 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25022:25027 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24994:24999 Coccinelle.dickson Make permut syndef
R25004:25004 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25014:25018 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25005:25011 Coccinelle.dickson Make appendn def
R25013:25013 Coccinelle.dickson <> l var
R25019:25020 Coccinelle.dickson <> pq var
R25001:25001 Coccinelle.dickson <> p var
R25054:25059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25028:25033 Coccinelle.dickson Make permut syndef
R25038:25038 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25046:25050 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25039:25043 Coccinelle.dickson Make consn def
R25045:25045 Coccinelle.dickson <> l var
R25051:25052 Coccinelle.dickson <> pq var
R25035:25035 Coccinelle.dickson <> q var
R25068:25073 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25061:25064 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R25060:25060 Coccinelle.dickson <> l var
R25065:25067 Coq.Init.Datatypes <> nil constr
R25074:25074 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25147:25154 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25250:25250 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25107:25110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25138:25141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25142:25142 Coccinelle.dickson <> R var
R25146:25146 Coccinelle.dickson <> a var
R25144:25144 Coccinelle.dickson <> b var
R25121:25123 Coccinelle.more_list <> mem def
R25136:25137 Coccinelle.dickson <> la var
R25134:25134 Coccinelle.dickson <> b var
R25125:25132 Coccinelle.dickson Make eq_A defax
R25096:25097 Coq.Lists.List <> In def
R25106:25106 Coccinelle.dickson <> l var
R25099:25099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25101:25101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25104:25104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25100:25100 Coccinelle.dickson <> a var
R25102:25103 Coccinelle.dickson <> la var
R25155:25155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25172:25176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25211:25214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25241:25244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25245:25249 Coq.Init.Logic <> False ind
R25215:25217 Coccinelle.more_list <> mem def
R25231:25237 Coccinelle.dickson Make appendn def
R25239:25239 Coccinelle.dickson <> l var
R25228:25228 Coccinelle.dickson <> a var
R25219:25226 Coccinelle.dickson Make eq_A defax
R25187:25189 Coccinelle.more_list <> mem def
R25203:25207 Coccinelle.dickson Make consn def
R25209:25209 Coccinelle.dickson <> l var
R25200:25200 Coccinelle.dickson <> a var
R25191:25198 Coccinelle.dickson Make eq_A defax
R25166:25166 Coq.Init.Logic <> :type_scope:'~'_x not
R25167:25167 Coccinelle.dickson <> R var
R25171:25171 Coccinelle.dickson <> a var
R25169:25169 Coccinelle.dickson <> a var
R24923:24932 Coccinelle.TransClosure <> trans_clos ind
R24964:24964 Coccinelle.dickson <> q var
R24962:24962 Coccinelle.dickson <> p var
R24935:24957 Coccinelle.dickson Make multiset_extension_step ind
R24959:24959 Coccinelle.dickson <> R var
R24891:24900 Coq.Relations.Relation_Definitions <> transitive def
R24904:24904 Coccinelle.dickson <> R var
R25420:25423 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25414:25414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25416:25416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25419:25419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25424:25426 Coq.Init.Datatypes <> nil constr
R25420:25423 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25414:25414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25416:25416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25419:25419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25424:25426 Coq.Init.Datatypes <> nil constr
R25479:25489 Coq.Lists.List <> app_nil_end thm
R25479:25489 Coq.Lists.List <> app_nil_end thm
R25479:25489 Coq.Lists.List <> app_nil_end thm
R25625:25635 Coq.Lists.List <> app_nil_end thm
R25625:25635 Coq.Lists.List <> app_nil_end thm
R25625:25635 Coq.Lists.List <> app_nil_end thm
R25941:25943 Coccinelle.more_list <> mem def
R25957:25957 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25967:25971 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25958:25964 Coccinelle.dickson Make appendn def
R25945:25952 Coccinelle.dickson Make eq_A defax
R25941:25943 Coccinelle.more_list <> mem def
R25957:25957 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25967:25971 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25958:25964 Coccinelle.dickson Make appendn def
R25945:25952 Coccinelle.dickson Make eq_A defax
R25985:25989 Coq.Init.Logic <> proj1 thm
R25992:26005 Coccinelle.dickson Make mem_permut_mem defax
R25985:25989 Coq.Init.Logic <> proj1 thm
R25992:26005 Coccinelle.dickson Make mem_permut_mem defax
R26023:26027 Coq.Init.Logic <> proj1 thm
R26030:26043 Coccinelle.dickson Make mem_permut_mem defax
R26048:26057 Coccinelle.dickson Make permut_sym defax
R26023:26027 Coq.Init.Logic <> proj1 thm
R26030:26043 Coccinelle.dickson Make mem_permut_mem defax
R26048:26057 Coccinelle.dickson Make permut_sym defax
R26079:26088 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26094:26101 Coccinelle.dickson Make eq_proof defax
R26079:26088 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26094:26101 Coccinelle.dickson Make eq_proof defax
R26116:26125 Coccinelle.more_list <> mem_or_app thm
R26116:26125 Coccinelle.more_list <> mem_or_app thm
R26116:26125 Coccinelle.more_list <> mem_or_app thm
R26156:26166 Coccinelle.more_list <> mem_bool_ok thm
R26190:26196 Coccinelle.dickson Make appendn def
R26172:26185 Coccinelle.dickson Make eq_bool_ok defax
R26156:26166 Coccinelle.more_list <> mem_bool_ok thm
R26190:26196 Coccinelle.dickson Make appendn def
R26172:26185 Coccinelle.dickson Make eq_bool_ok defax
R26209:26216 Coccinelle.more_list <> mem_bool def
R26233:26239 Coccinelle.dickson Make appendn def
R26218:26228 Coccinelle.dickson Make eq_bool defax
R26209:26216 Coccinelle.more_list <> mem_bool def
R26233:26239 Coccinelle.dickson Make appendn def
R26218:26228 Coccinelle.dickson Make eq_bool defax
R26297:26306 Coccinelle.dickson Make in_appendn thm
R26297:26306 Coccinelle.dickson Make in_appendn thm
R26365:26377 Coccinelle.more_list <> mem_split_set thm
R26383:26392 Coccinelle.dickson Make eq_bool_ok defax
R26365:26377 Coccinelle.more_list <> mem_split_set thm
R26383:26392 Coccinelle.dickson Make eq_bool_ok defax
R26495:26502 Coq.Lists.List <> In_split syndef
R26495:26502 Coq.Lists.List <> In_split syndef
R26553:26563 Coccinelle.dickson Make appendn_app thm
R26604:26610 Coq.Lists.List <> ass_app syndef
R26553:26563 Coccinelle.dickson Make appendn_app thm
R26553:26563 Coccinelle.dickson Make appendn_app thm
R26604:26610 Coq.Lists.List <> ass_app syndef
R26604:26610 Coq.Lists.List <> ass_app syndef
R26604:26610 Coq.Lists.List <> ass_app syndef
R26604:26610 Coq.Lists.List <> ass_app syndef
R26604:26610 Coq.Lists.List <> ass_app syndef
R26604:26610 Coq.Lists.List <> ass_app syndef
R26642:26648 Coq.Lists.List <> ass_app syndef
R26642:26648 Coq.Lists.List <> ass_app syndef
R26642:26648 Coq.Lists.List <> ass_app syndef
R26670:26681 Coccinelle.dickson Make permut_trans defax
R26684:26693 Coccinelle.dickson Make permut_sym defax
R26670:26681 Coccinelle.dickson Make permut_trans defax
R26684:26693 Coccinelle.dickson Make permut_sym defax
R26738:26755 Coccinelle.dickson Make permut_cons_inside defax
R26738:26755 Coccinelle.dickson Make permut_cons_inside defax
R26738:26755 Coccinelle.dickson Make permut_cons_inside defax
R26738:26755 Coccinelle.dickson Make permut_cons_inside defax
R26776:26782 Coq.Lists.List <> ass_app syndef
R26776:26782 Coq.Lists.List <> ass_app syndef
R26776:26782 Coq.Lists.List <> ass_app syndef
R26804:26824 Coccinelle.dickson Make remove_equiv_is_sound defax
R26827:26831 Coccinelle.dickson Make consn def
R26836:26839 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26804:26824 Coccinelle.dickson Make remove_equiv_is_sound defax
R26827:26831 Coccinelle.dickson Make consn def
R26836:26839 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26862:26873 Coccinelle.more_list <> remove_equiv def
R26887:26891 Coccinelle.dickson Make consn def
R26896:26899 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26877:26883 Coccinelle.dickson Make eq_bool defax
R26875:26875 Coccinelle.dickson Make A defax
R26862:26873 Coccinelle.more_list <> remove_equiv def
R26887:26891 Coccinelle.dickson Make consn def
R26896:26899 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26877:26883 Coccinelle.dickson Make eq_bool defax
R26875:26875 Coccinelle.dickson Make A defax
R26973:26993 Coccinelle.dickson Make multiset_closure_aux3 thm
R26998:27001 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27095:27098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27056:27056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27058:27059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27094:27094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27063:27066 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27071:27074 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27078:27082 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27093:27093 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27083:27089 Coccinelle.dickson Make appendn def
R27115:27118 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26973:26993 Coccinelle.dickson Make multiset_closure_aux3 thm
R26998:27001 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27095:27098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27056:27056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27058:27059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27094:27094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27063:27066 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27071:27074 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27078:27082 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27093:27093 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27083:27089 Coccinelle.dickson Make appendn def
R27115:27118 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27158:27161 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27137:27148 Coccinelle.dickson Make permut_trans defax
R27158:27161 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27137:27148 Coccinelle.dickson Make permut_trans defax
R27204:27204 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27214:27218 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27207:27210 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27185:27196 Coccinelle.dickson Make permut_trans defax
R27204:27204 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27214:27218 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27207:27210 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27185:27196 Coccinelle.dickson Make permut_trans defax
R27235:27245 Coccinelle.dickson Make permut_app2 defax
R27235:27245 Coccinelle.dickson Make permut_app2 defax
R27235:27245 Coccinelle.dickson Make permut_app2 defax
R27282:27282 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27292:27297 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27344:27344 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27285:27288 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27308:27311 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27298:27304 Coccinelle.dickson Make appendn def
R27315:27318 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27323:27326 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27338:27341 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27327:27333 Coccinelle.dickson Make appendn def
R27263:27274 Coccinelle.dickson Make permut_trans defax
R27282:27282 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27292:27297 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27344:27344 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27285:27288 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27308:27311 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27298:27304 Coccinelle.dickson Make appendn def
R27315:27318 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27323:27326 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27338:27341 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27327:27333 Coccinelle.dickson Make appendn def
R27263:27274 Coccinelle.dickson Make permut_trans defax
R27359:27369 Coccinelle.dickson Make permut_app1 defax
R27359:27369 Coccinelle.dickson Make permut_app1 defax
R27359:27369 Coccinelle.dickson Make permut_app1 defax
R27401:27407 Coq.Lists.List <> ass_app syndef
R27421:27431 Coccinelle.dickson Make permut_app2 defax
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27401:27407 Coq.Lists.List <> ass_app syndef
R27421:27431 Coccinelle.dickson Make permut_app2 defax
R27421:27431 Coccinelle.dickson Make permut_app2 defax
R27442:27453 Coccinelle.dickson Make permut_trans defax
R27458:27476 Coccinelle.dickson Make list_permut_app_app defax
R27442:27453 Coccinelle.dickson Make permut_trans defax
R27458:27476 Coccinelle.dickson Make list_permut_app_app defax
R27501:27507 Coq.Lists.List <> ass_app syndef
R27521:27531 Coccinelle.dickson Make permut_app1 defax
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27501:27507 Coq.Lists.List <> ass_app syndef
R27521:27531 Coccinelle.dickson Make permut_app1 defax
R27521:27531 Coccinelle.dickson Make permut_app1 defax
R27542:27548 Coq.Lists.List <> ass_app syndef
R27542:27548 Coq.Lists.List <> ass_app syndef
R27542:27548 Coq.Lists.List <> ass_app syndef
R27559:27570 Coccinelle.dickson Make permut_trans defax
R27573:27591 Coccinelle.dickson Make list_permut_app_app defax
R27559:27570 Coccinelle.dickson Make permut_trans defax
R27573:27591 Coccinelle.dickson Make list_permut_app_app defax
R27618:27624 Coq.Lists.List <> ass_app syndef
R27643:27653 Coccinelle.dickson Make permut_app1 defax
R27618:27624 Coq.Lists.List <> ass_app syndef
R27618:27624 Coq.Lists.List <> ass_app syndef
R27618:27624 Coq.Lists.List <> ass_app syndef
R27618:27624 Coq.Lists.List <> ass_app syndef
R27618:27624 Coq.Lists.List <> ass_app syndef
R27618:27624 Coq.Lists.List <> ass_app syndef
R27643:27653 Coccinelle.dickson Make permut_app1 defax
R27643:27653 Coccinelle.dickson Make permut_app1 defax
R27643:27653 Coccinelle.dickson Make permut_app1 defax
R27643:27653 Coccinelle.dickson Make permut_app1 defax
R27664:27675 Coccinelle.dickson Make permut_trans defax
R27678:27696 Coccinelle.dickson Make list_permut_app_app defax
R27664:27675 Coccinelle.dickson Make permut_trans defax
R27678:27696 Coccinelle.dickson Make list_permut_app_app defax
R27723:27729 Coq.Lists.List <> ass_app syndef
R27743:27753 Coccinelle.dickson Make permut_app1 defax
R27723:27729 Coq.Lists.List <> ass_app syndef
R27723:27729 Coq.Lists.List <> ass_app syndef
R27723:27729 Coq.Lists.List <> ass_app syndef
R27723:27729 Coq.Lists.List <> ass_app syndef
R27743:27753 Coccinelle.dickson Make permut_app1 defax
R27743:27753 Coccinelle.dickson Make permut_app1 defax
R27772:27782 Coccinelle.dickson Make appendn_app thm
R27791:27804 Coccinelle.dickson Make permut_appendn thm
R27772:27782 Coccinelle.dickson Make appendn_app thm
R27772:27782 Coccinelle.dickson Make appendn_app thm
R27772:27782 Coccinelle.dickson Make appendn_app thm
R27772:27782 Coccinelle.dickson Make appendn_app thm
R27791:27804 Coccinelle.dickson Make permut_appendn thm
R27831:27837 Coq.Lists.List <> ass_app syndef
R27831:27837 Coq.Lists.List <> ass_app syndef
R27831:27837 Coq.Lists.List <> ass_app syndef
R27908:27911 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27865:27869 Coccinelle.dickson Make consn def
R27874:27877 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27900:27903 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27878:27878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27880:27881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27899:27899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27885:27888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27891:27894 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27846:27857 Coccinelle.dickson Make permut_trans defax
R27908:27911 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27865:27869 Coccinelle.dickson Make consn def
R27874:27877 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27900:27903 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27878:27878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27880:27881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27899:27899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27885:27888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27891:27894 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27846:27857 Coccinelle.dickson Make permut_trans defax
R27940:27950 Coccinelle.dickson Make permut_app2 defax
R27961:27969 Coccinelle.dickson Make consn_app thm
R27985:27994 Coccinelle.dickson Make permut_sym defax
R28009:28026 Coccinelle.dickson Make permut_cons_inside defax
R27940:27950 Coccinelle.dickson Make permut_app2 defax
R27940:27950 Coccinelle.dickson Make permut_app2 defax
R27961:27969 Coccinelle.dickson Make consn_app thm
R27961:27969 Coccinelle.dickson Make consn_app thm
R27985:27994 Coccinelle.dickson Make permut_sym defax
R28009:28026 Coccinelle.dickson Make permut_cons_inside defax
R28009:28026 Coccinelle.dickson Make permut_cons_inside defax
R28009:28026 Coccinelle.dickson Make permut_cons_inside defax
R28057:28060 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28035:28046 Coccinelle.dickson Make permut_trans defax
R28057:28060 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28035:28046 Coccinelle.dickson Make permut_trans defax
R28077:28087 Coccinelle.dickson Make permut_app2 defax
R28077:28087 Coccinelle.dickson Make permut_app2 defax
R28077:28087 Coccinelle.dickson Make permut_app2 defax
R28110:28121 Coccinelle.dickson Make permut_trans defax
R28124:28142 Coccinelle.dickson Make list_permut_app_app defax
R28110:28121 Coccinelle.dickson Make permut_trans defax
R28124:28142 Coccinelle.dickson Make list_permut_app_app defax
R28179:28183 Coccinelle.dickson Make consn def
R28188:28191 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28159:28170 Coccinelle.dickson Make permut_trans defax
R28179:28183 Coccinelle.dickson Make consn def
R28188:28191 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28159:28170 Coccinelle.dickson Make permut_trans defax
R28205:28214 Coccinelle.dickson Make permut_sym defax
R28205:28214 Coccinelle.dickson Make permut_sym defax
R28237:28245 Coccinelle.dickson Make consn_app thm
R28237:28245 Coccinelle.dickson Make consn_app thm
R28237:28245 Coccinelle.dickson Make consn_app thm
R28261:28270 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28276:28283 Coccinelle.dickson Make eq_proof defax
R28261:28270 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28276:28283 Coccinelle.dickson Make eq_proof defax
R28440:28446 Coq.Lists.List <> ass_app syndef
R28471:28480 Coccinelle.more_list <> mem_or_app thm
R28440:28446 Coq.Lists.List <> ass_app syndef
R28440:28446 Coq.Lists.List <> ass_app syndef
R28471:28480 Coccinelle.more_list <> mem_or_app thm
R28471:28480 Coccinelle.more_list <> mem_or_app thm
R28563:28566 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28569:28572 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28563:28566 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28569:28572 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28596:28605 Coccinelle.more_list <> mem_insert thm
R28596:28605 Coccinelle.more_list <> mem_insert thm
R28628:28637 Coccinelle.more_list <> mem_or_app thm
R28628:28637 Coccinelle.more_list <> mem_or_app thm
R28628:28637 Coccinelle.more_list <> mem_or_app thm
R28747:28760 Coccinelle.dickson Make mem_permut_mem defax
R28781:28790 Coccinelle.more_list <> mem_or_app thm
R28747:28760 Coccinelle.dickson Make mem_permut_mem defax
R28747:28760 Coccinelle.dickson Make mem_permut_mem defax
R28781:28790 Coccinelle.more_list <> mem_or_app thm
R28781:28790 Coccinelle.more_list <> mem_or_app thm
R28833:28836 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28839:28842 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28833:28836 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28839:28842 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28870:28879 Coccinelle.dickson Make in_appendn thm
R28870:28879 Coccinelle.dickson Make in_appendn thm
R28990:28998 Coccinelle.more_list <> in_insert thm
R28990:28998 Coccinelle.more_list <> in_insert thm
R29010:29033 Coccinelle.list_permut <> in_permut_in thm
R29046:29054 Coq.Lists.List <> in_or_app thm
R29010:29033 Coccinelle.list_permut <> in_permut_in thm
R29010:29033 Coccinelle.list_permut <> in_permut_in thm
R29046:29054 Coq.Lists.List <> in_or_app thm
R29090:29092 Coccinelle.more_list <> mem def
R29094:29097 Coccinelle.dickson Make eq_A defax
R29090:29092 Coccinelle.more_list <> mem def
R29094:29097 Coccinelle.dickson Make eq_A defax
R29118:29131 Coccinelle.dickson Make mem_permut_mem defax
R29118:29131 Coccinelle.dickson Make mem_permut_mem defax
R29118:29131 Coccinelle.dickson Make mem_permut_mem defax
R29148:29156 Coccinelle.dickson Make mem_consn thm
R29148:29156 Coccinelle.dickson Make mem_consn thm
R29148:29156 Coccinelle.dickson Make mem_consn thm
R29225:29238 Coccinelle.dickson Make mem_permut_mem defax
R29259:29268 Coccinelle.more_list <> mem_or_app thm
R29225:29238 Coccinelle.dickson Make mem_permut_mem defax
R29225:29238 Coccinelle.dickson Make mem_permut_mem defax
R29259:29268 Coccinelle.more_list <> mem_or_app thm
R29259:29268 Coccinelle.more_list <> mem_or_app thm
R29310:29313 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29316:29319 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29310:29313 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29316:29319 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29334:29342 Coq.Lists.List <> in_or_app thm
R29364:29373 Coq.Init.Logic <> refl_equal syndef
R29334:29342 Coq.Lists.List <> in_or_app thm
R29364:29373 Coq.Init.Logic <> refl_equal syndef
R29387:29396 Coccinelle.more_list <> mem_or_app thm
R29387:29396 Coccinelle.more_list <> mem_or_app thm
R29387:29396 Coccinelle.more_list <> mem_or_app thm
R29461:29469 Coccinelle.more_list <> in_insert thm
R29461:29469 Coccinelle.more_list <> in_insert thm
R29490:29513 Coccinelle.list_permut <> in_permut_in thm
R29490:29513 Coccinelle.list_permut <> in_permut_in thm
R29490:29513 Coccinelle.list_permut <> in_permut_in thm
R29526:29534 Coq.Lists.List <> in_or_app thm
R29526:29534 Coq.Lists.List <> in_or_app thm
R29630:29636 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29630:29636 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29670:29676 Coq.Lists.List <> ass_app syndef
R29735:29744 Coccinelle.more_list <> mem_or_app thm
R29735:29744 Coccinelle.more_list <> mem_or_app thm
R29735:29744 Coccinelle.more_list <> mem_or_app thm
R29828:29837 Coccinelle.more_list <> mem_or_app thm
R29828:29837 Coccinelle.more_list <> mem_or_app thm
R29828:29837 Coccinelle.more_list <> mem_or_app thm
R29942:29945 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29948:29951 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29942:29945 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29948:29951 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29966:29974 Coq.Lists.List <> in_or_app thm
R29996:30005 Coq.Init.Logic <> refl_equal syndef
R29966:29974 Coq.Lists.List <> in_or_app thm
R29996:30005 Coq.Init.Logic <> refl_equal syndef
R30014:30023 Coccinelle.more_list <> mem_insert thm
R30014:30023 Coccinelle.more_list <> mem_insert thm
R30101:30114 Coccinelle.dickson Make mem_permut_mem defax
R30135:30144 Coccinelle.more_list <> mem_or_app thm
R30101:30114 Coccinelle.dickson Make mem_permut_mem defax
R30101:30114 Coccinelle.dickson Make mem_permut_mem defax
R30135:30144 Coccinelle.more_list <> mem_or_app thm
R30135:30144 Coccinelle.more_list <> mem_or_app thm
R30187:30190 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30193:30196 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30187:30190 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30193:30196 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30211:30219 Coq.Lists.List <> in_or_app thm
R30241:30250 Coq.Init.Logic <> refl_equal syndef
R30211:30219 Coq.Lists.List <> in_or_app thm
R30241:30250 Coq.Init.Logic <> refl_equal syndef
R30264:30273 Coccinelle.more_list <> mem_or_app thm
R30264:30273 Coccinelle.more_list <> mem_or_app thm
R30264:30273 Coccinelle.more_list <> mem_or_app thm
R30339:30347 Coccinelle.dickson Make consn_app thm
R30361:30370 Coccinelle.more_list <> mem_or_app thm
R30339:30347 Coccinelle.dickson Make consn_app thm
R30339:30347 Coccinelle.dickson Make consn_app thm
R30361:30370 Coccinelle.more_list <> mem_or_app thm
R30361:30370 Coccinelle.more_list <> mem_or_app thm
R30393:30402 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30408:30415 Coccinelle.dickson Make eq_proof defax
R30393:30402 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30408:30415 Coccinelle.dickson Make eq_proof defax
R30430:30440 Coccinelle.dickson Make appendn_app thm
R30430:30440 Coccinelle.dickson Make appendn_app thm
R30430:30440 Coccinelle.dickson Make appendn_app thm
R30467:30480 Coccinelle.dickson Make mem_permut_mem defax
R30485:30498 Coccinelle.dickson Make permut_appendn thm
R30467:30480 Coccinelle.dickson Make mem_permut_mem defax
R30485:30498 Coccinelle.dickson Make permut_appendn thm
R30467:30480 Coccinelle.dickson Make mem_permut_mem defax
R30485:30498 Coccinelle.dickson Make permut_appendn thm
R30526:30536 Coccinelle.dickson Make appendn_app thm
R30550:30559 Coccinelle.more_list <> mem_or_app thm
R30526:30536 Coccinelle.dickson Make appendn_app thm
R30526:30536 Coccinelle.dickson Make appendn_app thm
R30550:30559 Coccinelle.more_list <> mem_or_app thm
R30550:30559 Coccinelle.more_list <> mem_or_app thm
R30570:30580 Coccinelle.dickson Make appendn_app thm
R30606:30615 Coccinelle.more_list <> mem_or_app thm
R30570:30580 Coccinelle.dickson Make appendn_app thm
R30570:30580 Coccinelle.dickson Make appendn_app thm
R30606:30615 Coccinelle.more_list <> mem_or_app thm
R30606:30615 Coccinelle.more_list <> mem_or_app thm
R30714:30723 Coccinelle.more_list <> mem_or_app thm
R30714:30723 Coccinelle.more_list <> mem_or_app thm
R30714:30723 Coccinelle.more_list <> mem_or_app thm
R30760:30769 Coccinelle.more_list <> mem_or_app thm
R30760:30769 Coccinelle.more_list <> mem_or_app thm
R30760:30769 Coccinelle.more_list <> mem_or_app thm
R30860:30869 Coccinelle.more_list <> mem_or_app thm
R30860:30869 Coccinelle.more_list <> mem_or_app thm
R30860:30869 Coccinelle.more_list <> mem_or_app thm
R30971:30979 Coccinelle.dickson Make consn_app thm
R30995:31004 Coccinelle.more_list <> mem_insert thm
R31018:31026 Coccinelle.dickson Make consn_app thm
R30971:30979 Coccinelle.dickson Make consn_app thm
R30971:30979 Coccinelle.dickson Make consn_app thm
R30995:31004 Coccinelle.more_list <> mem_insert thm
R31018:31026 Coccinelle.dickson Make consn_app thm
R31018:31026 Coccinelle.dickson Make consn_app thm
R31039:31052 Coccinelle.dickson Make mem_permut_mem defax
R31057:31068 Coccinelle.dickson Make permut_consn thm
R31084:31092 Coccinelle.dickson Make consn_app thm
R31106:31115 Coccinelle.more_list <> mem_or_app thm
R31039:31052 Coccinelle.dickson Make mem_permut_mem defax
R31057:31068 Coccinelle.dickson Make permut_consn thm
R31039:31052 Coccinelle.dickson Make mem_permut_mem defax
R31057:31068 Coccinelle.dickson Make permut_consn thm
R31084:31092 Coccinelle.dickson Make consn_app thm
R31084:31092 Coccinelle.dickson Make consn_app thm
R31106:31115 Coccinelle.more_list <> mem_or_app thm
R31106:31115 Coccinelle.more_list <> mem_or_app thm
R31142:31152 Coccinelle.dickson Make appendn_app thm
R31166:31175 Coccinelle.more_list <> mem_or_app thm
R31203:31212 Coccinelle.more_list <> mem_or_app thm
R31227:31236 Coccinelle.more_list <> mem_insert thm
R31142:31152 Coccinelle.dickson Make appendn_app thm
R31142:31152 Coccinelle.dickson Make appendn_app thm
R31166:31175 Coccinelle.more_list <> mem_or_app thm
R31166:31175 Coccinelle.more_list <> mem_or_app thm
R31203:31212 Coccinelle.more_list <> mem_or_app thm
R31203:31212 Coccinelle.more_list <> mem_or_app thm
R31227:31236 Coccinelle.more_list <> mem_insert thm
R31293:31306 Coccinelle.dickson Make mem_permut_mem defax
R31293:31306 Coccinelle.dickson Make mem_permut_mem defax
R31293:31306 Coccinelle.dickson Make mem_permut_mem defax
R31365:31373 Coccinelle.dickson Make consn_app thm
R31389:31398 Coccinelle.more_list <> mem_insert thm
R31412:31420 Coccinelle.dickson Make consn_app thm
R31432:31445 Coccinelle.dickson Make mem_permut_mem defax
R31450:31461 Coccinelle.dickson Make permut_consn thm
R31477:31485 Coccinelle.dickson Make consn_app thm
R31499:31508 Coccinelle.more_list <> mem_or_app thm
R31365:31373 Coccinelle.dickson Make consn_app thm
R31365:31373 Coccinelle.dickson Make consn_app thm
R31389:31398 Coccinelle.more_list <> mem_insert thm
R31412:31420 Coccinelle.dickson Make consn_app thm
R31412:31420 Coccinelle.dickson Make consn_app thm
R31432:31445 Coccinelle.dickson Make mem_permut_mem defax
R31450:31461 Coccinelle.dickson Make permut_consn thm
R31432:31445 Coccinelle.dickson Make mem_permut_mem defax
R31450:31461 Coccinelle.dickson Make permut_consn thm
R31477:31485 Coccinelle.dickson Make consn_app thm
R31477:31485 Coccinelle.dickson Make consn_app thm
R31499:31508 Coccinelle.more_list <> mem_or_app thm
R31499:31508 Coccinelle.more_list <> mem_or_app thm
R31538:31548 Coccinelle.dickson Make appendn_app thm
R31575:31588 Coccinelle.dickson Make mem_permut_mem defax
R31593:31606 Coccinelle.dickson Make permut_appendn thm
R31538:31548 Coccinelle.dickson Make appendn_app thm
R31538:31548 Coccinelle.dickson Make appendn_app thm
R31575:31588 Coccinelle.dickson Make mem_permut_mem defax
R31593:31606 Coccinelle.dickson Make permut_appendn thm
R31575:31588 Coccinelle.dickson Make mem_permut_mem defax
R31593:31606 Coccinelle.dickson Make permut_appendn thm
R31634:31644 Coccinelle.dickson Make appendn_app thm
R31658:31667 Coccinelle.more_list <> mem_or_app thm
R31678:31688 Coccinelle.dickson Make appendn_app thm
R31634:31644 Coccinelle.dickson Make appendn_app thm
R31634:31644 Coccinelle.dickson Make appendn_app thm
R31658:31667 Coccinelle.more_list <> mem_or_app thm
R31658:31667 Coccinelle.more_list <> mem_or_app thm
R31678:31688 Coccinelle.dickson Make appendn_app thm
R31678:31688 Coccinelle.dickson Make appendn_app thm
R31715:31724 Coccinelle.more_list <> mem_or_app thm
R31817:31826 Coccinelle.more_list <> mem_or_app thm
R31715:31724 Coccinelle.more_list <> mem_or_app thm
R31715:31724 Coccinelle.more_list <> mem_or_app thm
R31817:31826 Coccinelle.more_list <> mem_or_app thm
R31817:31826 Coccinelle.more_list <> mem_or_app thm
R31873:31875 Coccinelle.more_list <> mem def
R31877:31880 Coccinelle.dickson Make eq_A defax
R31873:31875 Coccinelle.more_list <> mem def
R31877:31880 Coccinelle.dickson Make eq_A defax
R31954:31956 Coccinelle.more_list <> mem def
R31966:31972 Coccinelle.dickson Make appendn def
R31958:31961 Coccinelle.dickson Make eq_A defax
R31954:31956 Coccinelle.more_list <> mem def
R31966:31972 Coccinelle.dickson Make appendn def
R31958:31961 Coccinelle.dickson Make eq_A defax
R31998:32010 Coccinelle.more_list <> mem_split_set thm
R32016:32025 Coccinelle.dickson Make eq_bool_ok defax
R31998:32010 Coccinelle.more_list <> mem_split_set thm
R32016:32025 Coccinelle.dickson Make eq_bool_ok defax
R32100:32111 Coccinelle.dickson Make permut_trans defax
R32114:32123 Coccinelle.dickson Make permut_sym defax
R32100:32111 Coccinelle.dickson Make permut_trans defax
R32114:32123 Coccinelle.dickson Make permut_sym defax
R32165:32171 Coq.Lists.List <> ass_app syndef
R32192:32209 Coccinelle.dickson Make permut_cons_inside defax
R32230:32236 Coq.Lists.List <> ass_app syndef
R32165:32171 Coq.Lists.List <> ass_app syndef
R32165:32171 Coq.Lists.List <> ass_app syndef
R32192:32209 Coccinelle.dickson Make permut_cons_inside defax
R32192:32209 Coccinelle.dickson Make permut_cons_inside defax
R32192:32209 Coccinelle.dickson Make permut_cons_inside defax
R32230:32236 Coq.Lists.List <> ass_app syndef
R32230:32236 Coq.Lists.List <> ass_app syndef
R32230:32236 Coq.Lists.List <> ass_app syndef
R32230:32236 Coq.Lists.List <> ass_app syndef
R32258:32278 Coccinelle.dickson Make remove_equiv_is_sound defax
R32281:32285 Coccinelle.dickson Make consn def
R32306:32317 Coccinelle.more_list <> remove_equiv def
R32330:32334 Coccinelle.dickson Make consn def
R32321:32327 Coccinelle.dickson Make eq_bool defax
R32319:32319 Coccinelle.dickson Make A defax
R32406:32426 Coccinelle.dickson Make multiset_closure_aux3 thm
R32258:32278 Coccinelle.dickson Make remove_equiv_is_sound defax
R32281:32285 Coccinelle.dickson Make consn def
R32306:32317 Coccinelle.more_list <> remove_equiv def
R32330:32334 Coccinelle.dickson Make consn def
R32321:32327 Coccinelle.dickson Make eq_bool defax
R32319:32319 Coccinelle.dickson Make A defax
R32406:32426 Coccinelle.dickson Make multiset_closure_aux3 thm
R32503:32506 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32479:32479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32481:32482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32502:32502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32486:32490 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32501:32501 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32491:32497 Coccinelle.dickson Make appendn def
R32523:32527 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32539:32539 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32531:32534 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32503:32506 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32479:32479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32481:32482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32502:32502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32486:32490 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32501:32501 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32491:32497 Coccinelle.dickson Make appendn def
R32523:32527 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32539:32539 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32531:32534 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32584:32587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32563:32574 Coccinelle.dickson Make permut_trans defax
R32584:32587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32563:32574 Coccinelle.dickson Make permut_trans defax
R32632:32636 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32661:32661 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32646:32649 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32637:32643 Coccinelle.dickson Make appendn def
R32653:32656 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32611:32622 Coccinelle.dickson Make permut_trans defax
R32632:32636 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32661:32661 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32646:32649 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32637:32643 Coccinelle.dickson Make appendn def
R32653:32656 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32611:32622 Coccinelle.dickson Make permut_trans defax
R32676:32686 Coccinelle.dickson Make permut_app1 defax
R32676:32686 Coccinelle.dickson Make permut_app1 defax
R32676:32686 Coccinelle.dickson Make permut_app1 defax
R32714:32720 Coq.Lists.List <> ass_app syndef
R32739:32749 Coccinelle.dickson Make permut_app2 defax
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32714:32720 Coq.Lists.List <> ass_app syndef
R32739:32749 Coccinelle.dickson Make permut_app2 defax
R32739:32749 Coccinelle.dickson Make permut_app2 defax
R32739:32749 Coccinelle.dickson Make permut_app2 defax
R32739:32749 Coccinelle.dickson Make permut_app2 defax
R32777:32777 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32787:32791 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32780:32783 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32792:32798 Coccinelle.dickson Make appendn def
R32758:32769 Coccinelle.dickson Make permut_trans defax
R32777:32777 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32787:32791 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32780:32783 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32792:32798 Coccinelle.dickson Make appendn def
R32758:32769 Coccinelle.dickson Make permut_trans defax
R32815:32825 Coccinelle.dickson Make permut_app2 defax
R32815:32825 Coccinelle.dickson Make permut_app2 defax
R32815:32825 Coccinelle.dickson Make permut_app2 defax
R32851:32857 Coq.Lists.List <> ass_app syndef
R32868:32879 Coccinelle.dickson Make permut_trans defax
R32882:32900 Coccinelle.dickson Make list_permut_app_app defax
R32922:32932 Coccinelle.dickson Make permut_app2 defax
R32946:32952 Coq.Lists.List <> ass_app syndef
R32966:32976 Coccinelle.dickson Make appendn_app thm
R32990:33000 Coccinelle.dickson Make permut_app1 defax
R32851:32857 Coq.Lists.List <> ass_app syndef
R32851:32857 Coq.Lists.List <> ass_app syndef
R32868:32879 Coccinelle.dickson Make permut_trans defax
R32882:32900 Coccinelle.dickson Make list_permut_app_app defax
R32922:32932 Coccinelle.dickson Make permut_app2 defax
R32922:32932 Coccinelle.dickson Make permut_app2 defax
R32946:32952 Coq.Lists.List <> ass_app syndef
R32946:32952 Coq.Lists.List <> ass_app syndef
R32966:32976 Coccinelle.dickson Make appendn_app thm
R32966:32976 Coccinelle.dickson Make appendn_app thm
R32990:33000 Coccinelle.dickson Make permut_app1 defax
R32990:33000 Coccinelle.dickson Make permut_app1 defax
R33009:33022 Coccinelle.dickson Make permut_appendn thm
R33009:33022 Coccinelle.dickson Make permut_appendn thm
R33076:33079 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33069:33073 Coccinelle.dickson Make consn def
R33083:33086 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33089:33092 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33050:33061 Coccinelle.dickson Make permut_trans defax
R33076:33079 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33069:33073 Coccinelle.dickson Make consn def
R33083:33086 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33089:33092 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33050:33061 Coccinelle.dickson Make permut_trans defax
R33127:33133 Coq.Lists.List <> ass_app syndef
R33142:33151 Coccinelle.dickson Make permut_sym defax
R33166:33183 Coccinelle.dickson Make permut_cons_inside defax
R33127:33133 Coq.Lists.List <> ass_app syndef
R33127:33133 Coq.Lists.List <> ass_app syndef
R33142:33151 Coccinelle.dickson Make permut_sym defax
R33166:33183 Coccinelle.dickson Make permut_cons_inside defax
R33166:33183 Coccinelle.dickson Make permut_cons_inside defax
R33166:33183 Coccinelle.dickson Make permut_cons_inside defax
R33208:33214 Coq.Lists.List <> ass_app syndef
R33233:33243 Coccinelle.dickson Make permut_app2 defax
R33208:33214 Coq.Lists.List <> ass_app syndef
R33208:33214 Coq.Lists.List <> ass_app syndef
R33208:33214 Coq.Lists.List <> ass_app syndef
R33208:33214 Coq.Lists.List <> ass_app syndef
R33233:33243 Coccinelle.dickson Make permut_app2 defax
R33233:33243 Coccinelle.dickson Make permut_app2 defax
R33233:33243 Coccinelle.dickson Make permut_app2 defax
R33233:33243 Coccinelle.dickson Make permut_app2 defax
R33280:33283 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33271:33275 Coccinelle.dickson Make consn def
R33284:33288 Coccinelle.dickson Make consn def
R33252:33263 Coccinelle.dickson Make permut_trans defax
R33280:33283 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33271:33275 Coccinelle.dickson Make consn def
R33284:33288 Coccinelle.dickson Make consn def
R33252:33263 Coccinelle.dickson Make permut_trans defax
R33306:33316 Coccinelle.dickson Make permut_app1 defax
R33325:33334 Coccinelle.dickson Make permut_sym defax
R33306:33316 Coccinelle.dickson Make permut_app1 defax
R33306:33316 Coccinelle.dickson Make permut_app1 defax
R33325:33334 Coccinelle.dickson Make permut_sym defax
R33360:33368 Coccinelle.dickson Make consn_app thm
R33377:33388 Coccinelle.dickson Make permut_consn thm
R33360:33368 Coccinelle.dickson Make consn_app thm
R33360:33368 Coccinelle.dickson Make consn_app thm
R33377:33388 Coccinelle.dickson Make permut_consn thm
R33422:33425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33397:33412 Coccinelle.dickson Make permut_trans defax
R33422:33425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33397:33412 Coccinelle.dickson Make permut_trans defax
R33438:33460 Coccinelle.dickson Make list_permut_app_app defax
R33438:33460 Coccinelle.dickson Make list_permut_app_app defax
R33469:33482 Coccinelle.dickson Make permut_sym defax
R33469:33482 Coccinelle.dickson Make permut_sym defax
R33645:33654 Coccinelle.more_list <> mem_or_app thm
R33645:33654 Coccinelle.more_list <> mem_or_app thm
R33645:33654 Coccinelle.more_list <> mem_or_app thm
R33735:33748 Coccinelle.dickson Make mem_permut_mem defax
R33735:33748 Coccinelle.dickson Make mem_permut_mem defax
R33735:33748 Coccinelle.dickson Make mem_permut_mem defax
R33769:33778 Coccinelle.more_list <> mem_or_app thm
R33769:33778 Coccinelle.more_list <> mem_or_app thm
R33769:33778 Coccinelle.more_list <> mem_or_app thm
R33807:33816 Coccinelle.dickson Make in_appendn thm
R33807:33816 Coccinelle.dickson Make in_appendn thm
R33930:33953 Coccinelle.list_permut <> in_permut_in thm
R33930:33953 Coccinelle.list_permut <> in_permut_in thm
R33930:33953 Coccinelle.list_permut <> in_permut_in thm
R33966:33974 Coq.Lists.List <> in_or_app thm
R33966:33974 Coq.Lists.List <> in_or_app thm
R34016:34029 Coccinelle.dickson Make mem_permut_mem defax
R34050:34059 Coccinelle.more_list <> mem_or_app thm
R34016:34029 Coccinelle.dickson Make mem_permut_mem defax
R34016:34029 Coccinelle.dickson Make mem_permut_mem defax
R34050:34059 Coccinelle.more_list <> mem_or_app thm
R34050:34059 Coccinelle.more_list <> mem_or_app thm
R34080:34093 Coccinelle.dickson Make mem_permut_mem defax
R34080:34093 Coccinelle.dickson Make mem_permut_mem defax
R34080:34093 Coccinelle.dickson Make mem_permut_mem defax
R34110:34118 Coccinelle.dickson Make mem_consn thm
R34110:34118 Coccinelle.dickson Make mem_consn thm
R34110:34118 Coccinelle.dickson Make mem_consn thm
R34185:34208 Coccinelle.list_permut <> in_permut_in thm
R34221:34229 Coq.Lists.List <> in_or_app thm
R34185:34208 Coccinelle.list_permut <> in_permut_in thm
R34185:34208 Coccinelle.list_permut <> in_permut_in thm
R34221:34229 Coq.Lists.List <> in_or_app thm
R34283:34289 Coq.Lists.List <> ass_app syndef
R34300:34306 Coq.Lists.List <> ass_app syndef
R34283:34289 Coq.Lists.List <> ass_app syndef
R34283:34289 Coq.Lists.List <> ass_app syndef
R34300:34306 Coq.Lists.List <> ass_app syndef
R34300:34306 Coq.Lists.List <> ass_app syndef
R34353:34362 Coccinelle.more_list <> mem_or_app thm
R34353:34362 Coccinelle.more_list <> mem_or_app thm
R34353:34362 Coccinelle.more_list <> mem_or_app thm
R34481:34490 Coccinelle.more_list <> mem_or_app thm
R34481:34490 Coccinelle.more_list <> mem_or_app thm
R34481:34490 Coccinelle.more_list <> mem_or_app thm
R34591:34604 Coccinelle.dickson Make mem_permut_mem defax
R34626:34635 Coccinelle.more_list <> mem_or_app thm
R34591:34604 Coccinelle.dickson Make mem_permut_mem defax
R34591:34604 Coccinelle.dickson Make mem_permut_mem defax
R34626:34635 Coccinelle.more_list <> mem_or_app thm
R34626:34635 Coccinelle.more_list <> mem_or_app thm
R34690:34699 Coccinelle.dickson Make in_appendn thm
R34690:34699 Coccinelle.dickson Make in_appendn thm
R34840:34863 Coccinelle.list_permut <> in_permut_in thm
R34840:34863 Coccinelle.list_permut <> in_permut_in thm
R34840:34863 Coccinelle.list_permut <> in_permut_in thm
R34876:34884 Coq.Lists.List <> in_or_app thm
R34876:34884 Coq.Lists.List <> in_or_app thm
R34909:34918 Coccinelle.more_list <> mem_eq_mem thm
R34920:34927 Coccinelle.dickson Make eq_proof defax
R34909:34918 Coccinelle.more_list <> mem_eq_mem thm
R34920:34927 Coccinelle.dickson Make eq_proof defax
R34974:34987 Coccinelle.dickson Make mem_permut_mem defax
R35009:35018 Coccinelle.more_list <> mem_or_app thm
R35039:35052 Coccinelle.dickson Make mem_permut_mem defax
R34974:34987 Coccinelle.dickson Make mem_permut_mem defax
R34974:34987 Coccinelle.dickson Make mem_permut_mem defax
R35009:35018 Coccinelle.more_list <> mem_or_app thm
R35009:35018 Coccinelle.more_list <> mem_or_app thm
R35039:35052 Coccinelle.dickson Make mem_permut_mem defax
R35039:35052 Coccinelle.dickson Make mem_permut_mem defax
R35069:35077 Coccinelle.dickson Make mem_consn thm
R35069:35077 Coccinelle.dickson Make mem_consn thm
R35069:35077 Coccinelle.dickson Make mem_consn thm
R35111:35120 Coccinelle.more_list <> mem_or_app thm
R35111:35120 Coccinelle.more_list <> mem_or_app thm
R35111:35120 Coccinelle.more_list <> mem_or_app thm
R35222:35235 Coccinelle.dickson Make mem_permut_mem defax
R35222:35235 Coccinelle.dickson Make mem_permut_mem defax
R35222:35235 Coccinelle.dickson Make mem_permut_mem defax
R35295:35308 Coccinelle.dickson Make mem_permut_mem defax
R35313:35324 Coccinelle.dickson Make permut_consn thm
R35340:35348 Coccinelle.dickson Make consn_app thm
R35363:35372 Coccinelle.more_list <> mem_or_app thm
R35295:35308 Coccinelle.dickson Make mem_permut_mem defax
R35313:35324 Coccinelle.dickson Make permut_consn thm
R35295:35308 Coccinelle.dickson Make mem_permut_mem defax
R35313:35324 Coccinelle.dickson Make permut_consn thm
R35340:35348 Coccinelle.dickson Make consn_app thm
R35340:35348 Coccinelle.dickson Make consn_app thm
R35363:35372 Coccinelle.more_list <> mem_or_app thm
R35363:35372 Coccinelle.more_list <> mem_or_app thm
R35400:35413 Coccinelle.dickson Make mem_permut_mem defax
R35418:35431 Coccinelle.dickson Make permut_appendn thm
R35447:35457 Coccinelle.dickson Make appendn_app thm
R35472:35481 Coccinelle.more_list <> mem_or_app thm
R35400:35413 Coccinelle.dickson Make mem_permut_mem defax
R35418:35431 Coccinelle.dickson Make permut_appendn thm
R35400:35413 Coccinelle.dickson Make mem_permut_mem defax
R35418:35431 Coccinelle.dickson Make permut_appendn thm
R35447:35457 Coccinelle.dickson Make appendn_app thm
R35447:35457 Coccinelle.dickson Make appendn_app thm
R35472:35481 Coccinelle.more_list <> mem_or_app thm
R35472:35481 Coccinelle.more_list <> mem_or_app thm
R35600:35613 Coccinelle.dickson Make mem_permut_mem defax
R35618:35631 Coccinelle.dickson Make permut_appendn thm
R35647:35657 Coccinelle.dickson Make appendn_app thm
R35671:35680 Coccinelle.more_list <> mem_or_app thm
R35600:35613 Coccinelle.dickson Make mem_permut_mem defax
R35618:35631 Coccinelle.dickson Make permut_appendn thm
R35600:35613 Coccinelle.dickson Make mem_permut_mem defax
R35618:35631 Coccinelle.dickson Make permut_appendn thm
R35647:35657 Coccinelle.dickson Make appendn_app thm
R35647:35657 Coccinelle.dickson Make appendn_app thm
R35671:35680 Coccinelle.more_list <> mem_or_app thm
R35671:35680 Coccinelle.more_list <> mem_or_app thm
R35741:35754 Coccinelle.dickson Make mem_permut_mem defax
R35759:35770 Coccinelle.dickson Make permut_consn thm
R35786:35794 Coccinelle.dickson Make consn_app thm
R35809:35818 Coccinelle.more_list <> mem_or_app thm
R35741:35754 Coccinelle.dickson Make mem_permut_mem defax
R35759:35770 Coccinelle.dickson Make permut_consn thm
R35741:35754 Coccinelle.dickson Make mem_permut_mem defax
R35759:35770 Coccinelle.dickson Make permut_consn thm
R35786:35794 Coccinelle.dickson Make consn_app thm
R35786:35794 Coccinelle.dickson Make consn_app thm
R35809:35818 Coccinelle.more_list <> mem_or_app thm
R35809:35818 Coccinelle.more_list <> mem_or_app thm
R35846:35859 Coccinelle.dickson Make mem_permut_mem defax
R35864:35877 Coccinelle.dickson Make permut_appendn thm
R35893:35903 Coccinelle.dickson Make appendn_app thm
R35918:35927 Coccinelle.more_list <> mem_or_app thm
R35846:35859 Coccinelle.dickson Make mem_permut_mem defax
R35864:35877 Coccinelle.dickson Make permut_appendn thm
R35846:35859 Coccinelle.dickson Make mem_permut_mem defax
R35864:35877 Coccinelle.dickson Make permut_appendn thm
R35893:35903 Coccinelle.dickson Make appendn_app thm
R35893:35903 Coccinelle.dickson Make appendn_app thm
R35918:35927 Coccinelle.more_list <> mem_or_app thm
R35918:35927 Coccinelle.more_list <> mem_or_app thm
prf 35974:36020 Make context_trans_clos_multiset_extension_step_cons
R36050:36053 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36054:36054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36071:36078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36153:36181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36182:36191 Coccinelle.TransClosure <> trans_clos ind
R36224:36225 Coccinelle.dickson <> l2 var
R36221:36222 Coccinelle.dickson <> l1 var
R36194:36216 Coccinelle.dickson Make multiset_extension_step ind
R36218:36218 Coccinelle.dickson <> R var
R36095:36104 Coccinelle.TransClosure <> trans_clos ind
R36146:36149 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R36145:36145 Coccinelle.dickson <> a var
R36150:36151 Coccinelle.dickson <> l2 var
R36136:36139 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R36135:36135 Coccinelle.dickson <> a var
R36140:36141 Coccinelle.dickson <> l1 var
R36107:36129 Coccinelle.dickson Make multiset_extension_step ind
R36131:36131 Coccinelle.dickson <> R var
R36065:36065 Coq.Init.Logic <> :type_scope:'~'_x not
R36066:36066 Coccinelle.dickson <> R var
R36070:36070 Coccinelle.dickson <> a var
R36068:36068 Coccinelle.dickson <> a var
R36036:36045 Coq.Relations.Relation_Definitions <> transitive def
R36049:36049 Coccinelle.dickson <> R var
R36282:36297 Coccinelle.dickson Make multiset_closure thm
R36282:36297 Coccinelle.dickson Make multiset_closure thm
R36388:36398 Coccinelle.more_list <> mem_bool_ok thm
R36404:36413 Coccinelle.dickson Make eq_bool_ok defax
R36388:36398 Coccinelle.more_list <> mem_bool_ok thm
R36404:36413 Coccinelle.dickson Make eq_bool_ok defax
R36427:36434 Coccinelle.more_list <> mem_bool def
R36436:36446 Coccinelle.dickson DS1 eq_bool defax
R36427:36434 Coccinelle.more_list <> mem_bool def
R36436:36446 Coccinelle.dickson DS1 eq_bool defax
R36499:36511 Coccinelle.more_list <> mem_split_set thm
R36517:36526 Coccinelle.dickson Make eq_bool_ok defax
R36499:36511 Coccinelle.more_list <> mem_split_set thm
R36517:36526 Coccinelle.dickson Make eq_bool_ok defax
R36626:36632 Coq.Lists.List <> ass_app syndef
R36652:36669 Coccinelle.dickson Make permut_cons_inside defax
R36690:36696 Coq.Lists.List <> ass_app syndef
R36626:36632 Coq.Lists.List <> ass_app syndef
R36626:36632 Coq.Lists.List <> ass_app syndef
R36652:36669 Coccinelle.dickson Make permut_cons_inside defax
R36652:36669 Coccinelle.dickson Make permut_cons_inside defax
R36652:36669 Coccinelle.dickson Make permut_cons_inside defax
R36690:36696 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36713:36719 Coq.Lists.List <> ass_app syndef
R36739:36756 Coccinelle.dickson Make permut_cons_inside defax
R36777:36783 Coq.Lists.List <> ass_app syndef
R36713:36719 Coq.Lists.List <> ass_app syndef
R36713:36719 Coq.Lists.List <> ass_app syndef
R36739:36756 Coccinelle.dickson Make permut_cons_inside defax
R36739:36756 Coccinelle.dickson Make permut_cons_inside defax
R36739:36756 Coccinelle.dickson Make permut_cons_inside defax
R36777:36783 Coq.Lists.List <> ass_app syndef
R36777:36783 Coq.Lists.List <> ass_app syndef
R36777:36783 Coq.Lists.List <> ass_app syndef
R36777:36783 Coq.Lists.List <> ass_app syndef
R36799:36818 Coccinelle.dickson Make multiset_closure_aux thm
R36825:36828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36799:36818 Coccinelle.dickson Make multiset_closure_aux thm
R36825:36828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36930:36938 Coq.Init.Logic <> False_rec scheme
R36930:36938 Coq.Init.Logic <> False_rec scheme
R36998:37000 Coccinelle.more_list <> mem def
R37018:37021 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37010:37014 Coccinelle.dickson Make consn def
R37002:37005 Coccinelle.dickson Make eq_A defax
R36998:37000 Coccinelle.more_list <> mem def
R37018:37021 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37010:37014 Coccinelle.dickson Make consn def
R37002:37005 Coccinelle.dickson Make eq_A defax
R37039:37052 Coccinelle.dickson Make mem_permut_mem defax
R37039:37052 Coccinelle.dickson Make mem_permut_mem defax
R37039:37052 Coccinelle.dickson Make mem_permut_mem defax
R37083:37092 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37098:37105 Coccinelle.dickson Make eq_proof defax
R37083:37092 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37098:37105 Coccinelle.dickson Make eq_proof defax
R37120:37129 Coccinelle.more_list <> mem_or_app thm
R37120:37129 Coccinelle.more_list <> mem_or_app thm
R37120:37129 Coccinelle.more_list <> mem_or_app thm
R37219:37221 Coccinelle.more_list <> mem def
R37223:37226 Coccinelle.dickson Make eq_A defax
R37219:37221 Coccinelle.more_list <> mem def
R37223:37226 Coccinelle.dickson Make eq_A defax
R37275:37277 Coccinelle.more_list <> mem def
R37297:37300 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37287:37293 Coccinelle.dickson Make appendn def
R37279:37282 Coccinelle.dickson Make eq_A defax
R37275:37277 Coccinelle.more_list <> mem def
R37297:37300 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37287:37293 Coccinelle.dickson Make appendn def
R37279:37282 Coccinelle.dickson Make eq_A defax
R37318:37331 Coccinelle.dickson Make mem_permut_mem defax
R37318:37331 Coccinelle.dickson Make mem_permut_mem defax
R37318:37331 Coccinelle.dickson Make mem_permut_mem defax
R37362:37371 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37377:37384 Coccinelle.dickson Make eq_proof defax
R37362:37371 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37377:37384 Coccinelle.dickson Make eq_proof defax
R37399:37408 Coccinelle.more_list <> mem_or_app thm
R37399:37408 Coccinelle.more_list <> mem_or_app thm
R37399:37408 Coccinelle.more_list <> mem_or_app thm
R37498:37500 Coccinelle.more_list <> mem def
R37502:37505 Coccinelle.dickson Make eq_A defax
R37498:37500 Coccinelle.more_list <> mem def
R37502:37505 Coccinelle.dickson Make eq_A defax
prf 37535:37588 Make remove_context_trans_clos_multiset_extension_step_app1
R37618:37621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37622:37622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37639:37646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37721:37749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37750:37759 Coccinelle.TransClosure <> trans_clos ind
R37792:37793 Coccinelle.dickson <> l2 var
R37789:37790 Coccinelle.dickson <> l1 var
R37762:37784 Coccinelle.dickson Make multiset_extension_step ind
R37786:37786 Coccinelle.dickson <> R var
R37663:37672 Coccinelle.TransClosure <> trans_clos ind
R37714:37717 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37713:37713 Coccinelle.dickson <> l var
R37718:37719 Coccinelle.dickson <> l2 var
R37704:37707 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37703:37703 Coccinelle.dickson <> l var
R37708:37709 Coccinelle.dickson <> l1 var
R37675:37697 Coccinelle.dickson Make multiset_extension_step ind
R37699:37699 Coccinelle.dickson <> R var
R37633:37633 Coq.Init.Logic <> :type_scope:'~'_x not
R37634:37634 Coccinelle.dickson <> R var
R37638:37638 Coccinelle.dickson <> a var
R37636:37636 Coccinelle.dickson <> a var
R37604:37613 Coq.Relations.Relation_Definitions <> transitive def
R37617:37617 Coccinelle.dickson <> R var
R37937:37983 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
R37937:37983 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
prf 38014:38032 Make nil_is_the_smallest
R38052:38061 Coccinelle.TransClosure <> trans_clos ind
R38097:38100 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38096:38096 Coccinelle.dickson <> e var
R38101:38101 Coccinelle.dickson <> l var
R38091:38093 Coq.Init.Datatypes <> nil constr
R38064:38086 Coccinelle.dickson Make multiset_extension_step ind
R38088:38088 Coccinelle.dickson <> R var
R38193:38198 Coccinelle.TransClosure <> t_step constr
R38210:38217 Coccinelle.dickson Make rmv_case constr
R38229:38231 Coq.Init.Datatypes <> nil constr
R38225:38227 Coq.Init.Datatypes <> nil constr
R38193:38198 Coccinelle.TransClosure <> t_step constr
R38210:38217 Coccinelle.dickson Make rmv_case constr
R38229:38231 Coq.Init.Datatypes <> nil constr
R38225:38227 Coq.Init.Datatypes <> nil constr
R38309:38312 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38281:38299 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38309:38312 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38281:38299 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38332:38337 Coccinelle.TransClosure <> t_step constr
R38349:38356 Coccinelle.dickson Make rmv_case constr
R38374:38376 Coq.Init.Datatypes <> nil constr
R38367:38370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38332:38337 Coccinelle.TransClosure <> t_step constr
R38349:38356 Coccinelle.dickson Make rmv_case constr
R38374:38376 Coq.Init.Datatypes <> nil constr
R38367:38370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38421:38438 Coccinelle.dickson Make permut_cons_inside defax
R38473:38476 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38477:38479 Coq.Init.Datatypes <> nil constr
R38464:38467 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38421:38438 Coccinelle.dickson Make permut_cons_inside defax
R38473:38476 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38477:38479 Coq.Init.Datatypes <> nil constr
R38464:38467 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38421:38438 Coccinelle.dickson Make permut_cons_inside defax
R38473:38476 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38477:38479 Coq.Init.Datatypes <> nil constr
R38464:38467 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38421:38438 Coccinelle.dickson Make permut_cons_inside defax
R38473:38476 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38477:38479 Coq.Init.Datatypes <> nil constr
R38464:38467 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38499:38508 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38514:38521 Coccinelle.dickson Make eq_proof defax
R38499:38508 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38514:38521 Coccinelle.dickson Make eq_proof defax
sec 38539:38542 Make Mult
var 38555:38555 Make.Mult R
R38559:38566 Coq.Relations.Relation_Definitions <> relation def
R38568:38568 Coccinelle.dickson Make A defax
var 38580:38585 Make.Mult R_bool
R38590:38593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38595:38598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38599:38602 Coq.Init.Datatypes <> bool ind
R38594:38594 Coccinelle.dickson Make A defax
R38589:38589 Coccinelle.dickson Make A defax
var 38614:38622 Make.Mult R_bool_ok
R38654:38659 Coccinelle.dickson <> Make.Mult.R_bool var
R38664:38665 Coccinelle.dickson <> a2 var
R38661:38662 Coccinelle.dickson <> a1 var
R38677:38680 Coq.Init.Datatypes <> true constr
R38685:38685 Coccinelle.dickson <> Make.Mult.R var
R38690:38691 Coccinelle.dickson <> a2 var
R38687:38688 Coccinelle.dickson <> a1 var
R38698:38702 Coq.Init.Datatypes <> false constr
R38707:38708 Coq.Init.Logic <> :type_scope:'~'_x not
R38709:38709 Coccinelle.dickson <> Make.Mult.R var
R38714:38715 Coccinelle.dickson <> a2 var
R38711:38712 Coccinelle.dickson <> a1 var
def 38737:38740 Make mult
R38751:38754 Coq.Init.Datatypes <> list ind
R38756:38756 Coccinelle.dickson Make A defax
R38761:38764 Coccinelle.ordered_set <> comp ind
R38777:38788 Coccinelle.more_list <> remove_equiv def
R38801:38802 Coccinelle.dickson <> l2 var
R38798:38799 Coccinelle.dickson <> l1 var
R38790:38796 Coccinelle.dickson Make eq_bool defax
R38815:38815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38819:38820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38824:38824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38816:38818 Coq.Init.Datatypes <> nil constr
R38821:38823 Coq.Init.Datatypes <> nil constr
R38829:38838 Coccinelle.ordered_set <> Equivalent constr
R38846:38846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38849:38850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38853:38853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38866:38876 Coccinelle.more_list <> list_forall def
R38930:38931 Coccinelle.dickson <> l2 var
R38889:38899 Coccinelle.more_list <> list_exists def
R38926:38927 Coccinelle.dickson <> l1 var
R38912:38917 Coccinelle.dickson <> Make.Mult.R_bool var
R38922:38923 Coccinelle.dickson <> t1 var
R38919:38920 Coccinelle.dickson <> t2 var
R38948:38951 Coq.Init.Datatypes <> true constr
R38956:38967 Coccinelle.ordered_set <> Greater_than constr
R38972:38976 Coq.Init.Datatypes <> false constr
R38990:39000 Coccinelle.more_list <> list_forall def
R39054:39055 Coccinelle.dickson <> l1 var
R39013:39023 Coccinelle.more_list <> list_exists def
R39050:39051 Coccinelle.dickson <> l2 var
R39036:39041 Coccinelle.dickson <> Make.Mult.R_bool var
R39046:39047 Coccinelle.dickson <> t2 var
R39043:39044 Coccinelle.dickson <> t1 var
R39067:39070 Coq.Init.Datatypes <> true constr
R39075:39083 Coccinelle.ordered_set <> Less_than constr
R39090:39094 Coq.Init.Datatypes <> false constr
R39099:39110 Coccinelle.ordered_set <> Uncomparable constr
prf 39147:39158 Make greater_case
R39179:39179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39229:39235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39309:39315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39316:39322 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39325:39326 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39327:39333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39336:39337 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39364:39397 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39338:39343 Coccinelle.dickson Make permut syndef
R39357:39360 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R39349:39353 Coccinelle.dickson Make consn def
R39355:39356 Coccinelle.dickson <> ll var
R39361:39362 Coccinelle.dickson <> le var
R39345:39346 Coccinelle.dickson <> l1 var
R39421:39455 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39517:39517 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39398:39403 Coccinelle.dickson Make permut syndef
R39410:39416 Coccinelle.dickson Make appendn def
R39418:39419 Coccinelle.dickson <> ll var
R39406:39407 Coccinelle.dickson <> l2 var
R39481:39484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39508:39511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39512:39512 Coccinelle.dickson <> Make.Mult.R var
R39516:39516 Coccinelle.dickson <> a var
R39514:39514 Coccinelle.dickson <> b var
R39495:39497 Coccinelle.more_list <> mem def
R39506:39507 Coccinelle.dickson <> la var
R39504:39504 Coccinelle.dickson <> b var
R39499:39502 Coccinelle.dickson Make eq_A defax
R39469:39470 Coq.Lists.List <> In def
R39479:39480 Coccinelle.dickson <> ll var
R39472:39472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39474:39474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39477:39477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39473:39473 Coccinelle.dickson <> a var
R39475:39476 Coccinelle.dickson <> la var
R39302:39304 Coq.Init.Logic <> :type_scope:x_'='_x not
R39236:39246 Coccinelle.more_list <> list_forall def
R39300:39301 Coccinelle.dickson <> l2 var
R39259:39269 Coccinelle.more_list <> list_exists def
R39296:39297 Coccinelle.dickson <> l1 var
R39282:39287 Coccinelle.dickson <> Make.Mult.R_bool var
R39292:39293 Coccinelle.dickson <> t1 var
R39289:39290 Coccinelle.dickson <> t2 var
R39305:39308 Coq.Init.Datatypes <> true constr
R39203:39206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39220:39223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39224:39228 Coq.Init.Logic <> False ind
R39207:39209 Coccinelle.more_list <> mem def
R39218:39219 Coccinelle.dickson <> l2 var
R39216:39216 Coccinelle.dickson <> a var
R39211:39214 Coccinelle.dickson Make eq_A defax
R39190:39192 Coccinelle.more_list <> mem def
R39201:39202 Coccinelle.dickson <> l1 var
R39199:39199 Coccinelle.dickson <> a var
R39194:39197 Coccinelle.dickson Make eq_A defax
R39629:39631 Coq.Init.Datatypes <> nil constr
R39633:39633 Coccinelle.dickson Make A defax
R39647:39649 Coq.Init.Datatypes <> nil constr
R39653:39655 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39652:39652 Coccinelle.dickson Make A defax
R39656:39659 Coq.Init.Datatypes <> list ind
R39661:39661 Coccinelle.dickson Make A defax
R39629:39631 Coq.Init.Datatypes <> nil constr
R39633:39633 Coccinelle.dickson Make A defax
R39647:39649 Coq.Init.Datatypes <> nil constr
R39653:39655 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39652:39652 Coccinelle.dickson Make A defax
R39656:39659 Coq.Init.Datatypes <> list ind
R39661:39661 Coccinelle.dickson Make A defax
R39706:39709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39724:39726 Coq.Init.Datatypes <> nil constr
R39730:39732 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39729:39729 Coccinelle.dickson Make A defax
R39733:39736 Coq.Init.Datatypes <> list ind
R39738:39738 Coccinelle.dickson Make A defax
R39706:39709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39724:39726 Coq.Init.Datatypes <> nil constr
R39730:39732 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39729:39729 Coccinelle.dickson Make A defax
R39733:39736 Coq.Init.Datatypes <> list ind
R39738:39738 Coccinelle.dickson Make A defax
R39793:39812 Coccinelle.more_list <> list_exists_is_sound thm
R39824:39824 Coccinelle.dickson Make A defax
R39829:39834 Coccinelle.dickson <> Make.Mult.R_bool var
R39839:39840 Coccinelle.dickson <> t1 var
R39854:39864 Coccinelle.more_list <> list_exists def
R39876:39876 Coccinelle.dickson Make A defax
R39881:39886 Coccinelle.dickson <> Make.Mult.R_bool var
R39891:39892 Coccinelle.dickson <> t1 var
R39793:39812 Coccinelle.more_list <> list_exists_is_sound thm
R39824:39824 Coccinelle.dickson Make A defax
R39829:39834 Coccinelle.dickson <> Make.Mult.R_bool var
R39839:39840 Coccinelle.dickson <> t1 var
R39854:39864 Coccinelle.more_list <> list_exists def
R39876:39876 Coccinelle.dickson Make A defax
R39881:39886 Coccinelle.dickson <> Make.Mult.R_bool var
R39891:39892 Coccinelle.dickson <> t1 var
R39921:39925 Coq.Init.Logic <> proj1 thm
R39930:39939 Coq.Init.Logic <> refl_equal syndef
R39921:39925 Coq.Init.Logic <> proj1 thm
R39930:39939 Coq.Init.Logic <> refl_equal syndef
R40007:40007 Coccinelle.dickson <> Make.Mult.R var
R40007:40007 Coccinelle.dickson <> Make.Mult.R var
R40029:40037 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40029:40037 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40097:40097 Coccinelle.dickson Make A defax
R40113:40116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40130:40133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40134:40138 Coq.Init.Logic <> False ind
R40117:40119 Coccinelle.more_list <> mem def
R40126:40126 Coccinelle.dickson <> x var
R40121:40124 Coccinelle.dickson Make eq_A defax
R40100:40102 Coccinelle.more_list <> mem def
R40109:40109 Coccinelle.dickson <> x var
R40104:40107 Coccinelle.dickson Make eq_A defax
R40097:40097 Coccinelle.dickson Make A defax
R40113:40116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40130:40133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40134:40138 Coq.Init.Logic <> False ind
R40117:40119 Coccinelle.more_list <> mem def
R40126:40126 Coccinelle.dickson <> x var
R40121:40124 Coccinelle.dickson Make eq_A defax
R40100:40102 Coccinelle.more_list <> mem def
R40109:40109 Coccinelle.dickson <> x var
R40104:40107 Coccinelle.dickson Make eq_A defax
R40259:40269 Coccinelle.more_list <> list_forall def
R40281:40281 Coccinelle.dickson Make A defax
R40286:40296 Coccinelle.more_list <> list_exists def
R40308:40308 Coccinelle.dickson Make A defax
R40313:40318 Coccinelle.dickson <> Make.Mult.R_bool var
R40323:40324 Coccinelle.dickson <> t1 var
R40320:40321 Coccinelle.dickson <> t2 var
R40259:40269 Coccinelle.more_list <> list_forall def
R40281:40281 Coccinelle.dickson Make A defax
R40286:40296 Coccinelle.more_list <> list_exists def
R40308:40308 Coccinelle.dickson Make A defax
R40313:40318 Coccinelle.dickson <> Make.Mult.R_bool var
R40323:40324 Coccinelle.dickson <> t1 var
R40320:40321 Coccinelle.dickson <> t2 var
R40523:40525 Coccinelle.more_list <> mem def
R40544:40547 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40536:40540 Coccinelle.dickson Make consn def
R40527:40530 Coccinelle.dickson Make eq_A defax
R40523:40525 Coccinelle.more_list <> mem def
R40544:40547 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40536:40540 Coccinelle.dickson Make consn def
R40527:40530 Coccinelle.dickson Make eq_A defax
R40566:40579 Coccinelle.dickson Make mem_permut_mem defax
R40595:40605 Coccinelle.more_list <> in_impl_mem thm
R40566:40579 Coccinelle.dickson Make mem_permut_mem defax
R40566:40579 Coccinelle.dickson Make mem_permut_mem defax
R40595:40605 Coccinelle.more_list <> in_impl_mem thm
R40631:40640 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40646:40653 Coccinelle.dickson Make eq_proof defax
R40631:40640 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40646:40653 Coccinelle.dickson Make eq_proof defax
R40668:40677 Coccinelle.more_list <> mem_or_app thm
R40668:40677 Coccinelle.more_list <> mem_or_app thm
R40668:40677 Coccinelle.more_list <> mem_or_app thm
R40776:40780 Coq.Init.Logic <> proj1 thm
R40783:40791 Coccinelle.dickson Make mem_consn thm
R40776:40780 Coq.Init.Logic <> proj1 thm
R40783:40791 Coccinelle.dickson Make mem_consn thm
R40849:40856 Coq.Lists.List <> In_split syndef
R40849:40856 Coq.Lists.List <> In_split syndef
R40929:40932 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40947:40950 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40933:40933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40936:40937 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40946:40946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40940:40943 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40929:40932 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40947:40950 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40933:40933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40936:40937 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40946:40946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40940:40943 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40973:40981 Coccinelle.dickson Make consn_app thm
R40999:41007 Coccinelle.dickson Make consn_app thm
R40973:40981 Coccinelle.dickson Make consn_app thm
R40973:40981 Coccinelle.dickson Make consn_app thm
R40999:41007 Coccinelle.dickson Make consn_app thm
R40999:41007 Coccinelle.dickson Make consn_app thm
R41053:41063 Coccinelle.dickson Make appendn_app thm
R41084:41101 Coccinelle.dickson Make permut_cons_inside defax
R41112:41122 Coccinelle.dickson Make appendn_app thm
R41053:41063 Coccinelle.dickson Make appendn_app thm
R41053:41063 Coccinelle.dickson Make appendn_app thm
R41084:41101 Coccinelle.dickson Make permut_cons_inside defax
R41084:41101 Coccinelle.dickson Make permut_cons_inside defax
R41084:41101 Coccinelle.dickson Make permut_cons_inside defax
R41112:41122 Coccinelle.dickson Make appendn_app thm
R41112:41122 Coccinelle.dickson Make appendn_app thm
R41112:41122 Coccinelle.dickson Make appendn_app thm
R41112:41122 Coccinelle.dickson Make appendn_app thm
R41160:41169 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41175:41182 Coccinelle.dickson Make eq_proof defax
R41160:41169 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41175:41182 Coccinelle.dickson Make eq_proof defax
R41225:41233 Coq.Lists.List <> in_app_or thm
R41225:41233 Coq.Lists.List <> in_app_or thm
R41348:41356 Coq.Lists.List <> in_or_app thm
R41348:41356 Coq.Lists.List <> in_or_app thm
R41574:41582 Coq.Lists.List <> in_or_app thm
R41574:41582 Coq.Lists.List <> in_or_app thm
R41619:41631 Coccinelle.more_list <> mem_split_set thm
R41637:41646 Coccinelle.dickson Make eq_bool_ok defax
R41619:41631 Coccinelle.more_list <> mem_split_set thm
R41637:41646 Coccinelle.dickson Make eq_bool_ok defax
R41763:41766 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41797:41800 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41782:41782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41785:41786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41796:41796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41789:41792 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41793:41795 Coq.Init.Datatypes <> nil constr
R41763:41766 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41797:41800 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41782:41782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41785:41786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41796:41796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41789:41792 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41793:41795 Coq.Init.Datatypes <> nil constr
R41853:41856 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41845:41849 Coccinelle.dickson Make consn def
R41860:41863 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41867:41870 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41826:41837 Coccinelle.dickson Make permut_trans defax
R41853:41856 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41845:41849 Coccinelle.dickson Make consn def
R41860:41863 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41867:41870 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41826:41837 Coccinelle.dickson Make permut_trans defax
R41898:41904 Coq.Lists.List <> ass_app syndef
R41913:41922 Coccinelle.dickson Make permut_sym defax
R41936:41953 Coccinelle.dickson Make permut_cons_inside defax
R41898:41904 Coq.Lists.List <> ass_app syndef
R41898:41904 Coq.Lists.List <> ass_app syndef
R41913:41922 Coccinelle.dickson Make permut_sym defax
R41936:41953 Coccinelle.dickson Make permut_cons_inside defax
R41936:41953 Coccinelle.dickson Make permut_cons_inside defax
R41936:41953 Coccinelle.dickson Make permut_cons_inside defax
R41973:41979 Coq.Lists.List <> ass_app syndef
R41973:41979 Coq.Lists.List <> ass_app syndef
R41973:41979 Coq.Lists.List <> ass_app syndef
R42013:42023 Coccinelle.dickson Make permut_cons defax
R42013:42023 Coccinelle.dickson Make permut_cons defax
R42013:42023 Coccinelle.dickson Make permut_cons defax
R42013:42023 Coccinelle.dickson Make permut_cons defax
R42042:42051 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42057:42064 Coccinelle.dickson Make eq_proof defax
R42042:42051 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42057:42064 Coccinelle.dickson Make eq_proof defax
R42330:42340 Coccinelle.more_list <> list_forall def
R42358:42358 Coccinelle.dickson Make A defax
R42370:42377 Coq.Bool.Bool <> ifb def
R42409:42419 Coccinelle.more_list <> list_exists def
R42431:42431 Coccinelle.dickson Make A defax
R42436:42441 Coccinelle.dickson <> Make.Mult.R_bool var
R42446:42447 Coccinelle.dickson <> t2 var
R42443:42444 Coccinelle.dickson <> t1 var
R42394:42397 Coq.Init.Datatypes <> true constr
R42380:42385 Coccinelle.dickson <> Make.Mult.R_bool var
R42387:42388 Coccinelle.dickson <> t1 var
R42330:42340 Coccinelle.more_list <> list_forall def
R42358:42358 Coccinelle.dickson Make A defax
R42370:42377 Coq.Bool.Bool <> ifb def
R42409:42419 Coccinelle.more_list <> list_exists def
R42431:42431 Coccinelle.dickson Make A defax
R42436:42441 Coccinelle.dickson <> Make.Mult.R_bool var
R42446:42447 Coccinelle.dickson <> t2 var
R42443:42444 Coccinelle.dickson <> t1 var
R42394:42397 Coq.Init.Datatypes <> true constr
R42380:42385 Coccinelle.dickson <> Make.Mult.R_bool var
R42387:42388 Coccinelle.dickson <> t1 var
R42515:42525 Coccinelle.more_list <> list_forall def
R42546:42546 Coccinelle.dickson Make A defax
R42561:42568 Coq.Bool.Bool <> ifb def
R42603:42613 Coccinelle.more_list <> list_exists def
R42625:42625 Coccinelle.dickson Make A defax
R42630:42635 Coccinelle.dickson <> Make.Mult.R_bool var
R42640:42641 Coccinelle.dickson <> t2 var
R42637:42638 Coccinelle.dickson <> t1 var
R42585:42588 Coq.Init.Datatypes <> true constr
R42571:42576 Coccinelle.dickson <> Make.Mult.R_bool var
R42578:42579 Coccinelle.dickson <> t1 var
R42515:42525 Coccinelle.more_list <> list_forall def
R42546:42546 Coccinelle.dickson Make A defax
R42561:42568 Coq.Bool.Bool <> ifb def
R42603:42613 Coccinelle.more_list <> list_exists def
R42625:42625 Coccinelle.dickson Make A defax
R42630:42635 Coccinelle.dickson <> Make.Mult.R_bool var
R42640:42641 Coccinelle.dickson <> t2 var
R42637:42638 Coccinelle.dickson <> t1 var
R42585:42588 Coq.Init.Datatypes <> true constr
R42571:42576 Coccinelle.dickson <> Make.Mult.R_bool var
R42578:42579 Coccinelle.dickson <> t1 var
prf 42697:42709 Make mult_is_sound
R42736:42739 Coccinelle.dickson Make mult def
R42744:42745 Coccinelle.dickson <> l2 var
R42741:42742 Coccinelle.dickson <> l1 var
R42756:42765 Coccinelle.ordered_set <> Equivalent constr
R42770:42775 Coccinelle.dickson Make permut syndef
R42780:42781 Coccinelle.dickson <> l2 var
R42777:42778 Coccinelle.dickson <> l1 var
R42787:42795 Coccinelle.ordered_set <> Less_than constr
R42800:42809 Coccinelle.TransClosure <> trans_clos ind
R42842:42843 Coccinelle.dickson <> l2 var
R42839:42840 Coccinelle.dickson <> l1 var
R42812:42834 Coccinelle.dickson Make multiset_extension_step ind
R42836:42836 Coccinelle.dickson <> Make.Mult.R var
R42849:42860 Coccinelle.ordered_set <> Greater_than constr
R42865:42874 Coccinelle.TransClosure <> trans_clos ind
R42907:42908 Coccinelle.dickson <> l1 var
R42904:42905 Coccinelle.dickson <> l2 var
R42877:42899 Coccinelle.dickson Make multiset_extension_step ind
R42901:42901 Coccinelle.dickson <> Make.Mult.R var
R42919:42922 Coq.Init.Logic <> True ind
R42959:42962 Coccinelle.dickson Make mult def
R42978:42998 Coccinelle.dickson Make remove_equiv_is_sound defax
R42978:42998 Coccinelle.dickson Make remove_equiv_is_sound defax
R43015:43015 Coccinelle.dickson Make A defax
R43030:43041 Coccinelle.more_list <> remove_equiv def
R43049:43055 Coccinelle.dickson Make eq_bool defax
R43043:43047 Coccinelle.dickson DS1 A defax
R43030:43041 Coccinelle.more_list <> remove_equiv def
R43049:43055 Coccinelle.dickson Make eq_bool defax
R43043:43047 Coccinelle.dickson DS1 A defax
R43226:43229 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43230:43232 Coq.Init.Datatypes <> nil constr
R43206:43217 Coccinelle.dickson Make permut_trans defax
R43226:43229 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43230:43232 Coq.Init.Datatypes <> nil constr
R43206:43217 Coccinelle.dickson Make permut_trans defax
R43254:43263 Coccinelle.dickson Make permut_sym defax
R43254:43263 Coccinelle.dickson Make permut_sym defax
R43296:43306 Coq.Lists.List <> app_nil_end thm
R43322:43342 Coccinelle.dickson Make multiset_closure_aux2 thm
R43414:43416 Coq.Init.Datatypes <> nil constr
R43399:43402 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43344:43344 Coccinelle.dickson <> Make.Mult.R var
R43296:43306 Coq.Lists.List <> app_nil_end thm
R43296:43306 Coq.Lists.List <> app_nil_end thm
R43322:43342 Coccinelle.dickson Make multiset_closure_aux2 thm
R43414:43416 Coq.Init.Datatypes <> nil constr
R43399:43402 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43344:43344 Coccinelle.dickson <> Make.Mult.R var
R43462:43465 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43469:43472 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43442:43453 Coccinelle.dickson Make permut_trans defax
R43462:43465 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43469:43472 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43442:43453 Coccinelle.dickson Make permut_trans defax
R43499:43511 Coq.Lists.List <> app_comm_cons thm
R43520:43538 Coccinelle.dickson Make list_permut_app_app defax
R43499:43511 Coq.Lists.List <> app_comm_cons thm
R43499:43511 Coq.Lists.List <> app_comm_cons thm
R43520:43538 Coccinelle.dickson Make list_permut_app_app defax
R43603:43613 Coq.Lists.List <> app_nil_end thm
R43629:43649 Coccinelle.dickson Make multiset_closure_aux2 thm
R43721:43723 Coq.Init.Datatypes <> nil constr
R43706:43709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43651:43651 Coccinelle.dickson <> Make.Mult.R var
R43603:43613 Coq.Lists.List <> app_nil_end thm
R43603:43613 Coq.Lists.List <> app_nil_end thm
R43629:43649 Coccinelle.dickson Make multiset_closure_aux2 thm
R43721:43723 Coq.Init.Datatypes <> nil constr
R43706:43709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43651:43651 Coccinelle.dickson <> Make.Mult.R var
R43769:43772 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43776:43779 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43749:43760 Coccinelle.dickson Make permut_trans defax
R43769:43772 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43776:43779 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43749:43760 Coccinelle.dickson Make permut_trans defax
R43806:43818 Coq.Lists.List <> app_comm_cons thm
R43827:43845 Coccinelle.dickson Make list_permut_app_app defax
R43806:43818 Coq.Lists.List <> app_comm_cons thm
R43806:43818 Coq.Lists.List <> app_comm_cons thm
R43827:43845 Coccinelle.dickson Make list_permut_app_app defax
R43904:43915 Coccinelle.dickson Make greater_case thm
R43934:43937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43921:43924 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43954:43954 Coccinelle.dickson Make A defax
R43904:43915 Coccinelle.dickson Make greater_case thm
R43934:43937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43921:43924 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43968:43978 Coccinelle.more_list <> list_forall def
R44062:44065 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43990:43994 Coccinelle.dickson DS1 A defax
R43999:44009 Coccinelle.more_list <> list_exists def
R44048:44051 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44021:44025 Coccinelle.dickson DS1 A defax
R44030:44035 Coccinelle.dickson <> Make.Mult.R_bool var
R44040:44041 Coccinelle.dickson <> t1 var
R44037:44038 Coccinelle.dickson <> t2 var
R43968:43978 Coccinelle.more_list <> list_forall def
R44062:44065 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43990:43994 Coccinelle.dickson DS1 A defax
R43999:44009 Coccinelle.more_list <> list_exists def
R44048:44051 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44021:44025 Coccinelle.dickson DS1 A defax
R44030:44035 Coccinelle.dickson <> Make.Mult.R_bool var
R44040:44041 Coccinelle.dickson <> t1 var
R44037:44038 Coccinelle.dickson <> t2 var
R44097:44106 Coq.Init.Logic <> refl_equal syndef
R44097:44106 Coq.Init.Logic <> refl_equal syndef
R44170:44190 Coccinelle.dickson Make multiset_closure_aux2 thm
R44192:44192 Coccinelle.dickson <> Make.Mult.R var
R44170:44190 Coccinelle.dickson Make multiset_closure_aux2 thm
R44192:44192 Coccinelle.dickson <> Make.Mult.R var
R44279:44282 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44286:44289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44259:44270 Coccinelle.dickson Make permut_trans defax
R44279:44282 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44286:44289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44259:44270 Coccinelle.dickson Make permut_trans defax
R44334:44337 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44338:44344 Coccinelle.dickson Make appendn def
R44314:44325 Coccinelle.dickson Make permut_trans defax
R44334:44337 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44338:44344 Coccinelle.dickson Make appendn def
R44314:44325 Coccinelle.dickson Make permut_trans defax
R44362:44372 Coccinelle.dickson Make permut_app1 defax
R44362:44372 Coccinelle.dickson Make permut_app1 defax
R44362:44372 Coccinelle.dickson Make permut_app1 defax
R44393:44411 Coccinelle.dickson Make list_permut_app_app defax
R44393:44411 Coccinelle.dickson Make list_permut_app_app defax
R44440:44443 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44447:44450 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44420:44431 Coccinelle.dickson Make permut_trans defax
R44440:44443 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44447:44450 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44420:44431 Coccinelle.dickson Make permut_trans defax
R44495:44498 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44507:44510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44499:44503 Coccinelle.dickson Make consn def
R44475:44486 Coccinelle.dickson Make permut_trans defax
R44495:44498 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44507:44510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44499:44503 Coccinelle.dickson Make consn def
R44475:44486 Coccinelle.dickson Make permut_trans defax
R44527:44537 Coccinelle.dickson Make permut_app1 defax
R44527:44537 Coccinelle.dickson Make permut_app1 defax
R44527:44537 Coccinelle.dickson Make permut_app1 defax
R44578:44581 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44584:44587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44588:44592 Coccinelle.dickson Make consn def
R44558:44569 Coccinelle.dickson Make permut_trans defax
R44578:44581 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44584:44587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44588:44592 Coccinelle.dickson Make consn def
R44558:44569 Coccinelle.dickson Make permut_trans defax
R44610:44620 Coccinelle.dickson Make permut_app1 defax
R44629:44647 Coccinelle.dickson Make list_permut_app_app defax
R44610:44620 Coccinelle.dickson Make permut_app1 defax
R44610:44620 Coccinelle.dickson Make permut_app1 defax
R44629:44647 Coccinelle.dickson Make list_permut_app_app defax
R44659:44665 Coq.Lists.List <> ass_app syndef
R44678:44696 Coccinelle.dickson Make list_permut_app_app defax
R44659:44665 Coq.Lists.List <> ass_app syndef
R44659:44665 Coq.Lists.List <> ass_app syndef
R44678:44696 Coccinelle.dickson Make list_permut_app_app defax
R44768:44780 Coccinelle.list_permut <> permut_length thm
R44825:44827 Coq.Init.Logic <> :type_scope:x_'='_x not
R44811:44811 Coq.Init.Datatypes <> S constr
R44814:44819 Coq.Init.Datatypes <> length def
R44768:44780 Coccinelle.list_permut <> permut_length thm
R44825:44827 Coq.Init.Logic <> :type_scope:x_'='_x not
R44811:44811 Coq.Init.Datatypes <> S constr
R44814:44819 Coq.Init.Datatypes <> length def
R44920:44924 Coccinelle.dickson DS1 A defax
R44950:44953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44977:44980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44981:44985 Coq.Init.Logic <> False ind
R44954:44956 Coccinelle.more_list <> mem def
R44969:44972 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44963:44963 Coccinelle.dickson <> x var
R44958:44961 Coccinelle.dickson Make eq_A defax
R44927:44929 Coccinelle.more_list <> mem def
R44942:44945 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44936:44936 Coccinelle.dickson <> x var
R44931:44934 Coccinelle.dickson Make eq_A defax
R44920:44924 Coccinelle.dickson DS1 A defax
R44950:44953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44977:44980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44981:44985 Coq.Init.Logic <> False ind
R44954:44956 Coccinelle.more_list <> mem def
R44969:44972 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44963:44963 Coccinelle.dickson <> x var
R44958:44961 Coccinelle.dickson Make eq_A defax
R44927:44929 Coccinelle.more_list <> mem def
R44942:44945 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44936:44936 Coccinelle.dickson <> x var
R44931:44934 Coccinelle.dickson Make eq_A defax
R45046:45057 Coccinelle.dickson Make greater_case thm
R45076:45079 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45063:45066 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45097:45097 Coccinelle.dickson Make A defax
R45111:45121 Coccinelle.more_list <> list_forall def
R45205:45208 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45133:45137 Coccinelle.dickson DS1 A defax
R45142:45152 Coccinelle.more_list <> list_exists def
R45191:45194 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45164:45168 Coccinelle.dickson DS1 A defax
R45173:45178 Coccinelle.dickson <> Make.Mult.R_bool var
R45183:45184 Coccinelle.dickson <> t2 var
R45180:45181 Coccinelle.dickson <> t1 var
R45046:45057 Coccinelle.dickson Make greater_case thm
R45076:45079 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45063:45066 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45111:45121 Coccinelle.more_list <> list_forall def
R45205:45208 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45133:45137 Coccinelle.dickson DS1 A defax
R45142:45152 Coccinelle.more_list <> list_exists def
R45191:45194 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45164:45168 Coccinelle.dickson DS1 A defax
R45173:45178 Coccinelle.dickson <> Make.Mult.R_bool var
R45183:45184 Coccinelle.dickson <> t2 var
R45180:45181 Coccinelle.dickson <> t1 var
R45240:45249 Coq.Init.Logic <> refl_equal syndef
R45240:45249 Coq.Init.Logic <> refl_equal syndef
R45313:45333 Coccinelle.dickson Make multiset_closure_aux2 thm
R45335:45335 Coccinelle.dickson <> Make.Mult.R var
R45313:45333 Coccinelle.dickson Make multiset_closure_aux2 thm
R45335:45335 Coccinelle.dickson <> Make.Mult.R var
R45422:45425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45429:45432 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45402:45413 Coccinelle.dickson Make permut_trans defax
R45422:45425 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45429:45432 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45402:45413 Coccinelle.dickson Make permut_trans defax
R45477:45480 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45481:45487 Coccinelle.dickson Make appendn def
R45457:45468 Coccinelle.dickson Make permut_trans defax
R45477:45480 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45481:45487 Coccinelle.dickson Make appendn def
R45457:45468 Coccinelle.dickson Make permut_trans defax
R45505:45515 Coccinelle.dickson Make permut_app1 defax
R45505:45515 Coccinelle.dickson Make permut_app1 defax
R45505:45515 Coccinelle.dickson Make permut_app1 defax
R45536:45554 Coccinelle.dickson Make list_permut_app_app defax
R45536:45554 Coccinelle.dickson Make list_permut_app_app defax
R45583:45586 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45590:45593 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45563:45574 Coccinelle.dickson Make permut_trans defax
R45583:45586 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45590:45593 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45563:45574 Coccinelle.dickson Make permut_trans defax
R45638:45641 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45650:45653 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45642:45646 Coccinelle.dickson Make consn def
R45618:45629 Coccinelle.dickson Make permut_trans defax
R45638:45641 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45650:45653 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45642:45646 Coccinelle.dickson Make consn def
R45618:45629 Coccinelle.dickson Make permut_trans defax
R45670:45680 Coccinelle.dickson Make permut_app1 defax
R45670:45680 Coccinelle.dickson Make permut_app1 defax
R45670:45680 Coccinelle.dickson Make permut_app1 defax
R45721:45724 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45727:45730 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45731:45735 Coccinelle.dickson Make consn def
R45701:45712 Coccinelle.dickson Make permut_trans defax
R45721:45724 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45727:45730 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45731:45735 Coccinelle.dickson Make consn def
R45701:45712 Coccinelle.dickson Make permut_trans defax
R45753:45763 Coccinelle.dickson Make permut_app1 defax
R45772:45790 Coccinelle.dickson Make list_permut_app_app defax
R45753:45763 Coccinelle.dickson Make permut_app1 defax
R45753:45763 Coccinelle.dickson Make permut_app1 defax
R45772:45790 Coccinelle.dickson Make list_permut_app_app defax
R45802:45808 Coq.Lists.List <> ass_app syndef
R45821:45839 Coccinelle.dickson Make list_permut_app_app defax
R45802:45808 Coq.Lists.List <> ass_app syndef
R45802:45808 Coq.Lists.List <> ass_app syndef
R45821:45839 Coccinelle.dickson Make list_permut_app_app defax
R45911:45923 Coccinelle.list_permut <> permut_length thm
R45968:45970 Coq.Init.Logic <> :type_scope:x_'='_x not
R45954:45954 Coq.Init.Datatypes <> S constr
R45957:45962 Coq.Init.Datatypes <> length def
R45911:45923 Coccinelle.list_permut <> permut_length thm
R45968:45970 Coq.Init.Logic <> :type_scope:x_'='_x not
R45954:45954 Coq.Init.Datatypes <> S constr
R45957:45962 Coq.Init.Datatypes <> length def
prf 46064:46085 Make mult_is_complete_equiv
R46116:46119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46130:46132 Coq.Init.Logic <> :type_scope:x_'='_x not
R46120:46123 Coccinelle.dickson Make mult def
R46128:46129 Coccinelle.dickson <> l2 var
R46125:46126 Coccinelle.dickson <> l1 var
R46133:46142 Coccinelle.ordered_set <> Equivalent constr
R46104:46109 Coccinelle.dickson Make permut syndef
R46114:46115 Coccinelle.dickson <> l2 var
R46111:46112 Coccinelle.dickson <> l1 var
R46182:46187 Coccinelle.dickson Make permut syndef
R46195:46198 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46199:46201 Coq.Init.Datatypes <> nil constr
R46182:46187 Coccinelle.dickson Make permut syndef
R46195:46198 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46199:46201 Coq.Init.Datatypes <> nil constr
R46217:46227 Coq.Lists.List <> app_nil_end thm
R46236:46246 Coccinelle.dickson Make permut_refl defax
R46217:46227 Coq.Lists.List <> app_nil_end thm
R46217:46227 Coq.Lists.List <> app_nil_end thm
R46236:46246 Coccinelle.dickson Make permut_refl defax
R46262:46267 Coccinelle.dickson Make permut syndef
R46275:46278 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46279:46281 Coq.Init.Datatypes <> nil constr
R46262:46267 Coccinelle.dickson Make permut syndef
R46275:46278 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46279:46281 Coq.Init.Datatypes <> nil constr
R46297:46307 Coq.Lists.List <> app_nil_end thm
R46316:46325 Coccinelle.dickson Make permut_sym defax
R46297:46307 Coq.Lists.List <> app_nil_end thm
R46297:46307 Coq.Lists.List <> app_nil_end thm
R46316:46325 Coccinelle.dickson Make permut_sym defax
R46363:46363 Coccinelle.dickson Make A defax
R46380:46383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46398:46401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46402:46406 Coq.Init.Logic <> False ind
R46384:46386 Coccinelle.more_list <> mem def
R46395:46397 Coq.Init.Datatypes <> nil constr
R46393:46393 Coccinelle.dickson <> x var
R46388:46391 Coccinelle.dickson Make eq_A defax
R46366:46368 Coccinelle.more_list <> mem def
R46377:46379 Coq.Init.Datatypes <> nil constr
R46375:46375 Coccinelle.dickson <> x var
R46370:46373 Coccinelle.dickson Make eq_A defax
R46363:46363 Coccinelle.dickson Make A defax
R46380:46383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46398:46401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46402:46406 Coq.Init.Logic <> False ind
R46384:46386 Coccinelle.more_list <> mem def
R46395:46397 Coq.Init.Datatypes <> nil constr
R46393:46393 Coccinelle.dickson <> x var
R46388:46391 Coccinelle.dickson Make eq_A defax
R46366:46368 Coccinelle.more_list <> mem def
R46377:46379 Coq.Init.Datatypes <> nil constr
R46375:46375 Coccinelle.dickson <> x var
R46370:46373 Coccinelle.dickson Make eq_A defax
R46446:46469 Coccinelle.dickson Make remove_equiv_is_complete defax
R46484:46486 Coq.Init.Datatypes <> nil constr
R46480:46482 Coq.Init.Datatypes <> nil constr
R46446:46469 Coccinelle.dickson Make remove_equiv_is_complete defax
R46484:46486 Coq.Init.Datatypes <> nil constr
R46480:46482 Coq.Init.Datatypes <> nil constr
R46505:46508 Coccinelle.dickson Make mult def
R46518:46518 Coccinelle.dickson Make A defax
R46533:46544 Coccinelle.more_list <> remove_equiv def
R46552:46558 Coccinelle.dickson Make eq_bool defax
R46546:46550 Coccinelle.dickson DS1 A defax
R46533:46544 Coccinelle.more_list <> remove_equiv def
R46552:46558 Coccinelle.dickson Make eq_bool defax
R46546:46550 Coccinelle.dickson DS1 A defax
R46612:46621 Coccinelle.list_permut <> permut_nil thm
R46612:46621 Coccinelle.list_permut <> permut_nil thm
R46612:46621 Coccinelle.list_permut <> permut_nil thm
R46650:46659 Coccinelle.list_permut <> permut_nil thm
R46650:46659 Coccinelle.list_permut <> permut_nil thm
R46650:46659 Coccinelle.list_permut <> permut_nil thm
R46672:46681 Coq.Init.Logic <> refl_equal syndef
R46672:46681 Coq.Init.Logic <> refl_equal syndef
prf 46700:46727 Make mult_is_complete_greater_aux
R46746:46749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46750:46750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46768:46773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46790:46790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46840:46847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46906:46911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46912:46912 Coq.Init.Logic <> :type_scope:x_'='_x not
R46979:46982 Coq.Init.Logic <> :type_scope:x_'='_x not
R46913:46923 Coccinelle.more_list <> list_forall def
R46977:46978 Coccinelle.dickson <> l2 var
R46936:46946 Coccinelle.more_list <> list_exists def
R46973:46974 Coccinelle.dickson <> l1 var
R46959:46964 Coccinelle.dickson <> Make.Mult.R_bool var
R46969:46970 Coccinelle.dickson <> t1 var
R46966:46967 Coccinelle.dickson <> t2 var
R46983:46986 Coq.Init.Datatypes <> true constr
R46848:46857 Coccinelle.TransClosure <> trans_clos ind
R46899:46902 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46898:46898 Coccinelle.dickson <> l var
R46903:46904 Coccinelle.dickson <> l1 var
R46889:46892 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46888:46888 Coccinelle.dickson <> l var
R46893:46894 Coccinelle.dickson <> l2 var
R46860:46882 Coccinelle.dickson Make multiset_extension_step ind
R46884:46884 Coccinelle.dickson <> Make.Mult.R var
R46814:46817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46831:46834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46835:46839 Coq.Init.Logic <> False ind
R46818:46820 Coccinelle.more_list <> mem def
R46829:46830 Coccinelle.dickson <> l2 var
R46827:46827 Coccinelle.dickson <> a var
R46822:46825 Coccinelle.dickson Make eq_A defax
R46801:46803 Coccinelle.more_list <> mem def
R46812:46813 Coccinelle.dickson <> l1 var
R46810:46810 Coccinelle.dickson <> a var
R46805:46808 Coccinelle.dickson Make eq_A defax
R46761:46762 Coq.Init.Logic <> :type_scope:'~'_x not
R46763:46763 Coccinelle.dickson <> Make.Mult.R var
R46767:46767 Coccinelle.dickson <> a var
R46765:46765 Coccinelle.dickson <> a var
R46732:46741 Coq.Relations.Relation_Definitions <> transitive def
R46745:46745 Coccinelle.dickson <> Make.Mult.R var
R47071:47124 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47071:47124 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47196:47211 Coccinelle.dickson Make multiset_closure thm
R47196:47211 Coccinelle.dickson Make multiset_closure thm
R47398:47400 Coq.Init.Logic <> :type_scope:x_'='_x not
R47401:47403 Coq.Init.Datatypes <> nil constr
R47398:47400 Coq.Init.Logic <> :type_scope:x_'='_x not
R47401:47403 Coq.Init.Datatypes <> nil constr
R47474:47483 Coq.Init.Logic <> refl_equal syndef
R47474:47483 Coq.Init.Logic <> refl_equal syndef
R47526:47534 Coq.Init.Logic <> False_rec scheme
R47526:47534 Coq.Init.Logic <> False_rec scheme
R47568:47581 Coccinelle.dickson Make mem_permut_mem defax
R47601:47610 Coccinelle.more_list <> mem_or_app thm
R47633:47642 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47648:47655 Coccinelle.dickson Make eq_proof defax
R47568:47581 Coccinelle.dickson Make mem_permut_mem defax
R47568:47581 Coccinelle.dickson Make mem_permut_mem defax
R47601:47610 Coccinelle.more_list <> mem_or_app thm
R47601:47610 Coccinelle.more_list <> mem_or_app thm
R47633:47642 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47648:47655 Coccinelle.dickson Make eq_proof defax
R47668:47681 Coccinelle.dickson Make mem_permut_mem defax
R47701:47710 Coccinelle.more_list <> mem_or_app thm
R47733:47742 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47748:47755 Coccinelle.dickson Make eq_proof defax
R47668:47681 Coccinelle.dickson Make mem_permut_mem defax
R47668:47681 Coccinelle.dickson Make mem_permut_mem defax
R47701:47710 Coccinelle.more_list <> mem_or_app thm
R47701:47710 Coccinelle.more_list <> mem_or_app thm
R47733:47742 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47748:47755 Coccinelle.dickson Make eq_proof defax
R47780:47790 Coq.Lists.List <> app_nil_end thm
R47810:47820 Coq.Lists.List <> app_nil_end thm
R47780:47790 Coq.Lists.List <> app_nil_end thm
R47780:47790 Coq.Lists.List <> app_nil_end thm
R47810:47820 Coq.Lists.List <> app_nil_end thm
R47810:47820 Coq.Lists.List <> app_nil_end thm
R47869:47869 Coccinelle.dickson Make A defax
R47882:47885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47898:47901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47915:47917 Coq.Init.Logic <> :type_scope:x_'='_x not
R47902:47907 Coccinelle.dickson <> Make.Mult.R_bool var
R47912:47914 Coccinelle.dickson <> ta' var
R47909:47910 Coccinelle.dickson <> ta var
R47918:47923 Coccinelle.dickson <> Make.Mult.R_bool var
R47928:47930 Coccinelle.dickson <> tb' var
R47925:47926 Coccinelle.dickson <> tb var
R47886:47889 Coccinelle.dickson Make eq_A defax
R47895:47897 Coccinelle.dickson <> tb' var
R47891:47893 Coccinelle.dickson <> ta' var
R47872:47875 Coccinelle.dickson Make eq_A defax
R47880:47881 Coccinelle.dickson <> tb var
R47877:47878 Coccinelle.dickson <> ta var
R47869:47869 Coccinelle.dickson Make A defax
R47882:47885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47898:47901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47915:47917 Coq.Init.Logic <> :type_scope:x_'='_x not
R47902:47907 Coccinelle.dickson <> Make.Mult.R_bool var
R47912:47914 Coccinelle.dickson <> ta' var
R47909:47910 Coccinelle.dickson <> ta var
R47918:47923 Coccinelle.dickson <> Make.Mult.R_bool var
R47928:47930 Coccinelle.dickson <> tb' var
R47925:47926 Coccinelle.dickson <> tb var
R47886:47889 Coccinelle.dickson Make eq_A defax
R47895:47897 Coccinelle.dickson <> tb' var
R47891:47893 Coccinelle.dickson <> ta' var
R47872:47875 Coccinelle.dickson Make eq_A defax
R47880:47881 Coccinelle.dickson <> tb var
R47877:47878 Coccinelle.dickson <> ta var
R47941:47944 Coccinelle.dickson Make eq_A defax
R47994:48003 Coq.Init.Logic <> refl_equal syndef
R47994:48003 Coq.Init.Logic <> refl_equal syndef
R48015:48039 Coccinelle.list_permut <> permut_list_forall_exists thm
R48048:48053 Coccinelle.dickson <> Make.Mult.R_bool var
R48041:48046 Coccinelle.dickson <> Make.Mult.R_bool var
R48015:48039 Coccinelle.list_permut <> permut_list_forall_exists thm
R48048:48053 Coccinelle.dickson <> Make.Mult.R_bool var
R48041:48046 Coccinelle.dickson <> Make.Mult.R_bool var
R48015:48039 Coccinelle.list_permut <> permut_list_forall_exists thm
R48048:48053 Coccinelle.dickson <> Make.Mult.R_bool var
R48041:48046 Coccinelle.dickson <> Make.Mult.R_bool var
R48172:48186 Coccinelle.more_list <> list_forall_app thm
R48197:48214 Coq.Bool.Bool <> andb_true_iff thm
R48172:48186 Coccinelle.more_list <> list_forall_app thm
R48172:48186 Coccinelle.more_list <> list_forall_app thm
R48197:48214 Coq.Bool.Bool <> andb_true_iff thm
R48197:48214 Coq.Bool.Bool <> andb_true_iff thm
R48256:48264 Coq.Init.Logic <> or_introl constr
R48269:48278 Coq.Init.Logic <> refl_equal syndef
R48256:48264 Coq.Init.Logic <> or_introl constr
R48269:48278 Coq.Init.Logic <> refl_equal syndef
R48381:48389 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48403:48408 Coccinelle.dickson <> Make.Mult.R_bool var
R48381:48389 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48403:48408 Coccinelle.dickson <> Make.Mult.R_bool var
R48516:48524 Coq.Init.Logic <> False_rec scheme
R48572:48581 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48587:48594 Coccinelle.dickson Make eq_proof defax
R48516:48524 Coq.Init.Logic <> False_rec scheme
R48572:48581 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48587:48594 Coccinelle.dickson Make eq_proof defax
R48607:48622 Coccinelle.more_list <> list_forall_impl thm
R48949:48955 Coccinelle.dickson Make appendn def
R48742:48742 Coccinelle.dickson Make A defax
R48748:48755 Coq.Bool.Bool <> ifb def
R48854:48864 Coccinelle.more_list <> list_exists def
R48896:48900 Coccinelle.dickson Make consn def
R48876:48876 Coccinelle.dickson Make A defax
R48881:48886 Coccinelle.dickson <> Make.Mult.R_bool var
R48891:48892 Coccinelle.dickson <> t2 var
R48888:48889 Coccinelle.dickson <> t1 var
R48771:48774 Coq.Init.Datatypes <> true constr
R48758:48763 Coccinelle.dickson <> Make.Mult.R_bool var
R48765:48766 Coccinelle.dickson <> t1 var
R48634:48634 Coccinelle.dickson Make A defax
R48639:48649 Coccinelle.more_list <> list_exists def
R48681:48685 Coccinelle.dickson Make consn def
R48661:48661 Coccinelle.dickson Make A defax
R48666:48671 Coccinelle.dickson <> Make.Mult.R_bool var
R48676:48677 Coccinelle.dickson <> t2 var
R48673:48674 Coccinelle.dickson <> t1 var
R48607:48622 Coccinelle.more_list <> list_forall_impl thm
R48949:48955 Coccinelle.dickson Make appendn def
R48742:48742 Coccinelle.dickson Make A defax
R48748:48755 Coq.Bool.Bool <> ifb def
R48854:48864 Coccinelle.more_list <> list_exists def
R48896:48900 Coccinelle.dickson Make consn def
R48876:48876 Coccinelle.dickson Make A defax
R48881:48886 Coccinelle.dickson <> Make.Mult.R_bool var
R48891:48892 Coccinelle.dickson <> t2 var
R48888:48889 Coccinelle.dickson <> t1 var
R48771:48774 Coq.Init.Datatypes <> true constr
R48758:48763 Coccinelle.dickson <> Make.Mult.R_bool var
R48765:48766 Coccinelle.dickson <> t1 var
R48634:48634 Coccinelle.dickson Make A defax
R48639:48649 Coccinelle.more_list <> list_exists def
R48681:48685 Coccinelle.dickson Make consn def
R48661:48661 Coccinelle.dickson Make A defax
R48666:48671 Coccinelle.dickson <> Make.Mult.R_bool var
R48676:48677 Coccinelle.dickson <> t2 var
R48673:48674 Coccinelle.dickson <> t1 var
R48607:48622 Coccinelle.more_list <> list_forall_impl thm
R48949:48955 Coccinelle.dickson Make appendn def
R48742:48742 Coccinelle.dickson Make A defax
R48748:48755 Coq.Bool.Bool <> ifb def
R48854:48864 Coccinelle.more_list <> list_exists def
R48896:48900 Coccinelle.dickson Make consn def
R48876:48876 Coccinelle.dickson Make A defax
R48881:48886 Coccinelle.dickson <> Make.Mult.R_bool var
R48891:48892 Coccinelle.dickson <> t2 var
R48888:48889 Coccinelle.dickson <> t1 var
R48771:48774 Coq.Init.Datatypes <> true constr
R48758:48763 Coccinelle.dickson <> Make.Mult.R_bool var
R48765:48766 Coccinelle.dickson <> t1 var
R48634:48634 Coccinelle.dickson Make A defax
R48639:48649 Coccinelle.more_list <> list_exists def
R48681:48685 Coccinelle.dickson Make consn def
R48661:48661 Coccinelle.dickson Make A defax
R48666:48671 Coccinelle.dickson <> Make.Mult.R_bool var
R48676:48677 Coccinelle.dickson <> t2 var
R48673:48674 Coccinelle.dickson <> t1 var
R48607:48622 Coccinelle.more_list <> list_forall_impl thm
R48949:48955 Coccinelle.dickson Make appendn def
R48742:48742 Coccinelle.dickson Make A defax
R48748:48755 Coq.Bool.Bool <> ifb def
R48854:48864 Coccinelle.more_list <> list_exists def
R48896:48900 Coccinelle.dickson Make consn def
R48876:48876 Coccinelle.dickson Make A defax
R48881:48886 Coccinelle.dickson <> Make.Mult.R_bool var
R48891:48892 Coccinelle.dickson <> t2 var
R48888:48889 Coccinelle.dickson <> t1 var
R48771:48774 Coq.Init.Datatypes <> true constr
R48758:48763 Coccinelle.dickson <> Make.Mult.R_bool var
R48765:48766 Coccinelle.dickson <> t1 var
R48634:48634 Coccinelle.dickson Make A defax
R48639:48649 Coccinelle.more_list <> list_exists def
R48681:48685 Coccinelle.dickson Make consn def
R48661:48661 Coccinelle.dickson Make A defax
R48666:48671 Coccinelle.dickson <> Make.Mult.R_bool var
R48676:48677 Coccinelle.dickson <> t2 var
R48673:48674 Coccinelle.dickson <> t1 var
R48607:48622 Coccinelle.more_list <> list_forall_impl thm
R48949:48955 Coccinelle.dickson Make appendn def
R48742:48742 Coccinelle.dickson Make A defax
R48748:48755 Coq.Bool.Bool <> ifb def
R48854:48864 Coccinelle.more_list <> list_exists def
R48896:48900 Coccinelle.dickson Make consn def
R48876:48876 Coccinelle.dickson Make A defax
R48881:48886 Coccinelle.dickson <> Make.Mult.R_bool var
R48891:48892 Coccinelle.dickson <> t2 var
R48888:48889 Coccinelle.dickson <> t1 var
R48771:48774 Coq.Init.Datatypes <> true constr
R48758:48763 Coccinelle.dickson <> Make.Mult.R_bool var
R48765:48766 Coccinelle.dickson <> t1 var
R48634:48634 Coccinelle.dickson Make A defax
R48639:48649 Coccinelle.more_list <> list_exists def
R48681:48685 Coccinelle.dickson Make consn def
R48661:48661 Coccinelle.dickson Make A defax
R48666:48671 Coccinelle.dickson <> Make.Mult.R_bool var
R48676:48677 Coccinelle.dickson <> t2 var
R48673:48674 Coccinelle.dickson <> t1 var
R48969:48978 Coq.Init.Logic <> refl_equal syndef
R48969:48978 Coq.Init.Logic <> refl_equal syndef
R49008:49013 Coccinelle.dickson <> Make.Mult.R_bool var
R49035:49044 Coq.Init.Logic <> refl_equal syndef
R49008:49013 Coccinelle.dickson <> Make.Mult.R_bool var
R49035:49044 Coq.Init.Logic <> refl_equal syndef
prf 49145:49155 Make mult_irrefl
R49174:49177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49178:49178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49196:49200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49253:49256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49257:49261 Coq.Init.Logic <> False ind
R49211:49220 Coccinelle.TransClosure <> trans_clos ind
R49252:49252 Coccinelle.dickson <> l var
R49250:49250 Coccinelle.dickson <> l var
R49223:49245 Coccinelle.dickson Make multiset_extension_step ind
R49247:49247 Coccinelle.dickson <> Make.Mult.R var
R49189:49190 Coq.Init.Logic <> :type_scope:'~'_x not
R49191:49191 Coccinelle.dickson <> Make.Mult.R var
R49195:49195 Coccinelle.dickson <> a var
R49193:49193 Coccinelle.dickson <> a var
R49160:49169 Coq.Relations.Relation_Definitions <> transitive def
R49173:49173 Coccinelle.dickson <> Make.Mult.R var
R49314:49324 Coq.Lists.List <> app_nil_end thm
R49314:49324 Coq.Lists.List <> app_nil_end thm
R49314:49324 Coq.Lists.List <> app_nil_end thm
R49362:49415 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49438:49440 Coq.Init.Datatypes <> nil constr
R49434:49436 Coq.Init.Datatypes <> nil constr
R49362:49415 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49438:49440 Coq.Init.Datatypes <> nil constr
R49434:49436 Coq.Init.Datatypes <> nil constr
R49539:49542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49551:49554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49555:49559 Coq.Init.Logic <> False ind
R49545:49547 Coq.Init.Logic <> :type_scope:x_'='_x not
R49543:49544 Coccinelle.dickson <> l2 var
R49548:49550 Coq.Init.Datatypes <> nil constr
R49495:49504 Coccinelle.TransClosure <> trans_clos ind
R49537:49538 Coccinelle.dickson <> l2 var
R49534:49535 Coccinelle.dickson <> l1 var
R49507:49529 Coccinelle.dickson Make multiset_extension_step ind
R49531:49531 Coccinelle.dickson <> Make.Mult.R var
R49539:49542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49551:49554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49555:49559 Coq.Init.Logic <> False ind
R49545:49547 Coq.Init.Logic <> :type_scope:x_'='_x not
R49543:49544 Coccinelle.dickson <> l2 var
R49548:49550 Coq.Init.Datatypes <> nil constr
R49495:49504 Coccinelle.TransClosure <> trans_clos ind
R49537:49538 Coccinelle.dickson <> l2 var
R49534:49535 Coccinelle.dickson <> l1 var
R49507:49529 Coccinelle.dickson Make multiset_extension_step ind
R49531:49531 Coccinelle.dickson <> Make.Mult.R var
R49701:49713 Coccinelle.list_permut <> permut_length thm
R49701:49713 Coccinelle.list_permut <> permut_length thm
R49759:49768 Coq.Init.Logic <> refl_equal syndef
R49759:49768 Coq.Init.Logic <> refl_equal syndef
R49803:49812 Coq.Init.Logic <> refl_equal syndef
R49803:49812 Coq.Init.Logic <> refl_equal syndef
prf 49827:49850 Make mult_is_complete_greater
R49869:49872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49873:49873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49891:49898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49957:49960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49971:49973 Coq.Init.Logic <> :type_scope:x_'='_x not
R49961:49964 Coccinelle.dickson Make mult def
R49969:49970 Coccinelle.dickson <> l2 var
R49966:49967 Coccinelle.dickson <> l1 var
R49974:49985 Coccinelle.ordered_set <> Greater_than constr
R49913:49922 Coccinelle.TransClosure <> trans_clos ind
R49955:49956 Coccinelle.dickson <> l1 var
R49952:49953 Coccinelle.dickson <> l2 var
R49925:49947 Coccinelle.dickson Make multiset_extension_step ind
R49949:49949 Coccinelle.dickson <> Make.Mult.R var
R49884:49885 Coq.Init.Logic <> :type_scope:'~'_x not
R49886:49886 Coccinelle.dickson <> Make.Mult.R var
R49890:49890 Coccinelle.dickson <> a var
R49888:49888 Coccinelle.dickson <> a var
R49855:49864 Coq.Relations.Relation_Definitions <> transitive def
R49868:49868 Coccinelle.dickson <> Make.Mult.R var
R50047:50067 Coccinelle.dickson Make remove_equiv_is_sound defax
R50084:50087 Coccinelle.dickson Make mult def
R50097:50097 Coccinelle.dickson Make A defax
R50114:50125 Coccinelle.more_list <> remove_equiv def
R50127:50133 Coccinelle.dickson Make eq_bool defax
R50047:50067 Coccinelle.dickson Make remove_equiv_is_sound defax
R50114:50125 Coccinelle.more_list <> remove_equiv def
R50127:50133 Coccinelle.dickson Make eq_bool defax
R50206:50215 Coccinelle.TransClosure <> trans_clos ind
R50257:50260 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50247:50250 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50218:50240 Coccinelle.dickson Make multiset_extension_step ind
R50242:50242 Coccinelle.dickson <> Make.Mult.R var
R50206:50215 Coccinelle.TransClosure <> trans_clos ind
R50257:50260 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50247:50250 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50218:50240 Coccinelle.dickson Make multiset_extension_step ind
R50242:50242 Coccinelle.dickson <> Make.Mult.R var
R50273:50320 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50273:50320 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50359:50406 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50359:50406 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50447:50474 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50447:50474 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50530:50530 Coccinelle.dickson Make A defax
R50627:50636 Coq.Init.Logic <> refl_equal syndef
R50627:50636 Coq.Init.Logic <> refl_equal syndef
R50678:50687 Coq.Init.Logic <> refl_equal syndef
R50678:50687 Coq.Init.Logic <> refl_equal syndef
R50706:50714 Coq.Init.Logic <> False_rec scheme
R50706:50714 Coq.Init.Logic <> False_rec scheme
R50724:50734 Coccinelle.dickson Make mult_irrefl thm
R50724:50734 Coccinelle.dickson Make mult_irrefl thm
prf 50769:50794 Make mult_is_complete_less_than
R50813:50816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50817:50817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50835:50842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50901:50904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50915:50917 Coq.Init.Logic <> :type_scope:x_'='_x not
R50905:50908 Coccinelle.dickson Make mult def
R50913:50914 Coccinelle.dickson <> l2 var
R50910:50911 Coccinelle.dickson <> l1 var
R50918:50926 Coccinelle.ordered_set <> Less_than constr
R50857:50866 Coccinelle.TransClosure <> trans_clos ind
R50899:50900 Coccinelle.dickson <> l2 var
R50896:50897 Coccinelle.dickson <> l1 var
R50869:50891 Coccinelle.dickson Make multiset_extension_step ind
R50893:50893 Coccinelle.dickson <> Make.Mult.R var
R50828:50829 Coq.Init.Logic <> :type_scope:'~'_x not
R50830:50830 Coccinelle.dickson <> Make.Mult.R var
R50834:50834 Coccinelle.dickson <> a var
R50832:50832 Coccinelle.dickson <> a var
R50799:50808 Coq.Relations.Relation_Definitions <> transitive def
R50812:50812 Coccinelle.dickson <> Make.Mult.R var
R50988:51003 Coccinelle.dickson Make multiset_closure thm
R50988:51003 Coccinelle.dickson Make multiset_closure thm
R51149:51154 Coccinelle.dickson Make permut syndef
R51162:51165 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51166:51172 Coccinelle.dickson Make appendn def
R51149:51154 Coccinelle.dickson Make permut syndef
R51162:51165 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51166:51172 Coccinelle.dickson Make appendn def
R51215:51218 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51205:51211 Coccinelle.dickson Make appendn def
R51186:51197 Coccinelle.dickson Make permut_trans defax
R51215:51218 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51205:51211 Coccinelle.dickson Make appendn def
R51186:51197 Coccinelle.dickson Make permut_trans defax
R51242:51253 Coccinelle.list_permut <> permut_swapp thm
R51262:51272 Coccinelle.dickson Make permut_refl defax
R51242:51253 Coccinelle.list_permut <> permut_swapp thm
R51262:51272 Coccinelle.dickson Make permut_refl defax
R51262:51272 Coccinelle.dickson Make permut_refl defax
R51288:51293 Coccinelle.dickson Make permut syndef
R51301:51304 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51305:51309 Coccinelle.dickson Make consn def
R51288:51293 Coccinelle.dickson Make permut syndef
R51301:51304 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51305:51309 Coccinelle.dickson Make consn def
R51350:51353 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51342:51346 Coccinelle.dickson Make consn def
R51323:51334 Coccinelle.dickson Make permut_trans defax
R51350:51353 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51342:51346 Coccinelle.dickson Make consn def
R51323:51334 Coccinelle.dickson Make permut_trans defax
R51377:51388 Coccinelle.list_permut <> permut_swapp thm
R51397:51407 Coccinelle.dickson Make permut_refl defax
R51377:51388 Coccinelle.list_permut <> permut_swapp thm
R51397:51407 Coccinelle.dickson Make permut_refl defax
R51397:51407 Coccinelle.dickson Make permut_refl defax
R51444:51444 Coccinelle.dickson Make A defax
R51470:51473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51495:51498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51499:51503 Coq.Init.Logic <> False ind
R51474:51476 Coccinelle.more_list <> mem def
R51486:51490 Coccinelle.dickson Make consn def
R51483:51483 Coccinelle.dickson <> x var
R51478:51481 Coccinelle.dickson Make eq_A defax
R51447:51449 Coccinelle.more_list <> mem def
R51459:51465 Coccinelle.dickson Make appendn def
R51456:51456 Coccinelle.dickson <> x var
R51451:51454 Coccinelle.dickson Make eq_A defax
R51444:51444 Coccinelle.dickson Make A defax
R51470:51473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51495:51498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51499:51503 Coq.Init.Logic <> False ind
R51474:51476 Coccinelle.more_list <> mem def
R51486:51490 Coccinelle.dickson Make consn def
R51483:51483 Coccinelle.dickson <> x var
R51478:51481 Coccinelle.dickson Make eq_A defax
R51447:51449 Coccinelle.more_list <> mem def
R51459:51465 Coccinelle.dickson Make appendn def
R51456:51456 Coccinelle.dickson <> x var
R51451:51454 Coccinelle.dickson Make eq_A defax
R51583:51606 Coccinelle.dickson Make remove_equiv_is_complete defax
R51635:51647 Coccinelle.dickson Make mult_is_sound thm
R51583:51606 Coccinelle.dickson Make remove_equiv_is_complete defax
R51635:51647 Coccinelle.dickson Make mult_is_sound thm
R51664:51667 Coccinelle.dickson Make mult def
R51677:51677 Coccinelle.dickson Make A defax
R51692:51703 Coccinelle.more_list <> remove_equiv def
R51711:51717 Coccinelle.dickson Make eq_bool defax
R51705:51709 Coccinelle.dickson DS1 A defax
R51692:51703 Coccinelle.more_list <> remove_equiv def
R51711:51717 Coccinelle.dickson Make eq_bool defax
R51705:51709 Coccinelle.dickson DS1 A defax
R51775:51802 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51775:51802 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51839:51839 Coccinelle.dickson Make A defax
R51959:51967 Coq.Init.Logic <> False_rec scheme
R51995:52004 Coq.Init.Logic <> refl_equal syndef
R51959:51967 Coq.Init.Logic <> False_rec scheme
R51995:52004 Coq.Init.Logic <> refl_equal syndef
R52040:52048 Coq.Init.Logic <> False_rec scheme
R52040:52048 Coq.Init.Logic <> False_rec scheme
R52064:52076 Coccinelle.list_permut <> permut_length thm
R52064:52076 Coccinelle.list_permut <> permut_length thm
R52112:52121 Coq.Init.Logic <> refl_equal syndef
R52112:52121 Coq.Init.Logic <> refl_equal syndef
R52174:52184 Coccinelle.more_list <> list_forall def
R52196:52200 Coccinelle.dickson DS1 A defax
R52205:52215 Coccinelle.more_list <> list_exists def
R52253:52256 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R52227:52231 Coccinelle.dickson DS1 A defax
R52236:52241 Coccinelle.dickson <> Make.Mult.R_bool var
R52246:52247 Coccinelle.dickson <> t1 var
R52243:52244 Coccinelle.dickson <> t2 var
R52174:52184 Coccinelle.more_list <> list_forall def
R52196:52200 Coccinelle.dickson DS1 A defax
R52205:52215 Coccinelle.more_list <> list_exists def
R52253:52256 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R52227:52231 Coccinelle.dickson DS1 A defax
R52236:52241 Coccinelle.dickson <> Make.Mult.R_bool var
R52246:52247 Coccinelle.dickson <> t1 var
R52243:52244 Coccinelle.dickson <> t2 var
R52289:52297 Coq.Init.Logic <> False_rec scheme
R52289:52297 Coq.Init.Logic <> False_rec scheme
R52308:52318 Coccinelle.dickson Make mult_irrefl thm
R52308:52318 Coccinelle.dickson Make mult_irrefl thm
R52348:52366 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52348:52366 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52403:52412 Coq.Init.Logic <> refl_equal syndef
R52403:52412 Coq.Init.Logic <> refl_equal syndef
R52478:52491 Coccinelle.dickson Make mem_permut_mem defax
R52478:52491 Coccinelle.dickson Make mem_permut_mem defax
R52478:52491 Coccinelle.dickson Make mem_permut_mem defax
R52525:52538 Coccinelle.dickson Make mem_permut_mem defax
R52525:52538 Coccinelle.dickson Make mem_permut_mem defax
R52525:52538 Coccinelle.dickson Make mem_permut_mem defax
R52566:52613 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52566:52613 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52651:52654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52630:52641 Coccinelle.dickson Make permut_trans defax
R52651:52654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52630:52641 Coccinelle.dickson Make permut_trans defax
R52695:52698 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52685:52691 Coccinelle.dickson Make appendn def
R52666:52677 Coccinelle.dickson Make permut_trans defax
R52695:52698 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52685:52691 Coccinelle.dickson Make appendn def
R52666:52677 Coccinelle.dickson Make permut_trans defax
R52727:52737 Coccinelle.dickson Make permut_app2 defax
R52746:52755 Coccinelle.dickson Make permut_sym defax
R52727:52737 Coccinelle.dickson Make permut_app2 defax
R52727:52737 Coccinelle.dickson Make permut_app2 defax
R52746:52755 Coccinelle.dickson Make permut_sym defax
R52776:52787 Coccinelle.list_permut <> permut_swapp thm
R52796:52806 Coccinelle.dickson Make permut_refl defax
R52776:52787 Coccinelle.list_permut <> permut_swapp thm
R52796:52806 Coccinelle.dickson Make permut_refl defax
R52796:52806 Coccinelle.dickson Make permut_refl defax
R52815:52862 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52815:52862 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52900:52903 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52879:52890 Coccinelle.dickson Make permut_trans defax
R52900:52903 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52879:52890 Coccinelle.dickson Make permut_trans defax
R52942:52945 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52934:52938 Coccinelle.dickson Make consn def
R52915:52926 Coccinelle.dickson Make permut_trans defax
R52942:52945 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52934:52938 Coccinelle.dickson Make consn def
R52915:52926 Coccinelle.dickson Make permut_trans defax
R52974:52984 Coccinelle.dickson Make permut_app2 defax
R52993:53002 Coccinelle.dickson Make permut_sym defax
R52974:52984 Coccinelle.dickson Make permut_app2 defax
R52974:52984 Coccinelle.dickson Make permut_app2 defax
R52993:53002 Coccinelle.dickson Make permut_sym defax
R53023:53034 Coccinelle.list_permut <> permut_swapp thm
R53043:53053 Coccinelle.dickson Make permut_refl defax
R53023:53034 Coccinelle.list_permut <> permut_swapp thm
R53043:53053 Coccinelle.dickson Make permut_refl defax
R53043:53053 Coccinelle.dickson Make permut_refl defax
prf 53084:53099 Make mult_is_complete
R53119:53122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53123:53123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53141:53146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53169:53172 Coccinelle.dickson Make mult def
R53177:53178 Coccinelle.dickson <> l2 var
R53174:53175 Coccinelle.dickson <> l1 var
R53189:53200 Coccinelle.ordered_set <> Uncomparable constr
R53219:53260 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53205:53206 Coq.Init.Logic <> :type_scope:'~'_x not
R53207:53212 Coccinelle.dickson Make permut syndef
R53217:53218 Coccinelle.dickson <> l2 var
R53214:53215 Coccinelle.dickson <> l1 var
R53306:53348 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53261:53261 Coq.Init.Logic <> :type_scope:'~'_x not
R53262:53271 Coccinelle.TransClosure <> trans_clos ind
R53304:53305 Coccinelle.dickson <> l2 var
R53301:53302 Coccinelle.dickson <> l1 var
R53274:53296 Coccinelle.dickson Make multiset_extension_step ind
R53298:53298 Coccinelle.dickson <> Make.Mult.R var
R53349:53349 Coq.Init.Logic <> :type_scope:'~'_x not
R53350:53359 Coccinelle.TransClosure <> trans_clos ind
R53392:53393 Coccinelle.dickson <> l1 var
R53389:53390 Coccinelle.dickson <> l2 var
R53362:53384 Coccinelle.dickson Make multiset_extension_step ind
R53386:53386 Coccinelle.dickson <> Make.Mult.R var
R53404:53407 Coq.Init.Logic <> True ind
R53134:53135 Coq.Init.Logic <> :type_scope:'~'_x not
R53136:53136 Coccinelle.dickson <> Make.Mult.R var
R53140:53140 Coccinelle.dickson <> a var
R53138:53138 Coccinelle.dickson <> a var
R53105:53114 Coq.Relations.Relation_Definitions <> transitive def
R53118:53118 Coccinelle.dickson <> Make.Mult.R var
R53466:53478 Coccinelle.dickson Make mult_is_sound thm
R53489:53510 Coccinelle.dickson Make mult_is_complete_equiv thm
R53542:53565 Coccinelle.dickson Make mult_is_complete_greater thm
R53593:53618 Coccinelle.dickson Make mult_is_complete_less_than thm
R53466:53478 Coccinelle.dickson Make mult_is_sound thm
R53489:53510 Coccinelle.dickson Make mult_is_complete_equiv thm
R53542:53565 Coccinelle.dickson Make mult_is_complete_greater thm
R53593:53618 Coccinelle.dickson Make mult_is_complete_less_than thm
R53651:53654 Coccinelle.dickson Make mult def
R53651:53654 Coccinelle.dickson Make mult def
R53824:53827 Coccinelle.dickson Make.Mult <> sec
R53835:53838 Coccinelle.dickson Make <> mod
R53859:53862 Coccinelle.dickson Make <> modtype
R53865:53879 Coccinelle.ordered_set Nat <> modtype
mod 53849:53854 <> NatMul
