DIGEST 4cee4b5b28923b51f8adc09c5933bdaa
FCoccinelle.dickson
R905:910 Coq.Setoids.Setoid <> <> lib
R928:936 Coq.Relations.Relations <> <> lib
R954:957 Coq.Lists.List <> <> lib
R975:983 Coccinelle.more_list <> <> lib
R1001:1008 Coq.Sets.Multiset <> <> lib
R1026:1036 Coccinelle.list_permut <> <> lib
R1054:1064 Coccinelle.ordered_set <> <> lib
R1082:1086 Coq.Arith.Arith <> <> lib
R1104:1110 Coccinelle.closure <> <> lib
R1156:1158 Coq.Init.Logic <> :type_scope:x_'='_x not
modtype 1233:1233 <> D
R1266:1280 Coccinelle.decidable_set S <> mod
mod 1261:1262 <> D.DS
R1312:1324 Coccinelle.list_permut S <> mod
R1351:1354 Coccinelle.dickson D A defax
R1453:1454 Coq.Init.Logic <> eq ind
R1456:1459 Coccinelle.dickson D A defax
mod 1307:1308 <> D.LP
ind 1536:1558 D multiset_extension_step
constr 1611:1618 D rmv_case
R1565:1572 Coq.Relations.Relation_Definitions <> relation def
R1574:1574 Coccinelle.dickson D A defax
R1585:1588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1595:1598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1589:1592 Coq.Init.Datatypes <> list ind
R1594:1594 Coccinelle.dickson D A defax
R1579:1582 Coq.Init.Datatypes <> list ind
R1584:1584 Coccinelle.dickson D A defax
R1649:1649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1686:1697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1717:1720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1739:1748 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1749:1771 Coccinelle.dickson <> multiset_extension_step ind
R1778:1779 Coccinelle.dickson <> l2 var
R1775:1776 Coccinelle.dickson <> l1 var
R1721:1726 Coccinelle.dickson D permut syndef
R1733:1736 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1732:1732 Coccinelle.dickson <> a var
R1737:1737 Coccinelle.dickson <> l var
R1728:1729 Coccinelle.dickson <> l2 var
R1698:1703 Coccinelle.dickson D permut syndef
R1711:1714 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1709:1710 Coccinelle.dickson <> la var
R1715:1715 Coccinelle.dickson <> l var
R1705:1706 Coccinelle.dickson <> l1 var
R1677:1680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1685:1685 Coccinelle.dickson <> a var
R1683:1683 Coccinelle.dickson <> b var
R1660:1662 Coccinelle.more_list <> mem def
R1675:1676 Coccinelle.dickson <> la var
R1673:1673 Coccinelle.dickson <> b var
R1664:1671 Coccinelle.dickson D eq_A defax
ax 1858:1894 D list_permut_multiset_extension_step_1
R1930:1936 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1967:1970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1971:1993 Coccinelle.dickson D multiset_extension_step ind
R2000:2000 Coccinelle.dickson <> l var
R1997:1998 Coccinelle.dickson <> l2 var
R1995:1995 Coccinelle.dickson <> R var
R1937:1959 Coccinelle.dickson D multiset_extension_step ind
R1966:1966 Coccinelle.dickson <> l var
R1963:1964 Coccinelle.dickson <> l1 var
R1961:1961 Coccinelle.dickson <> R var
R1918:1923 Coccinelle.dickson D permut syndef
R1928:1929 Coccinelle.dickson <> l2 var
R1925:1926 Coccinelle.dickson <> l1 var
ax 2014:2050 D list_permut_multiset_extension_step_2
R2086:2092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2123:2126 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2127:2149 Coccinelle.dickson D multiset_extension_step ind
R2155:2156 Coccinelle.dickson <> l2 var
R2153:2153 Coccinelle.dickson <> l var
R2151:2151 Coccinelle.dickson <> R var
R2093:2115 Coccinelle.dickson D multiset_extension_step ind
R2121:2122 Coccinelle.dickson <> l1 var
R2119:2119 Coccinelle.dickson <> l var
R2117:2117 Coccinelle.dickson <> R var
R2074:2079 Coccinelle.dickson D permut syndef
R2084:2085 Coccinelle.dickson <> l2 var
R2081:2082 Coccinelle.dickson <> l1 var
R2189:2196 Coq.Relations.Relation_Definitions <> relation def
R2198:2198 Coccinelle.dickson D A defax
R2204:2226 Coccinelle.dickson D multiset_extension_step ind
R2228:2228 Coccinelle.dickson <> R var
R2255:2259 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2249:2254 Coccinelle.dickson D permut syndef
R2266:2270 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2260:2265 Coccinelle.dickson D permut syndef
R2271:2273 Coq.Init.Logic <> iff def
ax 2347:2361 D list_permut_acc
R2395:2401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2436:2439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2440:2442 Coq.Init.Wf <> Acc ind
R2472:2473 Coccinelle.dickson <> l2 var
R2445:2467 Coccinelle.dickson D multiset_extension_step ind
R2469:2469 Coccinelle.dickson <> R var
R2402:2404 Coq.Init.Wf <> Acc ind
R2434:2435 Coccinelle.dickson <> l1 var
R2407:2429 Coccinelle.dickson D multiset_extension_step ind
R2431:2431 Coccinelle.dickson <> R var
R2383:2388 Coccinelle.dickson D permut syndef
R2393:2394 Coccinelle.dickson <> l1 var
R2390:2391 Coccinelle.dickson <> l2 var
ax 2506:2512 D dickson
R2543:2546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2547:2558 Coq.Init.Wf <> well_founded def
R2561:2583 Coccinelle.dickson D multiset_extension_step ind
R2585:2585 Coccinelle.dickson <> R var
R2529:2540 Coq.Init.Wf <> well_founded def
R2542:2542 Coccinelle.dickson <> R var
ax 2600:2613 D dickson_strong
R2632:2632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2660:2664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2665:2667 Coq.Init.Wf <> Acc ind
R2697:2697 Coccinelle.dickson <> l var
R2670:2692 Coccinelle.dickson D multiset_extension_step ind
R2694:2694 Coccinelle.dickson <> R var
R2649:2652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2653:2655 Coq.Init.Wf <> Acc ind
R2659:2659 Coccinelle.dickson <> a var
R2657:2657 Coccinelle.dickson <> R var
R2643:2644 Coq.Lists.List <> In def
R2648:2648 Coccinelle.dickson <> l var
R2646:2646 Coccinelle.dickson <> a var
ax 2711:2757 D context_trans_clos_multiset_extension_step_app1
R2825:2853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2854:2863 Coccinelle.TransClosure <> trans_clos ind
R2905:2908 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2904:2904 Coccinelle.dickson <> l var
R2909:2910 Coccinelle.dickson <> l2 var
R2895:2898 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2894:2894 Coccinelle.dickson <> l var
R2899:2900 Coccinelle.dickson <> l1 var
R2866:2888 Coccinelle.dickson D multiset_extension_step ind
R2890:2890 Coccinelle.dickson <> R var
R2781:2790 Coccinelle.TransClosure <> trans_clos ind
R2823:2824 Coccinelle.dickson <> l2 var
R2820:2821 Coccinelle.dickson <> l1 var
R2793:2815 Coccinelle.dickson D multiset_extension_step ind
R2817:2817 Coccinelle.dickson <> R var
R2936:2939 Coq.Init.Datatypes <> list ind
R2943:2945 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2942:2942 Coccinelle.dickson D A defax
R2946:2949 Coq.Init.Datatypes <> list ind
R2951:2951 Coccinelle.dickson D A defax
R2957:2960 Coq.Init.Datatypes <> list ind
R2962:2962 Coccinelle.dickson D A defax
R2975:2976 Coccinelle.dickson <> ll var
R2988:2990 Coq.Init.Datatypes <> nil constr
R2995:2997 Coq.Init.Datatypes <> nil constr
R3008:3011 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3003:3003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3005:3005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3007:3007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3019:3022 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3031:3031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3023:3027 Coccinelle.dickson <> consn def
R3029:3030 Coccinelle.dickson <> ll var
R2975:2976 Coccinelle.dickson <> ll var
R2988:2990 Coq.Init.Datatypes <> nil constr
R2995:2997 Coq.Init.Datatypes <> nil constr
R3008:3011 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3003:3003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3005:3005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3007:3007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3019:3022 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3031:3031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3023:3027 Coccinelle.dickson <> consn def
R3029:3030 Coccinelle.dickson <> ll var
R2975:2976 Coccinelle.dickson <> ll var
R2988:2990 Coq.Init.Datatypes <> nil constr
R2995:2997 Coq.Init.Datatypes <> nil constr
R3008:3011 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3003:3003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3005:3005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3007:3007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3019:3022 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3031:3031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3023:3027 Coccinelle.dickson <> consn def
R3029:3030 Coccinelle.dickson <> ll var
R3064:3067 Coq.Init.Datatypes <> list ind
R3071:3073 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R3070:3070 Coccinelle.dickson D A defax
R3074:3077 Coq.Init.Datatypes <> list ind
R3079:3079 Coccinelle.dickson D A defax
R3085:3088 Coq.Init.Datatypes <> list ind
R3090:3090 Coccinelle.dickson D A defax
R3103:3104 Coccinelle.dickson <> ll var
R3116:3118 Coq.Init.Datatypes <> nil constr
R3123:3125 Coq.Init.Datatypes <> nil constr
R3136:3139 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3131:3131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3133:3133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3135:3135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3147:3151 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3162:3162 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3152:3158 Coccinelle.dickson <> appendn def
R3160:3161 Coccinelle.dickson <> ll var
R3103:3104 Coccinelle.dickson <> ll var
R3116:3118 Coq.Init.Datatypes <> nil constr
R3123:3125 Coq.Init.Datatypes <> nil constr
R3136:3139 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3131:3131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3133:3133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3135:3135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3147:3151 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3162:3162 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3152:3158 Coccinelle.dickson <> appendn def
R3160:3161 Coccinelle.dickson <> ll var
R3103:3104 Coccinelle.dickson <> ll var
R3116:3118 Coq.Init.Datatypes <> nil constr
R3123:3125 Coq.Init.Datatypes <> nil constr
R3136:3139 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3131:3131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3133:3133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3135:3135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3147:3151 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3162:3162 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3152:3158 Coccinelle.dickson <> appendn def
R3160:3161 Coccinelle.dickson <> ll var
ax 3182:3197 D multiset_closure
R3213:3213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3242:3246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3261:3266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3321:3326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3327:3333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3335:3336 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3337:3343 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3346:3349 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3378:3383 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3350:3355 Coccinelle.dickson D permut syndef
R3360:3360 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3370:3374 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3361:3367 Coccinelle.dickson D appendn def
R3369:3369 Coccinelle.dickson <> l var
R3375:3376 Coccinelle.dickson <> pq var
R3357:3357 Coccinelle.dickson <> p var
R3410:3415 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3384:3389 Coccinelle.dickson D permut syndef
R3394:3394 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3402:3406 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3395:3399 Coccinelle.dickson D consn def
R3401:3401 Coccinelle.dickson <> l var
R3407:3408 Coccinelle.dickson <> pq var
R3391:3391 Coccinelle.dickson <> q var
R3424:3429 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3417:3420 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3416:3416 Coccinelle.dickson <> l var
R3421:3423 Coq.Init.Datatypes <> nil constr
R3430:3430 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3503:3510 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3606:3606 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3463:3466 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3494:3497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3498:3498 Coccinelle.dickson <> R var
R3502:3502 Coccinelle.dickson <> a var
R3500:3500 Coccinelle.dickson <> b var
R3477:3479 Coccinelle.more_list <> mem def
R3492:3493 Coccinelle.dickson <> la var
R3490:3490 Coccinelle.dickson <> b var
R3481:3488 Coccinelle.dickson D eq_A defax
R3452:3453 Coq.Lists.List <> In def
R3462:3462 Coccinelle.dickson <> l var
R3455:3455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3457:3457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3460:3460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3456:3456 Coccinelle.dickson <> a var
R3458:3459 Coccinelle.dickson <> la var
R3511:3511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3528:3532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3567:3570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3597:3600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3601:3605 Coq.Init.Logic <> False ind
R3571:3573 Coccinelle.more_list <> mem def
R3587:3593 Coccinelle.dickson D appendn def
R3595:3595 Coccinelle.dickson <> l var
R3584:3584 Coccinelle.dickson <> a var
R3575:3582 Coccinelle.dickson D eq_A defax
R3543:3545 Coccinelle.more_list <> mem def
R3559:3563 Coccinelle.dickson D consn def
R3565:3565 Coccinelle.dickson <> l var
R3556:3556 Coccinelle.dickson <> a var
R3547:3554 Coccinelle.dickson D eq_A defax
R3522:3522 Coq.Init.Logic <> :type_scope:'~'_x not
R3523:3523 Coccinelle.dickson <> R var
R3527:3527 Coccinelle.dickson <> a var
R3525:3525 Coccinelle.dickson <> a var
R3279:3288 Coccinelle.TransClosure <> trans_clos ind
R3320:3320 Coccinelle.dickson <> q var
R3318:3318 Coccinelle.dickson <> p var
R3291:3313 Coccinelle.dickson D multiset_extension_step ind
R3315:3315 Coccinelle.dickson <> R var
R3247:3256 Coq.Relations.Relation_Definitions <> transitive def
R3260:3260 Coccinelle.dickson <> R var
R3226:3226 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3232:3234 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3241:3241 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3227:3227 Coccinelle.dickson <> R var
R3231:3231 Coccinelle.dickson <> y var
R3229:3229 Coccinelle.dickson <> x var
R3235:3235 Coq.Init.Logic <> :type_scope:'~'_x not
R3236:3236 Coccinelle.dickson <> R var
R3240:3240 Coccinelle.dickson <> y var
R3238:3238 Coccinelle.dickson <> x var
R3614:3614 Coccinelle.dickson D <> modtype
R3637:3651 Coccinelle.decidable_set S <> mod
mod 3625:3628 <> Make
R3676:3696 Coccinelle.decidable_set Convert <> modtype
R3699:3701 Coccinelle.dickson DS1 <> modtype
mod 3670:3671 <> Make.DS
R3725:3740 Coccinelle.list_permut Make <> modtype
R3743:3744 Coccinelle.dickson Make.DS <> modtype
mod 3719:3720 <> Make.LP
ind 3824:3846 Make multiset_extension_step
constr 3899:3906 Make rmv_case
R3853:3860 Coq.Relations.Relation_Definitions <> relation def
R3862:3862 Coccinelle.dickson Make A defax
R3873:3876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3883:3886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3877:3880 Coq.Init.Datatypes <> list ind
R3882:3882 Coccinelle.dickson Make A defax
R3867:3870 Coq.Init.Datatypes <> list ind
R3872:3872 Coccinelle.dickson Make A defax
R3937:3937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3974:3985 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4005:4008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4027:4036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4037:4059 Coccinelle.dickson <> multiset_extension_step ind
R4066:4067 Coccinelle.dickson <> l2 var
R4063:4064 Coccinelle.dickson <> l1 var
R4009:4014 Coccinelle.dickson Make permut syndef
R4021:4024 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4020:4020 Coccinelle.dickson <> a var
R4025:4025 Coccinelle.dickson <> l var
R4016:4017 Coccinelle.dickson <> l2 var
R3986:3991 Coccinelle.dickson Make permut syndef
R3999:4002 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3997:3998 Coccinelle.dickson <> la var
R4003:4003 Coccinelle.dickson <> l var
R3993:3994 Coccinelle.dickson <> l1 var
R3965:3968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3973:3973 Coccinelle.dickson <> a var
R3971:3971 Coccinelle.dickson <> b var
R3948:3950 Coccinelle.more_list <> mem def
R3963:3964 Coccinelle.dickson <> la var
R3961:3961 Coccinelle.dickson <> b var
R3952:3959 Coccinelle.dickson Make eq_A defax
prf 4142:4178 Make list_permut_multiset_extension_step_1
R4214:4220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4251:4254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4255:4277 Coccinelle.dickson Make multiset_extension_step ind
R4284:4284 Coccinelle.dickson <> l var
R4281:4282 Coccinelle.dickson <> l2 var
R4279:4279 Coccinelle.dickson <> R var
R4221:4243 Coccinelle.dickson Make multiset_extension_step ind
R4250:4250 Coccinelle.dickson <> l var
R4247:4248 Coccinelle.dickson <> l1 var
R4245:4245 Coccinelle.dickson <> R var
R4202:4207 Coccinelle.dickson Make permut syndef
R4212:4213 Coccinelle.dickson <> l2 var
R4209:4210 Coccinelle.dickson <> l1 var
R4378:4385 Coccinelle.dickson Make rmv_case constr
R4378:4385 Coccinelle.dickson Make rmv_case constr
R4442:4453 Coccinelle.dickson Make permut_trans defax
R4442:4453 Coccinelle.dickson Make permut_trans defax
R4470:4479 Coccinelle.dickson Make permut_sym defax
R4470:4479 Coccinelle.dickson Make permut_sym defax
prf 4518:4554 Make list_permut_multiset_extension_step_2
R4590:4596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4627:4630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4631:4653 Coccinelle.dickson Make multiset_extension_step ind
R4659:4660 Coccinelle.dickson <> l2 var
R4657:4657 Coccinelle.dickson <> l var
R4655:4655 Coccinelle.dickson <> R var
R4597:4619 Coccinelle.dickson Make multiset_extension_step ind
R4625:4626 Coccinelle.dickson <> l1 var
R4623:4623 Coccinelle.dickson <> l var
R4621:4621 Coccinelle.dickson <> R var
R4578:4583 Coccinelle.dickson Make permut syndef
R4588:4589 Coccinelle.dickson <> l2 var
R4585:4586 Coccinelle.dickson <> l1 var
R4754:4761 Coccinelle.dickson Make rmv_case constr
R4754:4761 Coccinelle.dickson Make rmv_case constr
R4818:4829 Coccinelle.dickson Make permut_trans defax
R4818:4829 Coccinelle.dickson Make permut_trans defax
R4846:4855 Coccinelle.dickson Make permut_sym defax
R4846:4855 Coccinelle.dickson Make permut_sym defax
R4921:4928 Coq.Relations.Relation_Definitions <> relation def
R4930:4930 Coccinelle.dickson Make A defax
R4936:4958 Coccinelle.dickson Make multiset_extension_step ind
R4960:4960 Coccinelle.dickson <> R var
R4987:4991 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4981:4986 Coccinelle.dickson Make permut syndef
R4998:5002 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4992:4997 Coccinelle.dickson Make permut syndef
R5003:5005 Coq.Init.Logic <> iff def
R5098:5134 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5098:5134 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5160:5196 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5160:5196 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5222:5258 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5281:5317 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5222:5258 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5281:5317 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 5503:5511 Make two_cases
R5570:5574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5575:5575 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5653:5659 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5741:5741 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5576:5582 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5585:5586 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5605:5622 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5587:5592 Coccinelle.dickson Make permut syndef
R5598:5601 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5597:5597 Coccinelle.dickson <> a var
R5602:5603 Coccinelle.dickson <> n' var
R5594:5594 Coccinelle.dickson <> n var
R5623:5645 Coccinelle.dickson Make multiset_extension_step ind
R5652:5652 Coccinelle.dickson <> m var
R5649:5650 Coccinelle.dickson <> n' var
R5647:5647 Coccinelle.dickson <> R var
R5660:5666 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5668:5669 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5670:5670 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5706:5723 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5697:5700 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5701:5701 Coccinelle.dickson <> R var
R5705:5705 Coccinelle.dickson <> a var
R5703:5703 Coccinelle.dickson <> b var
R5681:5683 Coccinelle.more_list <> mem def
R5696:5696 Coccinelle.dickson <> k var
R5694:5694 Coccinelle.dickson <> b var
R5685:5692 Coccinelle.dickson Make eq_A defax
R5724:5729 Coccinelle.dickson Make permut syndef
R5735:5738 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5734:5734 Coccinelle.dickson <> k var
R5739:5739 Coccinelle.dickson <> m var
R5731:5731 Coccinelle.dickson <> n var
R5534:5556 Coccinelle.dickson Make multiset_extension_step ind
R5564:5567 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5563:5563 Coccinelle.dickson <> a var
R5568:5568 Coccinelle.dickson <> m var
R5560:5560 Coccinelle.dickson <> n var
R5558:5558 Coccinelle.dickson <> R var
R5826:5835 Coccinelle.dickson Make eq_bool_ok defax
R5849:5859 Coccinelle.dickson DS1 eq_bool defax
R5826:5835 Coccinelle.dickson Make eq_bool_ok defax
R5849:5859 Coccinelle.dickson DS1 eq_bool defax
R5920:5930 Coccinelle.dickson Make permut_cons defax
R5955:5964 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5970:5977 Coccinelle.dickson Make eq_proof defax
R5920:5930 Coccinelle.dickson Make permut_cons defax
R5920:5930 Coccinelle.dickson Make permut_cons defax
R5920:5930 Coccinelle.dickson Make permut_cons defax
R5955:5964 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5970:5977 Coccinelle.dickson Make eq_proof defax
R6043:6046 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6022:6033 Coccinelle.dickson Make permut_trans defax
R6043:6046 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6022:6033 Coccinelle.dickson Make permut_trans defax
R6074:6084 Coccinelle.dickson Make permut_app1 defax
R6074:6084 Coccinelle.dickson Make permut_app1 defax
R6074:6084 Coccinelle.dickson Make permut_app1 defax
R6112:6126 Coccinelle.dickson Make remove_is_sound defax
R6141:6146 Coccinelle.more_list <> remove def
R6150:6156 Coccinelle.dickson Make eq_bool defax
R6148:6148 Coccinelle.dickson Make A defax
R6112:6126 Coccinelle.dickson Make remove_is_sound defax
R6141:6146 Coccinelle.more_list <> remove def
R6150:6156 Coccinelle.dickson Make eq_bool defax
R6148:6148 Coccinelle.dickson Make A defax
R6187:6190 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6187:6190 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6211:6222 Coccinelle.dickson Make permut_trans defax
R6211:6222 Coccinelle.dickson Make permut_trans defax
R6258:6261 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6263:6266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6237:6248 Coccinelle.dickson Make permut_trans defax
R6258:6261 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6263:6266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6237:6248 Coccinelle.dickson Make permut_trans defax
R6280:6284 Coq.Init.Logic <> proj1 thm
R6287:6297 Coccinelle.dickson Make permut_app1 defax
R6280:6284 Coq.Init.Logic <> proj1 thm
R6287:6297 Coccinelle.dickson Make permut_app1 defax
R6316:6325 Coccinelle.dickson Make permut_sym defax
R6316:6325 Coccinelle.dickson Make permut_sym defax
R6338:6348 Coccinelle.dickson Make permut_cons defax
R6356:6359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6338:6348 Coccinelle.dickson Make permut_cons defax
R6356:6359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6338:6348 Coccinelle.dickson Make permut_cons defax
R6356:6359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6338:6348 Coccinelle.dickson Make permut_cons defax
R6356:6359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6394:6397 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6374:6385 Coccinelle.dickson Make permut_trans defax
R6394:6397 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6374:6385 Coccinelle.dickson Make permut_trans defax
R6408:6417 Coccinelle.dickson Make permut_sym defax
R6432:6449 Coccinelle.dickson Make permut_cons_inside defax
R6475:6478 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6479:6481 Coq.Init.Datatypes <> nil constr
R6408:6417 Coccinelle.dickson Make permut_sym defax
R6432:6449 Coccinelle.dickson Make permut_cons_inside defax
R6475:6478 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6479:6481 Coq.Init.Datatypes <> nil constr
R6432:6449 Coccinelle.dickson Make permut_cons_inside defax
R6475:6478 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6479:6481 Coq.Init.Datatypes <> nil constr
R6432:6449 Coccinelle.dickson Make permut_cons_inside defax
R6475:6478 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6479:6481 Coq.Init.Datatypes <> nil constr
R6508:6517 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6523:6530 Coccinelle.dickson Make eq_proof defax
R6508:6517 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6523:6530 Coccinelle.dickson Make eq_proof defax
R6553:6562 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6568:6575 Coccinelle.dickson Make eq_proof defax
R6553:6562 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6568:6575 Coccinelle.dickson Make eq_proof defax
R6585:6594 Coccinelle.dickson Make permut_sym defax
R6609:6626 Coccinelle.dickson Make permut_cons_inside defax
R6651:6654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6585:6594 Coccinelle.dickson Make permut_sym defax
R6609:6626 Coccinelle.dickson Make permut_cons_inside defax
R6651:6654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6609:6626 Coccinelle.dickson Make permut_cons_inside defax
R6651:6654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6609:6626 Coccinelle.dickson Make permut_cons_inside defax
R6651:6654 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6673:6683 Coccinelle.dickson Make permut_refl defax
R6673:6683 Coccinelle.dickson Make permut_refl defax
R6693:6702 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6708:6715 Coccinelle.dickson Make eq_proof defax
R6693:6702 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6708:6715 Coccinelle.dickson Make eq_proof defax
R6726:6733 Coccinelle.dickson Make rmv_case constr
R6742:6745 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6790:6799 Coccinelle.dickson Make permut_sym defax
R6813:6830 Coccinelle.dickson Make permut_cons_inside defax
R6726:6733 Coccinelle.dickson Make rmv_case constr
R6742:6745 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6864:6872 Coq.Init.Logic <> False_rec scheme
R6864:6872 Coq.Init.Logic <> False_rec scheme
R6894:6896 Coccinelle.more_list <> mem def
R6911:6914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6898:6905 Coccinelle.dickson Make eq_A defax
R6894:6896 Coccinelle.more_list <> mem def
R6911:6914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6898:6905 Coccinelle.dickson Make eq_A defax
R6929:6942 Coccinelle.dickson Make mem_permut_mem defax
R6929:6942 Coccinelle.dickson Make mem_permut_mem defax
R6929:6942 Coccinelle.dickson Make mem_permut_mem defax
R6964:6973 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6979:6986 Coccinelle.dickson Make eq_proof defax
R6964:6973 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6979:6986 Coccinelle.dickson Make eq_proof defax
R7069:7074 Coq.Init.Logic <> sym_eq syndef
R7069:7074 Coq.Init.Logic <> sym_eq syndef
prf 7155:7169 Make list_permut_acc
R7203:7209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7244:7247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7248:7250 Coq.Init.Wf <> Acc ind
R7280:7281 Coccinelle.dickson <> l2 var
R7253:7275 Coccinelle.dickson Make multiset_extension_step ind
R7277:7277 Coccinelle.dickson <> R var
R7210:7212 Coq.Init.Wf <> Acc ind
R7242:7243 Coccinelle.dickson <> l1 var
R7215:7237 Coccinelle.dickson Make multiset_extension_step ind
R7239:7239 Coccinelle.dickson <> R var
R7191:7196 Coccinelle.dickson Make permut syndef
R7201:7202 Coccinelle.dickson <> l1 var
R7198:7199 Coccinelle.dickson <> l2 var
R7320:7328 Coq.Init.Wf <> Acc_intro constr
R7320:7328 Coq.Init.Wf <> Acc_intro constr
R7380:7416 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R7380:7416 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
prf 7725:7736 Make dickson_aux1
R7752:7759 Coq.Relations.Relation_Definitions <> relation def
R7761:7761 Coccinelle.dickson Make A defax
R7768:7768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7891:7896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7940:7945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7946:7946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8049:8054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8055:8057 Coq.Init.Wf <> Acc ind
R8089:8092 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8088:8088 Coccinelle.dickson <> a var
R8093:8093 Coccinelle.dickson <> m var
R8060:8082 Coccinelle.dickson Make multiset_extension_step ind
R8084:8084 Coccinelle.dickson <> R var
R7990:8007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8008:8010 Coq.Init.Wf <> Acc ind
R8042:8045 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8041:8041 Coccinelle.dickson <> a var
R8046:8047 Coccinelle.dickson <> m' var
R8013:8035 Coccinelle.dickson Make multiset_extension_step ind
R8037:8037 Coccinelle.dickson <> R var
R7959:7981 Coccinelle.dickson Make multiset_extension_step ind
R7983:7983 Coccinelle.dickson <> R var
R7989:7989 Coccinelle.dickson <> m var
R7986:7987 Coccinelle.dickson <> m' var
R7907:7909 Coq.Init.Wf <> Acc ind
R7939:7939 Coccinelle.dickson <> m var
R7912:7934 Coccinelle.dickson Make multiset_extension_step ind
R7936:7936 Coccinelle.dickson <> R var
R7784:7790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7834:7850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7851:7853 Coq.Init.Wf <> Acc ind
R7885:7888 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7884:7884 Coccinelle.dickson <> b var
R7889:7889 Coccinelle.dickson <> m var
R7856:7878 Coccinelle.dickson Make multiset_extension_step ind
R7880:7880 Coccinelle.dickson <> R var
R7801:7803 Coq.Init.Wf <> Acc ind
R7833:7833 Coccinelle.dickson <> m var
R7806:7828 Coccinelle.dickson Make multiset_extension_step ind
R7830:7830 Coccinelle.dickson <> R var
R7779:7779 Coccinelle.dickson <> R var
R7783:7783 Coccinelle.dickson <> a var
R7781:7781 Coccinelle.dickson <> b var
R8143:8151 Coq.Init.Wf <> Acc_intro constr
R8172:8180 Coccinelle.dickson Make two_cases thm
R8143:8151 Coq.Init.Wf <> Acc_intro constr
R8172:8180 Coccinelle.dickson Make two_cases thm
R8222:8236 Coccinelle.dickson Make list_permut_acc thm
R8222:8236 Coccinelle.dickson Make list_permut_acc thm
R8292:8306 Coccinelle.dickson Make list_permut_acc thm
R8292:8306 Coccinelle.dickson Make list_permut_acc thm
R8387:8396 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8402:8409 Coccinelle.dickson Make eq_proof defax
R8387:8396 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8402:8409 Coccinelle.dickson Make eq_proof defax
prf 8473:8484 Make dickson_aux2
R8535:8540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8551:8551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8696:8703 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8704:8706 Coq.Init.Wf <> Acc ind
R8738:8741 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8737:8737 Coccinelle.dickson <> a var
R8742:8742 Coccinelle.dickson <> m var
R8709:8731 Coccinelle.dickson Make multiset_extension_step ind
R8733:8733 Coccinelle.dickson <> R var
R8567:8584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8628:8655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8656:8658 Coq.Init.Wf <> Acc ind
R8690:8693 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8689:8689 Coccinelle.dickson <> b var
R8694:8694 Coccinelle.dickson <> m var
R8661:8683 Coccinelle.dickson Make multiset_extension_step ind
R8685:8685 Coccinelle.dickson <> R var
R8595:8597 Coq.Init.Wf <> Acc ind
R8627:8627 Coccinelle.dickson <> m var
R8600:8622 Coccinelle.dickson Make multiset_extension_step ind
R8624:8624 Coccinelle.dickson <> R var
R8562:8562 Coccinelle.dickson <> R var
R8566:8566 Coccinelle.dickson <> a var
R8564:8564 Coccinelle.dickson <> b var
R8502:8504 Coq.Init.Wf <> Acc ind
R8534:8534 Coccinelle.dickson <> m var
R8507:8529 Coccinelle.dickson Make multiset_extension_step ind
R8531:8531 Coccinelle.dickson <> R var
R8787:8794 Coq.Init.Wf <> Acc_iter syndef
R8872:8876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8877:8879 Coq.Init.Wf <> Acc ind
R8911:8914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8915:8915 Coccinelle.dickson <> m var
R8882:8904 Coccinelle.dickson Make multiset_extension_step ind
R8839:8841 Coq.Init.Wf <> Acc ind
R8871:8871 Coccinelle.dickson <> m var
R8844:8866 Coccinelle.dickson Make multiset_extension_step ind
R8802:8824 Coccinelle.dickson Make multiset_extension_step ind
R8969:8980 Coccinelle.dickson Make dickson_aux1 thm
R9024:9030 Coq.Init.Wf <> Acc_inv thm
R8787:8794 Coq.Init.Wf <> Acc_iter syndef
R8872:8876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8877:8879 Coq.Init.Wf <> Acc ind
R8911:8914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8915:8915 Coccinelle.dickson <> m var
R8882:8904 Coccinelle.dickson Make multiset_extension_step ind
R8839:8841 Coq.Init.Wf <> Acc ind
R8871:8871 Coccinelle.dickson <> m var
R8844:8866 Coccinelle.dickson Make multiset_extension_step ind
R8802:8824 Coccinelle.dickson Make multiset_extension_step ind
R8969:8980 Coccinelle.dickson Make dickson_aux1 thm
R9024:9030 Coq.Init.Wf <> Acc_inv thm
prf 9065:9076 Make dickson_aux3
R9099:9102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9146:9149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9150:9152 Coq.Init.Wf <> Acc ind
R9184:9187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9183:9183 Coccinelle.dickson <> a var
R9188:9188 Coccinelle.dickson <> m var
R9155:9177 Coccinelle.dickson Make multiset_extension_step ind
R9179:9179 Coccinelle.dickson <> R var
R9113:9115 Coq.Init.Wf <> Acc ind
R9145:9145 Coccinelle.dickson <> m var
R9118:9140 Coccinelle.dickson Make multiset_extension_step ind
R9142:9142 Coccinelle.dickson <> R var
R9092:9094 Coq.Init.Wf <> Acc ind
R9098:9098 Coccinelle.dickson <> a var
R9096:9096 Coccinelle.dickson <> R var
R9224:9231 Coq.Init.Wf <> Acc_iter syndef
R9259:9262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9306:9310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9311:9313 Coq.Init.Wf <> Acc ind
R9345:9348 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9344:9344 Coccinelle.dickson <> a var
R9349:9349 Coccinelle.dickson <> m var
R9316:9338 Coccinelle.dickson Make multiset_extension_step ind
R9273:9275 Coq.Init.Wf <> Acc ind
R9305:9305 Coccinelle.dickson <> m var
R9278:9300 Coccinelle.dickson Make multiset_extension_step ind
R9252:9254 Coq.Init.Wf <> Acc ind
R9258:9258 Coccinelle.dickson <> a var
R9411:9422 Coccinelle.dickson Make dickson_aux2 thm
R9466:9472 Coq.Init.Wf <> Acc_inv thm
R9224:9231 Coq.Init.Wf <> Acc_iter syndef
R9259:9262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9306:9310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9311:9313 Coq.Init.Wf <> Acc ind
R9345:9348 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9344:9344 Coccinelle.dickson <> a var
R9349:9349 Coccinelle.dickson <> m var
R9316:9338 Coccinelle.dickson Make multiset_extension_step ind
R9273:9275 Coq.Init.Wf <> Acc ind
R9305:9305 Coccinelle.dickson <> m var
R9278:9300 Coccinelle.dickson Make multiset_extension_step ind
R9252:9254 Coq.Init.Wf <> Acc ind
R9258:9258 Coccinelle.dickson <> a var
R9411:9422 Coccinelle.dickson Make dickson_aux2 thm
R9466:9472 Coq.Init.Wf <> Acc_inv thm
prf 9526:9532 Make dickson
R9563:9566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9567:9578 Coq.Init.Wf <> well_founded def
R9581:9603 Coccinelle.dickson Make multiset_extension_step ind
R9605:9605 Coccinelle.dickson <> R var
R9549:9560 Coq.Init.Wf <> well_founded def
R9562:9562 Coccinelle.dickson <> R var
R9638:9649 Coq.Init.Wf <> well_founded def
R9698:9706 Coq.Init.Wf <> Acc_intro constr
R9754:9756 Coq.Init.Logic <> :type_scope:x_'='_x not
R9749:9752 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9757:9759 Coq.Init.Datatypes <> nil constr
R9698:9706 Coq.Init.Wf <> Acc_intro constr
R9754:9756 Coq.Init.Logic <> :type_scope:x_'='_x not
R9749:9752 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9757:9759 Coq.Init.Datatypes <> nil constr
R9784:9793 Coccinelle.list_permut <> permut_nil thm
R9801:9804 Coccinelle.dickson Make eq_A defax
R9784:9793 Coccinelle.list_permut <> permut_nil thm
R9801:9804 Coccinelle.dickson Make eq_A defax
R9815:9824 Coccinelle.dickson Make permut_sym defax
R9815:9824 Coccinelle.dickson Make permut_sym defax
R9842:9853 Coccinelle.dickson Make dickson_aux3 thm
R9842:9853 Coccinelle.dickson Make dickson_aux3 thm
prf 9881:9894 Make dickson_strong
R9913:9913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9941:9945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9946:9948 Coq.Init.Wf <> Acc ind
R9978:9978 Coccinelle.dickson <> l var
R9951:9973 Coccinelle.dickson Make multiset_extension_step ind
R9975:9975 Coccinelle.dickson <> R var
R9930:9933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9934:9936 Coq.Init.Wf <> Acc ind
R9940:9940 Coccinelle.dickson <> a var
R9938:9938 Coccinelle.dickson <> R var
R9924:9925 Coq.Lists.List <> In def
R9929:9929 Coccinelle.dickson <> l var
R9927:9927 Coccinelle.dickson <> a var
R10041:10049 Coq.Init.Wf <> Acc_intro constr
R10097:10099 Coq.Init.Logic <> :type_scope:x_'='_x not
R10092:10095 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10100:10102 Coq.Init.Datatypes <> nil constr
R10041:10049 Coq.Init.Wf <> Acc_intro constr
R10097:10099 Coq.Init.Logic <> :type_scope:x_'='_x not
R10092:10095 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10100:10102 Coq.Init.Datatypes <> nil constr
R10127:10136 Coccinelle.list_permut <> permut_nil thm
R10144:10147 Coccinelle.dickson Make eq_A defax
R10127:10136 Coccinelle.list_permut <> permut_nil thm
R10144:10147 Coccinelle.dickson Make eq_A defax
R10158:10167 Coccinelle.dickson Make permut_sym defax
R10158:10167 Coccinelle.dickson Make permut_sym defax
R10193:10204 Coccinelle.dickson Make dickson_aux3 thm
R10193:10204 Coccinelle.dickson Make dickson_aux3 thm
prf 10346:10393 Make list_permut_trans_clos_multiset_extension_step_1
R10429:10435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10481:10487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10489:10498 Coccinelle.TransClosure <> trans_clos ind
R10501:10523 Coccinelle.dickson Make multiset_extension_step ind
R10525:10525 Coccinelle.dickson <> R var
R10532:10532 Coccinelle.dickson <> l var
R10529:10530 Coccinelle.dickson <> l2 var
R10437:10446 Coccinelle.TransClosure <> trans_clos ind
R10449:10471 Coccinelle.dickson Make multiset_extension_step ind
R10473:10473 Coccinelle.dickson <> R var
R10480:10480 Coccinelle.dickson <> l var
R10477:10478 Coccinelle.dickson <> l1 var
R10417:10422 Coccinelle.dickson Make permut syndef
R10427:10428 Coccinelle.dickson <> l2 var
R10424:10425 Coccinelle.dickson <> l1 var
R10618:10623 Coccinelle.TransClosure <> t_step constr
R10632:10668 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10618:10623 Coccinelle.TransClosure <> t_step constr
R10632:10668 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10694:10700 Coccinelle.TransClosure <> t_trans constr
R10726:10762 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10694:10700 Coccinelle.TransClosure <> t_trans constr
R10726:10762 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 10794:10841 Make list_permut_trans_clos_multiset_extension_step_2
R10877:10883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10929:10935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10937:10946 Coccinelle.TransClosure <> trans_clos ind
R10949:10971 Coccinelle.dickson Make multiset_extension_step ind
R10973:10973 Coccinelle.dickson <> R var
R10979:10980 Coccinelle.dickson <> l2 var
R10977:10977 Coccinelle.dickson <> l var
R10885:10894 Coccinelle.TransClosure <> trans_clos ind
R10897:10919 Coccinelle.dickson Make multiset_extension_step ind
R10921:10921 Coccinelle.dickson <> R var
R10927:10928 Coccinelle.dickson <> l1 var
R10925:10925 Coccinelle.dickson <> l var
R10865:10870 Coccinelle.dickson Make permut syndef
R10875:10876 Coccinelle.dickson <> l2 var
R10872:10873 Coccinelle.dickson <> l1 var
R11066:11071 Coccinelle.TransClosure <> t_step constr
R11080:11116 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11066:11071 Coccinelle.TransClosure <> t_step constr
R11080:11116 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11142:11148 Coccinelle.TransClosure <> t_trans constr
R11142:11148 Coccinelle.TransClosure <> t_trans constr
prf 11199:11234 Make context_multiset_extension_step_app1
R11289:11317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11318:11340 Coccinelle.dickson Make multiset_extension_step ind
R11356:11359 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11355:11355 Coccinelle.dickson <> l var
R11360:11361 Coccinelle.dickson <> l2 var
R11346:11349 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11345:11345 Coccinelle.dickson <> l var
R11350:11351 Coccinelle.dickson <> l1 var
R11342:11342 Coccinelle.dickson <> R var
R11258:11280 Coccinelle.dickson Make multiset_extension_step ind
R11287:11288 Coccinelle.dickson <> l2 var
R11284:11285 Coccinelle.dickson <> l1 var
R11282:11282 Coccinelle.dickson <> R var
R11440:11447 Coccinelle.dickson Make rmv_case constr
R11469:11470 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11461:11462 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11453:11454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11440:11447 Coccinelle.dickson Make rmv_case constr
R11469:11470 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11461:11462 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11453:11454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11518:11521 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11524:11527 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11498:11509 Coccinelle.dickson Make permut_trans defax
R11518:11521 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11524:11527 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11498:11509 Coccinelle.dickson Make permut_trans defax
R11545:11555 Coccinelle.dickson Make permut_app1 defax
R11545:11555 Coccinelle.dickson Make permut_app1 defax
R11545:11555 Coccinelle.dickson Make permut_app1 defax
R11583:11589 Coq.Lists.List <> app_ass syndef
R11603:11613 Coccinelle.dickson Make permut_app2 defax
R11583:11589 Coq.Lists.List <> app_ass syndef
R11583:11589 Coq.Lists.List <> app_ass syndef
R11583:11589 Coq.Lists.List <> app_ass syndef
R11583:11589 Coq.Lists.List <> app_ass syndef
R11603:11613 Coccinelle.dickson Make permut_app2 defax
R11603:11613 Coccinelle.dickson Make permut_app2 defax
R11631:11649 Coccinelle.dickson Make list_permut_app_app defax
R11631:11649 Coccinelle.dickson Make list_permut_app_app defax
R11678:11681 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11683:11686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11658:11669 Coccinelle.dickson Make permut_trans defax
R11678:11681 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R11683:11686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11658:11669 Coccinelle.dickson Make permut_trans defax
R11704:11714 Coccinelle.dickson Make permut_app1 defax
R11704:11714 Coccinelle.dickson Make permut_app1 defax
R11704:11714 Coccinelle.dickson Make permut_app1 defax
R11732:11741 Coccinelle.dickson Make permut_sym defax
R11755:11772 Coccinelle.dickson Make permut_cons_inside defax
R11732:11741 Coccinelle.dickson Make permut_sym defax
R11755:11772 Coccinelle.dickson Make permut_cons_inside defax
R11755:11772 Coccinelle.dickson Make permut_cons_inside defax
R11755:11772 Coccinelle.dickson Make permut_cons_inside defax
R11781:11791 Coccinelle.dickson Make permut_refl defax
R11781:11791 Coccinelle.dickson Make permut_refl defax
R11801:11810 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11816:11823 Coccinelle.dickson Make eq_proof defax
R11801:11810 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11816:11823 Coccinelle.dickson Make eq_proof defax
prf 11839:11885 Make context_trans_clos_multiset_extension_step_app1
R11953:11981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11982:11991 Coccinelle.TransClosure <> trans_clos ind
R12033:12036 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12032:12032 Coccinelle.dickson <> l var
R12037:12038 Coccinelle.dickson <> l2 var
R12023:12026 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12022:12022 Coccinelle.dickson <> l var
R12027:12028 Coccinelle.dickson <> l1 var
R11994:12016 Coccinelle.dickson Make multiset_extension_step ind
R12018:12018 Coccinelle.dickson <> R var
R11909:11918 Coccinelle.TransClosure <> trans_clos ind
R11951:11952 Coccinelle.dickson <> l2 var
R11948:11949 Coccinelle.dickson <> l1 var
R11921:11943 Coccinelle.dickson Make multiset_extension_step ind
R11945:11945 Coccinelle.dickson <> R var
R12088:12093 Coccinelle.TransClosure <> t_step constr
R12102:12137 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12088:12093 Coccinelle.TransClosure <> t_step constr
R12102:12137 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12170:12173 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12155:12161 Coccinelle.TransClosure <> t_trans constr
R12170:12173 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12155:12161 Coccinelle.TransClosure <> t_trans constr
R12193:12228 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12193:12228 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
prf 12252:12287 Make context_multiset_extension_step_cons
R12303:12303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12320:12327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12389:12417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12418:12440 Coccinelle.dickson Make multiset_extension_step ind
R12447:12448 Coccinelle.dickson <> l2 var
R12444:12445 Coccinelle.dickson <> l1 var
R12442:12442 Coccinelle.dickson <> R var
R12344:12366 Coccinelle.dickson Make multiset_extension_step ind
R12382:12385 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12381:12381 Coccinelle.dickson <> a var
R12386:12387 Coccinelle.dickson <> l2 var
R12372:12375 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12371:12371 Coccinelle.dickson <> a var
R12376:12377 Coccinelle.dickson <> l1 var
R12368:12368 Coccinelle.dickson <> R var
R12314:12314 Coq.Init.Logic <> :type_scope:'~'_x not
R12315:12315 Coccinelle.dickson <> R var
R12319:12319 Coccinelle.dickson <> a var
R12317:12317 Coccinelle.dickson <> a var
R12565:12567 Coccinelle.more_list <> mem def
R12582:12585 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12569:12576 Coccinelle.dickson Make eq_A defax
R12565:12567 Coccinelle.more_list <> mem def
R12582:12585 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12569:12576 Coccinelle.dickson Make eq_A defax
R12598:12612 Coccinelle.dickson Make cons_permut_mem defax
R12598:12612 Coccinelle.dickson Make cons_permut_mem defax
R12641:12650 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12656:12663 Coccinelle.dickson Make eq_proof defax
R12641:12650 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12656:12663 Coccinelle.dickson Make eq_proof defax
R12779:12781 Coccinelle.more_list <> mem def
R12797:12800 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12783:12790 Coccinelle.dickson Make eq_A defax
R12779:12781 Coccinelle.more_list <> mem def
R12797:12800 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R12783:12790 Coccinelle.dickson Make eq_A defax
R12813:12827 Coccinelle.dickson Make cons_permut_mem defax
R12813:12827 Coccinelle.dickson Make cons_permut_mem defax
R12856:12865 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12871:12878 Coccinelle.dickson Make eq_proof defax
R12856:12865 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12871:12878 Coccinelle.dickson Make eq_proof defax
R12893:12902 Coccinelle.more_list <> mem_or_app thm
R12893:12902 Coccinelle.more_list <> mem_or_app thm
R12893:12902 Coccinelle.more_list <> mem_or_app thm
R13037:13049 Coccinelle.more_list <> mem_split_set thm
R13055:13064 Coccinelle.dickson Make eq_bool_ok defax
R13037:13049 Coccinelle.more_list <> mem_split_set thm
R13055:13064 Coccinelle.dickson Make eq_bool_ok defax
R13166:13173 Coccinelle.dickson Make rmv_case constr
R13203:13206 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13166:13173 Coccinelle.dickson Make rmv_case constr
R13203:13206 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13245:13251 Coq.Lists.List <> app_ass syndef
R13272:13289 Coccinelle.dickson Make permut_cons_inside defax
R13245:13251 Coq.Lists.List <> app_ass syndef
R13245:13251 Coq.Lists.List <> app_ass syndef
R13272:13289 Coccinelle.dickson Make permut_cons_inside defax
R13272:13289 Coccinelle.dickson Make permut_cons_inside defax
R13272:13289 Coccinelle.dickson Make permut_cons_inside defax
R13310:13316 Coq.Lists.List <> ass_app syndef
R13310:13316 Coq.Lists.List <> ass_app syndef
R13310:13316 Coq.Lists.List <> ass_app syndef
R13341:13350 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13356:13363 Coccinelle.dickson Make eq_proof defax
R13341:13350 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13356:13363 Coccinelle.dickson Make eq_proof defax
R13375:13387 Coq.Lists.List <> app_comm_cons thm
R13408:13425 Coccinelle.dickson Make permut_cons_inside defax
R13375:13387 Coq.Lists.List <> app_comm_cons thm
R13375:13387 Coq.Lists.List <> app_comm_cons thm
R13408:13425 Coccinelle.dickson Make permut_cons_inside defax
R13408:13425 Coccinelle.dickson Make permut_cons_inside defax
R13408:13425 Coccinelle.dickson Make permut_cons_inside defax
R13451:13460 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13466:13473 Coccinelle.dickson Make eq_proof defax
R13451:13460 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13466:13473 Coccinelle.dickson Make eq_proof defax
R13490:13502 Coccinelle.more_list <> mem_split_set thm
R13508:13517 Coccinelle.dickson Make eq_bool_ok defax
R13490:13502 Coccinelle.more_list <> mem_split_set thm
R13508:13517 Coccinelle.dickson Make eq_bool_ok defax
R13619:13626 Coccinelle.dickson Make rmv_case constr
R13656:13659 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13619:13626 Coccinelle.dickson Make rmv_case constr
R13656:13659 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R13698:13704 Coq.Lists.List <> app_ass syndef
R13725:13742 Coccinelle.dickson Make permut_cons_inside defax
R13698:13704 Coq.Lists.List <> app_ass syndef
R13698:13704 Coq.Lists.List <> app_ass syndef
R13725:13742 Coccinelle.dickson Make permut_cons_inside defax
R13725:13742 Coccinelle.dickson Make permut_cons_inside defax
R13725:13742 Coccinelle.dickson Make permut_cons_inside defax
R13763:13769 Coq.Lists.List <> ass_app syndef
R13763:13769 Coq.Lists.List <> ass_app syndef
R13763:13769 Coq.Lists.List <> ass_app syndef
R13794:13803 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13809:13816 Coccinelle.dickson Make eq_proof defax
R13794:13803 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13809:13816 Coccinelle.dickson Make eq_proof defax
R13828:13840 Coq.Lists.List <> app_comm_cons thm
R13861:13878 Coccinelle.dickson Make permut_cons_inside defax
R13828:13840 Coq.Lists.List <> app_comm_cons thm
R13828:13840 Coq.Lists.List <> app_comm_cons thm
R13861:13878 Coccinelle.dickson Make permut_cons_inside defax
R13861:13878 Coccinelle.dickson Make permut_cons_inside defax
R13861:13878 Coccinelle.dickson Make permut_cons_inside defax
R13918:13927 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13933:13940 Coccinelle.dickson Make eq_proof defax
R13918:13927 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13933:13940 Coccinelle.dickson Make eq_proof defax
prf 13956:13998 Make remove_context_multiset_extension_step_app1
R14015:14015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14032:14039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14101:14129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14130:14152 Coccinelle.dickson Make multiset_extension_step ind
R14159:14160 Coccinelle.dickson <> l2 var
R14156:14157 Coccinelle.dickson <> l1 var
R14154:14154 Coccinelle.dickson <> R var
R14056:14078 Coccinelle.dickson Make multiset_extension_step ind
R14094:14097 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14093:14093 Coccinelle.dickson <> l var
R14098:14099 Coccinelle.dickson <> l2 var
R14084:14087 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14083:14083 Coccinelle.dickson <> l var
R14088:14089 Coccinelle.dickson <> l1 var
R14080:14080 Coccinelle.dickson <> R var
R14026:14026 Coq.Init.Logic <> :type_scope:'~'_x not
R14027:14027 Coccinelle.dickson <> R var
R14031:14031 Coccinelle.dickson <> a var
R14029:14029 Coccinelle.dickson <> a var
R14293:14315 Coccinelle.dickson Make multiset_extension_step ind
R14331:14334 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14321:14324 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14293:14315 Coccinelle.dickson Make multiset_extension_step ind
R14331:14334 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14321:14324 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14402:14402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14409:14413 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14404:14407 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14358:14394 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14402:14402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14409:14413 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14404:14407 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14358:14394 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14437:14454 Coccinelle.dickson Make permut_cons_inside defax
R14437:14454 Coccinelle.dickson Make permut_cons_inside defax
R14437:14454 Coccinelle.dickson Make permut_cons_inside defax
R14437:14454 Coccinelle.dickson Make permut_cons_inside defax
R14470:14479 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14485:14492 Coccinelle.dickson Make eq_proof defax
R14470:14479 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14485:14492 Coccinelle.dickson Make eq_proof defax
R14546:14546 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14553:14557 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14548:14551 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14502:14538 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14546:14546 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14553:14557 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14548:14551 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14502:14538 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14590:14607 Coccinelle.dickson Make permut_cons_inside defax
R14590:14607 Coccinelle.dickson Make permut_cons_inside defax
R14590:14607 Coccinelle.dickson Make permut_cons_inside defax
R14590:14607 Coccinelle.dickson Make permut_cons_inside defax
R14623:14632 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14638:14645 Coccinelle.dickson Make eq_proof defax
R14623:14632 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14638:14645 Coccinelle.dickson Make eq_proof defax
R14655:14690 Coccinelle.dickson Make context_multiset_extension_step_cons thm
R14655:14690 Coccinelle.dickson Make context_multiset_extension_step_cons thm
prf 14721:14756 Make context_multiset_extension_step_app2
R14811:14839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14840:14862 Coccinelle.dickson Make multiset_extension_step ind
R14879:14882 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14877:14878 Coccinelle.dickson <> l2 var
R14883:14883 Coccinelle.dickson <> l var
R14869:14872 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14867:14868 Coccinelle.dickson <> l1 var
R14873:14873 Coccinelle.dickson <> l var
R14864:14864 Coccinelle.dickson <> R var
R14780:14802 Coccinelle.dickson Make multiset_extension_step ind
R14809:14810 Coccinelle.dickson <> l2 var
R14806:14807 Coccinelle.dickson <> l1 var
R14804:14804 Coccinelle.dickson <> R var
R14962:14969 Coccinelle.dickson Make rmv_case constr
R14993:14994 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14984:14985 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14976:14977 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14962:14969 Coccinelle.dickson Make rmv_case constr
R14993:14994 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14984:14985 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14976:14977 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15025:15031 Coq.Lists.List <> app_ass syndef
R15045:15055 Coccinelle.dickson Make permut_app2 defax
R15025:15031 Coq.Lists.List <> app_ass syndef
R15025:15031 Coq.Lists.List <> app_ass syndef
R15045:15055 Coccinelle.dickson Make permut_app2 defax
R15045:15055 Coccinelle.dickson Make permut_app2 defax
R15075:15087 Coq.Lists.List <> app_comm_cons thm
R15101:15111 Coccinelle.dickson Make permut_app2 defax
R15075:15087 Coq.Lists.List <> app_comm_cons thm
R15075:15087 Coq.Lists.List <> app_comm_cons thm
R15101:15111 Coccinelle.dickson Make permut_app2 defax
R15101:15111 Coccinelle.dickson Make permut_app2 defax
R15150:15153 Coq.Init.Datatypes <> list ind
R15157:15159 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15156:15156 Coccinelle.dickson Make A defax
R15160:15163 Coq.Init.Datatypes <> list ind
R15165:15165 Coccinelle.dickson Make A defax
R15171:15174 Coq.Init.Datatypes <> list ind
R15176:15176 Coccinelle.dickson Make A defax
R15189:15190 Coccinelle.dickson <> ll var
R15202:15204 Coq.Init.Datatypes <> nil constr
R15209:15211 Coq.Init.Datatypes <> nil constr
R15222:15225 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15217:15217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15219:15219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15221:15221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15233:15236 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15245:15245 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15237:15241 Coccinelle.dickson <> consn def
R15243:15244 Coccinelle.dickson <> ll var
R15189:15190 Coccinelle.dickson <> ll var
R15202:15204 Coq.Init.Datatypes <> nil constr
R15209:15211 Coq.Init.Datatypes <> nil constr
R15222:15225 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15217:15217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15219:15219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15221:15221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15233:15236 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15245:15245 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15237:15241 Coccinelle.dickson <> consn def
R15243:15244 Coccinelle.dickson <> ll var
R15189:15190 Coccinelle.dickson <> ll var
R15202:15204 Coq.Init.Datatypes <> nil constr
R15209:15211 Coq.Init.Datatypes <> nil constr
R15222:15225 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15217:15217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15219:15219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15221:15221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15233:15236 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15245:15245 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15237:15241 Coccinelle.dickson <> consn def
R15243:15244 Coccinelle.dickson <> ll var
prf 15261:15269 Make mem_consn
R15314:15318 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15289:15291 Coccinelle.more_list <> mem def
R15305:15309 Coccinelle.dickson Make consn def
R15311:15312 Coccinelle.dickson <> ll var
R15302:15302 Coccinelle.dickson <> a var
R15293:15300 Coccinelle.dickson Make eq_A defax
R15319:15325 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15328:15329 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15330:15331 Coq.Lists.List <> In def
R15340:15341 Coccinelle.dickson <> ll var
R15333:15333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15335:15335 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15338:15338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15334:15334 Coccinelle.dickson <> a var
R15336:15337 Coccinelle.dickson <> la var
R15402:15406 Coccinelle.dickson Make consn def
R15402:15406 Coccinelle.dickson Make consn def
R15402:15406 Coccinelle.dickson Make consn def
R15740:15749 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15755:15762 Coccinelle.dickson Make eq_proof defax
R15740:15749 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15755:15762 Coccinelle.dickson Make eq_proof defax
prf 15824:15832 Make consn_app
R15871:15873 Coq.Init.Logic <> :type_scope:x_'='_x not
R15853:15857 Coccinelle.dickson Make consn def
R15863:15866 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15860:15862 Coccinelle.dickson <> ll1 var
R15867:15869 Coccinelle.dickson <> ll2 var
R15883:15886 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15874:15878 Coccinelle.dickson Make consn def
R15880:15882 Coccinelle.dickson <> ll1 var
R15887:15891 Coccinelle.dickson Make consn def
R15893:15895 Coccinelle.dickson <> ll2 var
R16036:16039 Coq.Init.Datatypes <> list ind
R16043:16045 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R16042:16042 Coccinelle.dickson Make A defax
R16046:16049 Coq.Init.Datatypes <> list ind
R16051:16051 Coccinelle.dickson Make A defax
R16057:16060 Coq.Init.Datatypes <> list ind
R16062:16062 Coccinelle.dickson Make A defax
R16075:16076 Coccinelle.dickson <> ll var
R16088:16090 Coq.Init.Datatypes <> nil constr
R16095:16097 Coq.Init.Datatypes <> nil constr
R16108:16111 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16103:16103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16105:16105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16107:16107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16119:16123 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16134:16134 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16124:16130 Coccinelle.dickson <> appendn def
R16132:16133 Coccinelle.dickson <> ll var
R16075:16076 Coccinelle.dickson <> ll var
R16088:16090 Coq.Init.Datatypes <> nil constr
R16095:16097 Coq.Init.Datatypes <> nil constr
R16108:16111 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16103:16103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16105:16105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16107:16107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16119:16123 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16134:16134 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16124:16130 Coccinelle.dickson <> appendn def
R16132:16133 Coccinelle.dickson <> ll var
R16075:16076 Coccinelle.dickson <> ll var
R16088:16090 Coq.Init.Datatypes <> nil constr
R16095:16097 Coq.Init.Datatypes <> nil constr
R16108:16111 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16103:16103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16105:16105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16107:16107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16119:16123 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16134:16134 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16124:16130 Coccinelle.dickson <> appendn def
R16132:16133 Coccinelle.dickson <> ll var
prf 16150:16160 Make appendn_app
R16201:16203 Coq.Init.Logic <> :type_scope:x_'='_x not
R16181:16187 Coccinelle.dickson Make appendn def
R16193:16196 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16190:16192 Coccinelle.dickson <> ll1 var
R16197:16199 Coccinelle.dickson <> ll2 var
R16215:16218 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16204:16210 Coccinelle.dickson Make appendn def
R16212:16214 Coccinelle.dickson <> ll1 var
R16219:16225 Coccinelle.dickson Make appendn def
R16227:16229 Coccinelle.dickson <> ll2 var
R16340:16346 Coq.Lists.List <> ass_app syndef
R16340:16346 Coq.Lists.List <> ass_app syndef
R16340:16346 Coq.Lists.List <> ass_app syndef
prf 16370:16379 Make in_appendn
R16426:16429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16430:16436 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16438:16439 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16440:16446 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16449:16450 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16463:16466 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16451:16452 Coq.Lists.List <> In def
R16461:16462 Coccinelle.dickson <> ll var
R16454:16454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16456:16456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16459:16459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16455:16455 Coccinelle.dickson <> b var
R16457:16458 Coccinelle.dickson <> lb var
R16467:16469 Coccinelle.more_list <> mem def
R16482:16483 Coccinelle.dickson <> lb var
R16480:16480 Coccinelle.dickson <> a var
R16471:16478 Coccinelle.dickson Make eq_A defax
R16399:16401 Coccinelle.more_list <> mem def
R16415:16421 Coccinelle.dickson Make appendn def
R16423:16424 Coccinelle.dickson <> ll var
R16412:16412 Coccinelle.dickson <> a var
R16403:16410 Coccinelle.dickson Make eq_A defax
R16531:16537 Coccinelle.dickson Make appendn def
R16531:16537 Coccinelle.dickson Make appendn def
R16599:16608 Coccinelle.more_list <> mem_or_app thm
R16599:16608 Coccinelle.more_list <> mem_or_app thm
R16599:16608 Coccinelle.more_list <> mem_or_app thm
prf 16819:16838 Make multiset_closure_aux
R16856:16863 Coq.Relations.Relation_Definitions <> relation def
R16865:16865 Coccinelle.dickson Make A defax
R16909:16914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16941:16946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16955:16960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16961:16961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17034:17040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17041:17050 Coccinelle.TransClosure <> trans_clos ind
R17082:17082 Coccinelle.dickson <> q var
R17080:17080 Coccinelle.dickson <> p var
R17053:17075 Coccinelle.dickson Make multiset_extension_step ind
R17077:17077 Coccinelle.dickson <> R var
R16994:16997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17025:17028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17029:17029 Coccinelle.dickson <> R var
R17033:17033 Coccinelle.dickson <> a var
R17031:17031 Coccinelle.dickson <> b var
R17008:17010 Coccinelle.more_list <> mem def
R17023:17024 Coccinelle.dickson <> la var
R17021:17021 Coccinelle.dickson <> b var
R17012:17019 Coccinelle.dickson Make eq_A defax
R16983:16984 Coq.Lists.List <> In def
R16993:16993 Coccinelle.dickson <> l var
R16986:16986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16988:16988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16991:16991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16987:16987 Coccinelle.dickson <> a var
R16989:16990 Coccinelle.dickson <> la var
R16948:16951 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16947:16947 Coccinelle.dickson <> l var
R16952:16954 Coq.Init.Datatypes <> nil constr
R16915:16920 Coccinelle.dickson Make permut syndef
R16925:16925 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16933:16937 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16926:16930 Coccinelle.dickson Make consn def
R16932:16932 Coccinelle.dickson <> l var
R16938:16939 Coccinelle.dickson <> pq var
R16922:16922 Coccinelle.dickson <> q var
R16881:16886 Coccinelle.dickson Make permut syndef
R16891:16891 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16901:16905 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R16892:16898 Coccinelle.dickson Make appendn def
R16900:16900 Coccinelle.dickson <> l var
R16906:16907 Coccinelle.dickson <> pq var
R16888:16888 Coccinelle.dickson <> p var
R17220:17222 Coq.Init.Logic <> :type_scope:x_'='_x not
R17204:17206 Coq.Init.Datatypes <> nil constr
R17210:17212 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R17209:17209 Coccinelle.dickson Make A defax
R17213:17216 Coq.Init.Datatypes <> list ind
R17218:17218 Coccinelle.dickson Make A defax
R17223:17225 Coq.Init.Datatypes <> nil constr
R17220:17222 Coq.Init.Logic <> :type_scope:x_'='_x not
R17204:17206 Coq.Init.Datatypes <> nil constr
R17210:17212 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R17209:17209 Coccinelle.dickson Make A defax
R17213:17216 Coq.Init.Datatypes <> list ind
R17218:17218 Coccinelle.dickson Make A defax
R17223:17225 Coq.Init.Datatypes <> nil constr
R17315:17318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17321:17321 Coccinelle.dickson <> b var
R17298:17300 Coccinelle.more_list <> mem def
R17311:17311 Coccinelle.dickson <> b var
R17302:17309 Coccinelle.dickson Make eq_A defax
R17315:17318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17321:17321 Coccinelle.dickson <> b var
R17298:17300 Coccinelle.more_list <> mem def
R17311:17311 Coccinelle.dickson <> b var
R17302:17309 Coccinelle.dickson Make eq_A defax
R17403:17413 Coq.Lists.List <> app_nil_end thm
R17403:17413 Coq.Lists.List <> app_nil_end thm
R17403:17413 Coq.Lists.List <> app_nil_end thm
R17441:17446 Coccinelle.TransClosure <> t_step constr
R17441:17446 Coccinelle.TransClosure <> t_step constr
R17457:17464 Coccinelle.dickson Make rmv_case constr
R17457:17464 Coccinelle.dickson Make rmv_case constr
R17508:17511 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17514:17517 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17518:17518 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17528:17532 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17519:17525 Coccinelle.dickson Make appendn def
R17493:17499 Coccinelle.TransClosure <> t_trans constr
R17508:17511 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17514:17517 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17518:17518 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17528:17532 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17519:17525 Coccinelle.dickson Make appendn def
R17493:17499 Coccinelle.TransClosure <> t_trans constr
R17551:17557 Coq.Lists.List <> app_ass syndef
R17574:17581 Coccinelle.dickson Make rmv_case constr
R17600:17610 Coccinelle.dickson Make permut_refl defax
R17551:17557 Coq.Lists.List <> app_ass syndef
R17551:17557 Coq.Lists.List <> app_ass syndef
R17551:17557 Coq.Lists.List <> app_ass syndef
R17551:17557 Coq.Lists.List <> app_ass syndef
R17574:17581 Coccinelle.dickson Make rmv_case constr
R17600:17610 Coccinelle.dickson Make permut_refl defax
R17625:17672 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17699:17708 Coccinelle.dickson Make permut_sym defax
R17625:17672 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17699:17708 Coccinelle.dickson Make permut_sym defax
R17726:17772 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17835:17838 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17839:17841 Coq.Init.Datatypes <> nil constr
R17814:17817 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17825:17828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17818:17822 Coccinelle.dickson Make consn def
R17791:17794 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17804:17807 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17795:17801 Coccinelle.dickson Make appendn def
R17885:17888 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17896:17899 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17889:17893 Coccinelle.dickson Make consn def
R17862:17865 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17875:17878 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17866:17872 Coccinelle.dickson Make appendn def
R17726:17772 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17835:17838 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17839:17841 Coq.Init.Datatypes <> nil constr
R17814:17817 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17825:17828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17818:17822 Coccinelle.dickson Make consn def
R17791:17794 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17804:17807 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17795:17801 Coccinelle.dickson Make appendn def
R17885:17888 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17896:17899 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17889:17893 Coccinelle.dickson Make consn def
R17862:17865 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17875:17878 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17866:17872 Coccinelle.dickson Make appendn def
R17923:17929 Coq.Lists.List <> ass_app syndef
R17923:17929 Coq.Lists.List <> ass_app syndef
R17923:17929 Coq.Lists.List <> ass_app syndef
prf 18031:18051 Make multiset_closure_aux2
R18069:18076 Coq.Relations.Relation_Definitions <> relation def
R18078:18078 Coccinelle.dickson Make A defax
R18125:18130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18163:18168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18190:18195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18196:18196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18269:18275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18276:18285 Coccinelle.TransClosure <> trans_clos ind
R18317:18317 Coccinelle.dickson <> q var
R18315:18315 Coccinelle.dickson <> p var
R18288:18310 Coccinelle.dickson Make multiset_extension_step ind
R18312:18312 Coccinelle.dickson <> R var
R18229:18232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18260:18263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18264:18264 Coccinelle.dickson <> R var
R18268:18268 Coccinelle.dickson <> a var
R18266:18266 Coccinelle.dickson <> b var
R18243:18245 Coccinelle.more_list <> mem def
R18258:18259 Coccinelle.dickson <> la var
R18256:18256 Coccinelle.dickson <> b var
R18247:18254 Coccinelle.dickson Make eq_A defax
R18218:18219 Coq.Lists.List <> In def
R18228:18228 Coccinelle.dickson <> l var
R18221:18221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18223:18223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18226:18226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18222:18222 Coccinelle.dickson <> a var
R18224:18225 Coccinelle.dickson <> la var
R18177:18180 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18170:18173 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18169:18169 Coccinelle.dickson <> l var
R18174:18176 Coq.Init.Datatypes <> nil constr
R18183:18186 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18181:18182 Coccinelle.dickson <> le var
R18187:18189 Coq.Init.Datatypes <> nil constr
R18131:18136 Coccinelle.dickson Make permut syndef
R18143:18146 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18141:18142 Coccinelle.dickson <> le var
R18147:18147 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18155:18159 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18148:18152 Coccinelle.dickson Make consn def
R18154:18154 Coccinelle.dickson <> l var
R18160:18161 Coccinelle.dickson <> pq var
R18138:18138 Coccinelle.dickson <> q var
R18097:18102 Coccinelle.dickson Make permut syndef
R18107:18107 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18117:18121 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18108:18114 Coccinelle.dickson Make appendn def
R18116:18116 Coccinelle.dickson <> l var
R18122:18123 Coccinelle.dickson <> pq var
R18104:18104 Coccinelle.dickson <> p var
R18368:18387 Coccinelle.dickson Make multiset_closure_aux thm
R18396:18396 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18426:18430 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18397:18399 Coq.Lists.List <> map def
R18411:18411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18413:18414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18421:18421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18412:18412 Coccinelle.dickson <> x var
R18416:18418 Coq.Init.Datatypes <> nil constr
R18420:18420 Coccinelle.dickson Make A defax
R18368:18387 Coccinelle.dickson Make multiset_closure_aux thm
R18396:18396 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18426:18430 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18397:18399 Coq.Lists.List <> map def
R18411:18411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18413:18414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18421:18421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18412:18412 Coccinelle.dickson <> x var
R18416:18418 Coq.Init.Datatypes <> nil constr
R18420:18420 Coccinelle.dickson Make A defax
R18473:18476 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18464:18470 Coccinelle.dickson Make appendn def
R18445:18456 Coccinelle.dickson Make permut_trans defax
R18473:18476 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18464:18470 Coccinelle.dickson Make appendn def
R18445:18456 Coccinelle.dickson Make permut_trans defax
R18505:18515 Coccinelle.dickson Make permut_app2 defax
R18526:18536 Coccinelle.dickson Make appendn_app thm
R18505:18515 Coccinelle.dickson Make permut_app2 defax
R18505:18515 Coccinelle.dickson Make permut_app2 defax
R18526:18536 Coccinelle.dickson Make appendn_app thm
R18526:18536 Coccinelle.dickson Make appendn_app thm
R18618:18621 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18629:18632 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18622:18626 Coccinelle.dickson Make consn def
R18597:18608 Coccinelle.dickson Make permut_trans defax
R18618:18621 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18629:18632 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18622:18626 Coccinelle.dickson Make consn def
R18597:18608 Coccinelle.dickson Make permut_trans defax
R18658:18664 Coq.Lists.List <> ass_app syndef
R18678:18688 Coccinelle.dickson Make permut_app2 defax
R18699:18707 Coccinelle.dickson Make consn_app thm
R18658:18664 Coq.Lists.List <> ass_app syndef
R18658:18664 Coq.Lists.List <> ass_app syndef
R18678:18688 Coccinelle.dickson Make permut_app2 defax
R18678:18688 Coccinelle.dickson Make permut_app2 defax
R18699:18707 Coccinelle.dickson Make consn_app thm
R18699:18707 Coccinelle.dickson Make consn_app thm
R18773:18783 Coccinelle.dickson Make permut_cons defax
R18773:18783 Coccinelle.dickson Make permut_cons defax
R18773:18783 Coccinelle.dickson Make permut_cons defax
R18773:18783 Coccinelle.dickson Make permut_cons defax
R18802:18811 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18817:18824 Coccinelle.dickson Make eq_proof defax
R18802:18811 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18817:18824 Coccinelle.dickson Make eq_proof defax
R18849:18858 Coq.Lists.List <> app_eq_nil thm
R18849:18858 Coq.Lists.List <> app_eq_nil thm
R18946:18948 Coq.Init.Logic <> :type_scope:x_'='_x not
R18949:18951 Coq.Init.Datatypes <> nil constr
R18946:18948 Coq.Init.Logic <> :type_scope:x_'='_x not
R18949:18951 Coq.Init.Datatypes <> nil constr
R19004:19006 Coq.Init.Logic <> :type_scope:x_'='_x not
R18999:19001 Coq.Init.Datatypes <> nil constr
R19003:19003 Coccinelle.dickson Make A defax
R19007:19009 Coq.Init.Datatypes <> nil constr
R19004:19006 Coq.Init.Logic <> :type_scope:x_'='_x not
R18999:19001 Coq.Init.Datatypes <> nil constr
R19003:19003 Coccinelle.dickson Make A defax
R19007:19009 Coq.Init.Datatypes <> nil constr
mod 19211:19213 <> Make.LDS
def 19228:19228 Make.LDS A
R19235:19238 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19245:19245 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19234:19234 Coccinelle.dickson Make.DS A defax
R19239:19242 Coq.Init.Datatypes <> list ind
R19244:19244 Coccinelle.dickson Make.DS A defax
def 19265:19268 Make.LDS eq_A
R19274:19275 Coq.Init.Logic <> eq ind
R19277:19277 Coccinelle.dickson Make.LDS A def
prf 19287:19294 Make.LDS eq_proof
R19298:19308 Coq.Relations.Relation_Definitions <> equivalence rec
R19312:19315 Coccinelle.dickson Make.LDS eq_A def
R19310:19310 Coccinelle.dickson Make.LDS A def
R19325:19328 Coccinelle.dickson Make.LDS eq_A def
R19353:19362 Coq.Init.Logic <> refl_equal syndef
R19353:19362 Coq.Init.Logic <> refl_equal syndef
R19445:19454 Coq.Init.Logic <> refl_equal syndef
R19445:19454 Coq.Init.Logic <> refl_equal syndef
R19480:19483 Coccinelle.dickson Make.LDS eq_A def
R19478:19478 Coccinelle.dickson Make.LDS A def
R19480:19483 Coccinelle.dickson Make.LDS eq_A def
R19478:19478 Coccinelle.dickson Make.LDS A def
R19511:19541 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19547:19554 Coccinelle.dickson Make.LDS eq_proof thm
R19480:19483 Coccinelle.dickson Make.LDS eq_A def
R19478:19478 Coccinelle.dickson Make.LDS A def
R19581:19610 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19616:19623 Coccinelle.dickson Make.LDS eq_proof thm
R19480:19483 Coccinelle.dickson Make.LDS eq_A def
R19478:19478 Coccinelle.dickson Make.LDS A def
R19656:19687 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19693:19700 Coccinelle.dickson Make.LDS eq_proof thm
R19480:19483 Coccinelle.dickson Make.LDS eq_A def
R19478:19478 Coccinelle.dickson Make.LDS A def
R19511:19541 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19547:19554 Coccinelle.dickson Make.LDS eq_proof thm
R19581:19610 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19616:19623 Coccinelle.dickson Make.LDS eq_proof thm
R19656:19687 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19693:19700 Coccinelle.dickson Make.LDS eq_proof thm
def 19721:19732 Make.LDS eq_bool_list
R19741:19744 Coq.Init.Datatypes <> bool ind
R19764:19765 Coccinelle.dickson <> l2 var
R19760:19761 Coccinelle.dickson <> l1 var
R19779:19781 Coq.Init.Datatypes <> nil constr
R19784:19786 Coq.Init.Datatypes <> nil constr
R19791:19794 Coq.Init.Datatypes <> true constr
R19803:19805 Coq.Init.Datatypes <> nil constr
R19810:19813 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19820:19824 Coq.Init.Datatypes <> false constr
R19836:19839 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19845:19847 Coq.Init.Datatypes <> nil constr
R19852:19856 Coq.Init.Datatypes <> false constr
R19868:19871 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19880:19883 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19894:19904 Coccinelle.dickson DS1 eq_bool defax
R19941:19945 Coq.Init.Datatypes <> false constr
R19917:19928 Coccinelle.dickson <> eq_bool_list def
R19933:19934 Coccinelle.dickson <> l2 var
R19930:19931 Coccinelle.dickson <> l1 var
def 19969:19975 Make.LDS eq_bool
R19987:19990 Coq.Init.Datatypes <> bool ind
R20010:20012 Coccinelle.dickson <> al2 var
R20005:20007 Coccinelle.dickson <> al1 var
R20023:20023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20026:20026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20029:20029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20032:20032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20035:20035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20038:20038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20046:20056 Coccinelle.dickson DS1 eq_bool defax
R20093:20097 Coq.Init.Datatypes <> false constr
R20069:20080 Coccinelle.dickson Make.LDS eq_bool_list def
prf 20113:20122 Make.LDS eq_bool_ok
R20148:20154 Coccinelle.dickson Make.LDS eq_bool def
R20160:20162 Coccinelle.dickson <> al2 var
R20156:20158 Coccinelle.dickson <> al1 var
R20169:20172 Coq.Init.Datatypes <> true constr
R20180:20182 Coq.Init.Logic <> :type_scope:x_'='_x not
R20177:20179 Coccinelle.dickson <> al1 var
R20183:20185 Coccinelle.dickson <> al2 var
R20189:20193 Coq.Init.Datatypes <> false constr
R20198:20198 Coq.Init.Logic <> :type_scope:'~'_x not
R20202:20204 Coq.Init.Logic <> :type_scope:x_'='_x not
R20199:20201 Coccinelle.dickson <> al1 var
R20205:20207 Coccinelle.dickson <> al2 var
R20264:20277 Coccinelle.dickson DS1 eq_bool_ok defax
R20293:20303 Coccinelle.dickson DS1 eq_bool defax
R20264:20277 Coccinelle.dickson DS1 eq_bool_ok defax
R20293:20303 Coccinelle.dickson DS1 eq_bool defax
R20399:20410 Coccinelle.dickson Make.LDS eq_bool_list def
R20415:20416 Coccinelle.dickson <> l2 var
R20412:20413 Coccinelle.dickson <> l1 var
R20423:20426 Coq.Init.Datatypes <> true constr
R20433:20435 Coq.Init.Logic <> :type_scope:x_'='_x not
R20431:20432 Coccinelle.dickson <> l1 var
R20436:20437 Coccinelle.dickson <> l2 var
R20441:20445 Coq.Init.Datatypes <> false constr
R20450:20450 Coq.Init.Logic <> :type_scope:'~'_x not
R20453:20455 Coq.Init.Logic <> :type_scope:x_'='_x not
R20451:20452 Coccinelle.dickson <> l1 var
R20456:20457 Coccinelle.dickson <> l2 var
R20399:20410 Coccinelle.dickson Make.LDS eq_bool_list def
R20415:20416 Coccinelle.dickson <> l2 var
R20412:20413 Coccinelle.dickson <> l1 var
R20423:20426 Coq.Init.Datatypes <> true constr
R20433:20435 Coq.Init.Logic <> :type_scope:x_'='_x not
R20431:20432 Coccinelle.dickson <> l1 var
R20436:20437 Coccinelle.dickson <> l2 var
R20441:20445 Coq.Init.Datatypes <> false constr
R20450:20450 Coq.Init.Logic <> :type_scope:'~'_x not
R20453:20455 Coq.Init.Logic <> :type_scope:x_'='_x not
R20451:20452 Coccinelle.dickson <> l1 var
R20456:20457 Coccinelle.dickson <> l2 var
R20515:20524 Coq.Init.Logic <> refl_equal syndef
R20515:20524 Coq.Init.Logic <> refl_equal syndef
R20567:20580 Coccinelle.dickson DS1 eq_bool_ok defax
R20596:20606 Coccinelle.dickson DS1 eq_bool defax
R20567:20580 Coccinelle.dickson DS1 eq_bool_ok defax
R20596:20606 Coccinelle.dickson DS1 eq_bool defax
R20693:20704 Coccinelle.dickson Make.LDS eq_bool_list def
R20693:20704 Coccinelle.dickson Make.LDS eq_bool_list def
R20764:20773 Coq.Init.Logic <> refl_equal syndef
R20764:20773 Coq.Init.Logic <> refl_equal syndef
R20837:20846 Coq.Init.Logic <> refl_equal syndef
R20837:20846 Coq.Init.Logic <> refl_equal syndef
R20910:20919 Coq.Init.Logic <> refl_equal syndef
R20910:20919 Coq.Init.Logic <> refl_equal syndef
R20964:20975 Coccinelle.dickson Make.LDS eq_bool_list def
R20964:20975 Coccinelle.dickson Make.LDS eq_bool_list def
R21036:21045 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21051:21058 Coccinelle.dickson Make.LDS eq_proof thm
R21036:21045 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21051:21058 Coccinelle.dickson Make.LDS eq_proof thm
R21123:21132 Coq.Init.Logic <> refl_equal syndef
R21123:21132 Coq.Init.Logic <> refl_equal syndef
R21196:21205 Coq.Init.Logic <> refl_equal syndef
R21196:21205 Coq.Init.Logic <> refl_equal syndef
R21222:21224 Coccinelle.dickson Make.LDS <> mod
R21243:21263 Coccinelle.decidable_set Convert <> modtype
R21265:21267 Coccinelle.dickson Make.LDS <> modtype
mod 21235:21238 <> Make.LEDS
R21285:21300 Coccinelle.list_permut Make <> modtype
R21303:21306 Coccinelle.dickson Make.LEDS <> modtype
mod 21278:21280 <> Make.LLP
prf 21317:21328 Make permut_consn
R21367:21370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21371:21376 Coccinelle.dickson Make permut syndef
R21391:21395 Coccinelle.dickson Make consn def
R21397:21399 Coccinelle.dickson <> ll2 var
R21379:21383 Coccinelle.dickson Make consn def
R21385:21387 Coccinelle.dickson <> ll1 var
R21349:21358 Coccinelle.dickson Make permut syndef
R21364:21366 Coccinelle.dickson <> ll2 var
R21360:21362 Coccinelle.dickson <> ll1 var
R21486:21495 Coccinelle.list_permut <> permut_nil thm
R21498:21511 Coccinelle.dickson Make permut_sym defax
R21486:21495 Coccinelle.list_permut <> permut_nil thm
R21498:21511 Coccinelle.dickson Make permut_sym defax
R21486:21495 Coccinelle.list_permut <> permut_nil thm
R21498:21511 Coccinelle.dickson Make permut_sym defax
R21552:21553 Coq.Lists.List <> In def
R21555:21555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21557:21557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21560:21560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21552:21553 Coq.Lists.List <> In def
R21555:21555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21557:21557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21560:21560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21580:21591 Coccinelle.list_permut <> in_permut_in thm
R21580:21591 Coccinelle.list_permut <> in_permut_in thm
R21580:21591 Coccinelle.list_permut <> in_permut_in thm
R21622:21629 Coq.Lists.List <> In_split syndef
R21622:21629 Coq.Lists.List <> In_split syndef
R21686:21707 Coccinelle.dickson Make permut_cons_inside defax
R21686:21707 Coccinelle.dickson Make permut_cons_inside defax
R21686:21707 Coccinelle.dickson Make permut_cons_inside defax
R21686:21707 Coccinelle.dickson Make permut_cons_inside defax
R21723:21731 Coccinelle.dickson Make consn_app thm
R21752:21769 Coccinelle.dickson Make permut_cons_inside defax
R21723:21731 Coccinelle.dickson Make consn_app thm
R21723:21731 Coccinelle.dickson Make consn_app thm
R21752:21769 Coccinelle.dickson Make permut_cons_inside defax
R21752:21769 Coccinelle.dickson Make permut_cons_inside defax
R21752:21769 Coccinelle.dickson Make permut_cons_inside defax
R21783:21791 Coccinelle.dickson Make consn_app thm
R21783:21791 Coccinelle.dickson Make consn_app thm
R21783:21791 Coccinelle.dickson Make consn_app thm
R21823:21832 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21838:21845 Coccinelle.dickson Make eq_proof defax
R21823:21832 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21838:21845 Coccinelle.dickson Make eq_proof defax
R21856:21865 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21871:21883 Coccinelle.dickson Make eq_proof defax
R21856:21865 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21871:21883 Coccinelle.dickson Make eq_proof defax
prf 21899:21912 Make permut_appendn
R21951:21954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21955:21960 Coccinelle.dickson Make permut syndef
R21977:21983 Coccinelle.dickson Make appendn def
R21985:21987 Coccinelle.dickson <> ll2 var
R21963:21969 Coccinelle.dickson Make appendn def
R21971:21973 Coccinelle.dickson <> ll1 var
R21933:21942 Coccinelle.dickson Make permut syndef
R21948:21950 Coccinelle.dickson <> ll2 var
R21944:21946 Coccinelle.dickson <> ll1 var
R22074:22083 Coccinelle.list_permut <> permut_nil thm
R22086:22099 Coccinelle.dickson Make permut_sym defax
R22074:22083 Coccinelle.list_permut <> permut_nil thm
R22086:22099 Coccinelle.dickson Make permut_sym defax
R22074:22083 Coccinelle.list_permut <> permut_nil thm
R22086:22099 Coccinelle.dickson Make permut_sym defax
R22140:22141 Coq.Lists.List <> In def
R22143:22143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22145:22145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22148:22148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22140:22141 Coq.Lists.List <> In def
R22143:22143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22145:22145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22148:22148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22168:22179 Coccinelle.list_permut <> in_permut_in thm
R22168:22179 Coccinelle.list_permut <> in_permut_in thm
R22168:22179 Coccinelle.list_permut <> in_permut_in thm
R22210:22217 Coq.Lists.List <> In_split syndef
R22210:22217 Coq.Lists.List <> In_split syndef
R22271:22281 Coccinelle.dickson Make appendn_app thm
R22271:22281 Coccinelle.dickson Make appendn_app thm
R22271:22281 Coccinelle.dickson Make appendn_app thm
R22299:22310 Coccinelle.dickson Make permut_trans defax
R22315:22333 Coccinelle.dickson Make list_permut_app_app defax
R22299:22310 Coccinelle.dickson Make permut_trans defax
R22315:22333 Coccinelle.dickson Make list_permut_app_app defax
R22353:22359 Coq.Lists.List <> ass_app syndef
R22353:22359 Coq.Lists.List <> ass_app syndef
R22353:22359 Coq.Lists.List <> ass_app syndef
R22373:22383 Coccinelle.dickson Make permut_app1 defax
R22373:22383 Coccinelle.dickson Make permut_app1 defax
R22373:22383 Coccinelle.dickson Make permut_app1 defax
R22394:22405 Coccinelle.dickson Make permut_trans defax
R22410:22428 Coccinelle.dickson Make list_permut_app_app defax
R22394:22405 Coccinelle.dickson Make permut_trans defax
R22410:22428 Coccinelle.dickson Make list_permut_app_app defax
R22448:22458 Coccinelle.dickson Make appendn_app thm
R22448:22458 Coccinelle.dickson Make appendn_app thm
R22448:22458 Coccinelle.dickson Make appendn_app thm
R22494:22515 Coccinelle.dickson Make permut_cons_inside defax
R22494:22515 Coccinelle.dickson Make permut_cons_inside defax
R22494:22515 Coccinelle.dickson Make permut_cons_inside defax
R22494:22515 Coccinelle.dickson Make permut_cons_inside defax
R22539:22548 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22554:22566 Coccinelle.dickson Make eq_proof defax
R22539:22548 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22554:22566 Coccinelle.dickson Make eq_proof defax
prf 22582:22602 Make multiset_closure_aux3
R22653:22671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22672:22678 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22681:22682 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22683:22689 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22693:22695 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22720:22767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22696:22705 Coccinelle.dickson Make permut syndef
R22712:22715 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22710:22711 Coccinelle.dickson <> ll var
R22716:22718 Coccinelle.dickson <> ll' var
R22707:22707 Coccinelle.dickson <> l var
R22789:22836 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22768:22773 Coccinelle.dickson Make permut syndef
R22787:22788 Coccinelle.dickson <> lc var
R22776:22780 Coccinelle.dickson Make consn def
R22782:22783 Coccinelle.dickson <> ll var
R22837:22842 Coccinelle.dickson Make permut syndef
R22856:22858 Coccinelle.dickson <> cns var
R22845:22849 Coccinelle.dickson Make consn def
R22851:22853 Coccinelle.dickson <> ll' var
R22625:22630 Coccinelle.dickson Make permut syndef
R22645:22648 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22643:22644 Coccinelle.dickson <> lc var
R22649:22651 Coccinelle.dickson <> cns var
R22633:22637 Coccinelle.dickson Make consn def
R22639:22639 Coccinelle.dickson <> l var
R22920:22939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22975:22978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22996:23014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23015:23021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23024:23025 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23026:23032 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23036:23038 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23063:23110 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23039:23048 Coccinelle.dickson Make permut syndef
R23055:23058 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23053:23054 Coccinelle.dickson <> ll var
R23059:23061 Coccinelle.dickson <> ll' var
R23050:23050 Coccinelle.dickson <> l var
R23132:23179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23111:23116 Coccinelle.dickson Make permut syndef
R23130:23131 Coccinelle.dickson <> lc var
R23119:23123 Coccinelle.dickson Make consn def
R23125:23126 Coccinelle.dickson <> ll var
R23180:23185 Coccinelle.dickson Make permut syndef
R23199:23201 Coccinelle.dickson <> cns var
R23188:23192 Coccinelle.dickson Make consn def
R23194:23196 Coccinelle.dickson <> ll' var
R22984:22986 Coq.Init.Logic <> :type_scope:x_'='_x not
R22979:22983 Coccinelle.dickson <> lccns var
R22989:22992 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22987:22988 Coccinelle.dickson <> lc var
R22993:22995 Coccinelle.dickson <> cns var
R22965:22967 Coq.Init.Logic <> :type_scope:x_'='_x not
R22959:22964 Coccinelle.dickson <> consnl var
R22968:22972 Coccinelle.dickson Make consn def
R22974:22974 Coccinelle.dickson <> l var
R22901:22906 Coccinelle.dickson Make permut syndef
R22915:22919 Coccinelle.dickson <> lccns var
R22908:22913 Coccinelle.dickson <> consnl var
R22920:22939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22975:22978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22996:23014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23015:23021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23024:23025 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23026:23032 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23036:23038 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23063:23110 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23039:23048 Coccinelle.dickson Make permut syndef
R23055:23058 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23053:23054 Coccinelle.dickson <> ll var
R23059:23061 Coccinelle.dickson <> ll' var
R23050:23050 Coccinelle.dickson <> l var
R23132:23179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23111:23116 Coccinelle.dickson Make permut syndef
R23130:23131 Coccinelle.dickson <> lc var
R23119:23123 Coccinelle.dickson Make consn def
R23125:23126 Coccinelle.dickson <> ll var
R23180:23185 Coccinelle.dickson Make permut syndef
R23199:23201 Coccinelle.dickson <> cns var
R23188:23192 Coccinelle.dickson Make consn def
R23194:23196 Coccinelle.dickson <> ll' var
R22984:22986 Coq.Init.Logic <> :type_scope:x_'='_x not
R22979:22983 Coccinelle.dickson <> lccns var
R22989:22992 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22987:22988 Coccinelle.dickson <> lc var
R22993:22995 Coccinelle.dickson <> cns var
R22965:22967 Coq.Init.Logic <> :type_scope:x_'='_x not
R22959:22964 Coccinelle.dickson <> consnl var
R22968:22972 Coccinelle.dickson Make consn def
R22974:22974 Coccinelle.dickson <> l var
R22901:22906 Coccinelle.dickson Make permut syndef
R22915:22919 Coccinelle.dickson <> lccns var
R22908:22913 Coccinelle.dickson <> consnl var
R23349:23351 Coq.Init.Datatypes <> nil constr
R23355:23357 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23354:23354 Coccinelle.dickson Make A defax
R23358:23361 Coq.Init.Datatypes <> list ind
R23363:23363 Coccinelle.dickson Make A defax
R23377:23379 Coq.Init.Datatypes <> nil constr
R23383:23385 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23382:23382 Coccinelle.dickson Make A defax
R23386:23389 Coq.Init.Datatypes <> list ind
R23391:23391 Coccinelle.dickson Make A defax
R23349:23351 Coq.Init.Datatypes <> nil constr
R23355:23357 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23354:23354 Coccinelle.dickson Make A defax
R23358:23361 Coq.Init.Datatypes <> list ind
R23363:23363 Coccinelle.dickson Make A defax
R23377:23379 Coq.Init.Datatypes <> nil constr
R23383:23385 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R23382:23382 Coccinelle.dickson Make A defax
R23386:23389 Coq.Init.Datatypes <> list ind
R23391:23391 Coccinelle.dickson Make A defax
R23601:23610 Coccinelle.more_list <> split_list thm
R23601:23610 Coccinelle.more_list <> split_list thm
R23710:23719 Coq.Init.Logic <> refl_equal syndef
R23701:23704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23734:23740 Coq.Lists.List <> ass_app syndef
R23710:23719 Coq.Init.Logic <> refl_equal syndef
R23701:23704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23734:23740 Coq.Lists.List <> ass_app syndef
R23734:23740 Coq.Lists.List <> ass_app syndef
R23769:23778 Coq.Init.Logic <> refl_equal syndef
R23769:23778 Coq.Init.Logic <> refl_equal syndef
R23853:23856 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23846:23846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23849:23849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23852:23852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23853:23856 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23846:23846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23849:23849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23852:23852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23904:23925 Coccinelle.dickson Make permut_cons_inside defax
R23948:23957 Coq.Init.Logic <> refl_equal syndef
R23904:23925 Coccinelle.dickson Make permut_cons_inside defax
R23904:23925 Coccinelle.dickson Make permut_cons_inside defax
R23904:23925 Coccinelle.dickson Make permut_cons_inside defax
R23948:23957 Coq.Init.Logic <> refl_equal syndef
R23972:23989 Coccinelle.dickson Make permut_cons_inside defax
R23972:23989 Coccinelle.dickson Make permut_cons_inside defax
R23972:23989 Coccinelle.dickson Make permut_cons_inside defax
R23972:23989 Coccinelle.dickson Make permut_cons_inside defax
R24116:24125 Coq.Init.Logic <> refl_equal syndef
R24101:24110 Coq.Init.Logic <> refl_equal syndef
R24116:24125 Coq.Init.Logic <> refl_equal syndef
R24101:24110 Coq.Init.Logic <> refl_equal syndef
R24190:24193 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24183:24183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24186:24186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24189:24189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24190:24193 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24183:24183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24186:24186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24189:24189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24225:24246 Coccinelle.dickson Make permut_cons_inside defax
R24269:24278 Coq.Init.Logic <> refl_equal syndef
R24225:24246 Coccinelle.dickson Make permut_cons_inside defax
R24225:24246 Coccinelle.dickson Make permut_cons_inside defax
R24225:24246 Coccinelle.dickson Make permut_cons_inside defax
R24269:24278 Coq.Init.Logic <> refl_equal syndef
R24293:24303 Coq.Lists.List <> app_nil_end thm
R24293:24303 Coq.Lists.List <> app_nil_end thm
R24293:24303 Coq.Lists.List <> app_nil_end thm
R24336:24346 Coccinelle.dickson Make permut_cons defax
R24336:24346 Coccinelle.dickson Make permut_cons defax
R24336:24346 Coccinelle.dickson Make permut_cons defax
R24336:24346 Coccinelle.dickson Make permut_cons defax
R24441:24450 Coq.Init.Logic <> refl_equal syndef
R24428:24431 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24441:24450 Coq.Init.Logic <> refl_equal syndef
R24428:24431 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24465:24471 Coq.Lists.List <> ass_app syndef
R24465:24471 Coq.Lists.List <> ass_app syndef
R24465:24471 Coq.Lists.List <> ass_app syndef
R24496:24505 Coq.Init.Logic <> refl_equal syndef
R24496:24505 Coq.Init.Logic <> refl_equal syndef
R24570:24573 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24562:24562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24565:24566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24569:24569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24570:24573 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24562:24562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24565:24566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24569:24569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24623:24637 Coccinelle.dickson Make permut_cons defax
R24660:24669 Coq.Init.Logic <> refl_equal syndef
R24623:24637 Coccinelle.dickson Make permut_cons defax
R24623:24637 Coccinelle.dickson Make permut_cons defax
R24623:24637 Coccinelle.dickson Make permut_cons defax
R24660:24669 Coq.Init.Logic <> refl_equal syndef
R24691:24708 Coccinelle.dickson Make permut_cons_inside defax
R24691:24708 Coccinelle.dickson Make permut_cons_inside defax
R24691:24708 Coccinelle.dickson Make permut_cons_inside defax
R24691:24708 Coccinelle.dickson Make permut_cons_inside defax
R24809:24818 Coq.Init.Logic <> refl_equal syndef
R24794:24803 Coq.Init.Logic <> refl_equal syndef
R24776:24779 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24764:24768 Coccinelle.dickson Make consn def
R24809:24818 Coq.Init.Logic <> refl_equal syndef
R24794:24803 Coq.Init.Logic <> refl_equal syndef
R24776:24779 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24764:24768 Coccinelle.dickson Make consn def
prf 24837:24852 Make multiset_closure
R24882:24887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24942:24947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24948:24954 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24956:24957 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24958:24964 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24967:24970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24999:25004 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24971:24976 Coccinelle.dickson Make permut syndef
R24981:24981 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24991:24995 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24982:24988 Coccinelle.dickson Make appendn def
R24990:24990 Coccinelle.dickson <> l var
R24996:24997 Coccinelle.dickson <> pq var
R24978:24978 Coccinelle.dickson <> p var
R25031:25036 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25005:25010 Coccinelle.dickson Make permut syndef
R25015:25015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25023:25027 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25016:25020 Coccinelle.dickson Make consn def
R25022:25022 Coccinelle.dickson <> l var
R25028:25029 Coccinelle.dickson <> pq var
R25012:25012 Coccinelle.dickson <> q var
R25045:25050 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25038:25041 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R25037:25037 Coccinelle.dickson <> l var
R25042:25044 Coq.Init.Datatypes <> nil constr
R25051:25051 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25124:25131 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25227:25227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25084:25087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25115:25118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25119:25119 Coccinelle.dickson <> R var
R25123:25123 Coccinelle.dickson <> a var
R25121:25121 Coccinelle.dickson <> b var
R25098:25100 Coccinelle.more_list <> mem def
R25113:25114 Coccinelle.dickson <> la var
R25111:25111 Coccinelle.dickson <> b var
R25102:25109 Coccinelle.dickson Make eq_A defax
R25073:25074 Coq.Lists.List <> In def
R25083:25083 Coccinelle.dickson <> l var
R25076:25076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25078:25078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25081:25081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25077:25077 Coccinelle.dickson <> a var
R25079:25080 Coccinelle.dickson <> la var
R25132:25132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25149:25153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25188:25191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25218:25221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25222:25226 Coq.Init.Logic <> False ind
R25192:25194 Coccinelle.more_list <> mem def
R25208:25214 Coccinelle.dickson Make appendn def
R25216:25216 Coccinelle.dickson <> l var
R25205:25205 Coccinelle.dickson <> a var
R25196:25203 Coccinelle.dickson Make eq_A defax
R25164:25166 Coccinelle.more_list <> mem def
R25180:25184 Coccinelle.dickson Make consn def
R25186:25186 Coccinelle.dickson <> l var
R25177:25177 Coccinelle.dickson <> a var
R25168:25175 Coccinelle.dickson Make eq_A defax
R25143:25143 Coq.Init.Logic <> :type_scope:'~'_x not
R25144:25144 Coccinelle.dickson <> R var
R25148:25148 Coccinelle.dickson <> a var
R25146:25146 Coccinelle.dickson <> a var
R24900:24909 Coccinelle.TransClosure <> trans_clos ind
R24941:24941 Coccinelle.dickson <> q var
R24939:24939 Coccinelle.dickson <> p var
R24912:24934 Coccinelle.dickson Make multiset_extension_step ind
R24936:24936 Coccinelle.dickson <> R var
R24868:24877 Coq.Relations.Relation_Definitions <> transitive def
R24881:24881 Coccinelle.dickson <> R var
R25397:25400 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25391:25391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25393:25393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25396:25396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25401:25403 Coq.Init.Datatypes <> nil constr
R25397:25400 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25391:25391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25393:25393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25396:25396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25401:25403 Coq.Init.Datatypes <> nil constr
R25456:25466 Coq.Lists.List <> app_nil_end thm
R25456:25466 Coq.Lists.List <> app_nil_end thm
R25456:25466 Coq.Lists.List <> app_nil_end thm
R25602:25612 Coq.Lists.List <> app_nil_end thm
R25602:25612 Coq.Lists.List <> app_nil_end thm
R25602:25612 Coq.Lists.List <> app_nil_end thm
R25918:25920 Coccinelle.more_list <> mem def
R25934:25934 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25944:25948 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25935:25941 Coccinelle.dickson Make appendn def
R25922:25929 Coccinelle.dickson Make eq_A defax
R25918:25920 Coccinelle.more_list <> mem def
R25934:25934 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25944:25948 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R25935:25941 Coccinelle.dickson Make appendn def
R25922:25929 Coccinelle.dickson Make eq_A defax
R25962:25966 Coq.Init.Logic <> proj1 thm
R25969:25982 Coccinelle.dickson Make mem_permut_mem defax
R25962:25966 Coq.Init.Logic <> proj1 thm
R25969:25982 Coccinelle.dickson Make mem_permut_mem defax
R26000:26004 Coq.Init.Logic <> proj1 thm
R26007:26020 Coccinelle.dickson Make mem_permut_mem defax
R26025:26034 Coccinelle.dickson Make permut_sym defax
R26000:26004 Coq.Init.Logic <> proj1 thm
R26007:26020 Coccinelle.dickson Make mem_permut_mem defax
R26025:26034 Coccinelle.dickson Make permut_sym defax
R26056:26065 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26071:26078 Coccinelle.dickson Make eq_proof defax
R26056:26065 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26071:26078 Coccinelle.dickson Make eq_proof defax
R26093:26102 Coccinelle.more_list <> mem_or_app thm
R26093:26102 Coccinelle.more_list <> mem_or_app thm
R26093:26102 Coccinelle.more_list <> mem_or_app thm
R26133:26143 Coccinelle.more_list <> mem_bool_ok thm
R26167:26173 Coccinelle.dickson Make appendn def
R26149:26162 Coccinelle.dickson Make eq_bool_ok defax
R26133:26143 Coccinelle.more_list <> mem_bool_ok thm
R26167:26173 Coccinelle.dickson Make appendn def
R26149:26162 Coccinelle.dickson Make eq_bool_ok defax
R26186:26193 Coccinelle.more_list <> mem_bool def
R26210:26216 Coccinelle.dickson Make appendn def
R26195:26205 Coccinelle.dickson Make eq_bool defax
R26186:26193 Coccinelle.more_list <> mem_bool def
R26210:26216 Coccinelle.dickson Make appendn def
R26195:26205 Coccinelle.dickson Make eq_bool defax
R26274:26283 Coccinelle.dickson Make in_appendn thm
R26274:26283 Coccinelle.dickson Make in_appendn thm
R26342:26354 Coccinelle.more_list <> mem_split_set thm
R26360:26369 Coccinelle.dickson Make eq_bool_ok defax
R26342:26354 Coccinelle.more_list <> mem_split_set thm
R26360:26369 Coccinelle.dickson Make eq_bool_ok defax
R26472:26479 Coq.Lists.List <> In_split syndef
R26472:26479 Coq.Lists.List <> In_split syndef
R26530:26540 Coccinelle.dickson Make appendn_app thm
R26581:26587 Coq.Lists.List <> ass_app syndef
R26530:26540 Coccinelle.dickson Make appendn_app thm
R26530:26540 Coccinelle.dickson Make appendn_app thm
R26581:26587 Coq.Lists.List <> ass_app syndef
R26581:26587 Coq.Lists.List <> ass_app syndef
R26581:26587 Coq.Lists.List <> ass_app syndef
R26581:26587 Coq.Lists.List <> ass_app syndef
R26581:26587 Coq.Lists.List <> ass_app syndef
R26581:26587 Coq.Lists.List <> ass_app syndef
R26619:26625 Coq.Lists.List <> ass_app syndef
R26619:26625 Coq.Lists.List <> ass_app syndef
R26619:26625 Coq.Lists.List <> ass_app syndef
R26647:26658 Coccinelle.dickson Make permut_trans defax
R26661:26670 Coccinelle.dickson Make permut_sym defax
R26647:26658 Coccinelle.dickson Make permut_trans defax
R26661:26670 Coccinelle.dickson Make permut_sym defax
R26715:26732 Coccinelle.dickson Make permut_cons_inside defax
R26715:26732 Coccinelle.dickson Make permut_cons_inside defax
R26715:26732 Coccinelle.dickson Make permut_cons_inside defax
R26715:26732 Coccinelle.dickson Make permut_cons_inside defax
R26753:26759 Coq.Lists.List <> ass_app syndef
R26753:26759 Coq.Lists.List <> ass_app syndef
R26753:26759 Coq.Lists.List <> ass_app syndef
R26781:26801 Coccinelle.dickson Make remove_equiv_is_sound defax
R26804:26808 Coccinelle.dickson Make consn def
R26813:26816 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26781:26801 Coccinelle.dickson Make remove_equiv_is_sound defax
R26804:26808 Coccinelle.dickson Make consn def
R26813:26816 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26839:26850 Coccinelle.more_list <> remove_equiv def
R26864:26868 Coccinelle.dickson Make consn def
R26873:26876 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26854:26860 Coccinelle.dickson Make eq_bool defax
R26852:26852 Coccinelle.dickson Make A defax
R26839:26850 Coccinelle.more_list <> remove_equiv def
R26864:26868 Coccinelle.dickson Make consn def
R26873:26876 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26854:26860 Coccinelle.dickson Make eq_bool defax
R26852:26852 Coccinelle.dickson Make A defax
R26950:26970 Coccinelle.dickson Make multiset_closure_aux3 thm
R26975:26978 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27072:27075 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27033:27033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27035:27036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27071:27071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27040:27043 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27048:27051 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27055:27059 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27070:27070 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27060:27066 Coccinelle.dickson Make appendn def
R27092:27095 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R26950:26970 Coccinelle.dickson Make multiset_closure_aux3 thm
R26975:26978 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27072:27075 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27033:27033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27035:27036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27071:27071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27040:27043 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27048:27051 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27055:27059 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27070:27070 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27060:27066 Coccinelle.dickson Make appendn def
R27092:27095 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27135:27138 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27114:27125 Coccinelle.dickson Make permut_trans defax
R27135:27138 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27114:27125 Coccinelle.dickson Make permut_trans defax
R27181:27181 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27191:27195 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27184:27187 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27162:27173 Coccinelle.dickson Make permut_trans defax
R27181:27181 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27191:27195 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27184:27187 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27162:27173 Coccinelle.dickson Make permut_trans defax
R27212:27222 Coccinelle.dickson Make permut_app2 defax
R27212:27222 Coccinelle.dickson Make permut_app2 defax
R27212:27222 Coccinelle.dickson Make permut_app2 defax
R27259:27259 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27269:27274 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27321:27321 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27262:27265 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27285:27288 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27275:27281 Coccinelle.dickson Make appendn def
R27292:27295 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27300:27303 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27315:27318 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27304:27310 Coccinelle.dickson Make appendn def
R27240:27251 Coccinelle.dickson Make permut_trans defax
R27259:27259 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27269:27274 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27321:27321 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27262:27265 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27285:27288 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27275:27281 Coccinelle.dickson Make appendn def
R27292:27295 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27300:27303 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27315:27318 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27304:27310 Coccinelle.dickson Make appendn def
R27240:27251 Coccinelle.dickson Make permut_trans defax
R27336:27346 Coccinelle.dickson Make permut_app1 defax
R27336:27346 Coccinelle.dickson Make permut_app1 defax
R27336:27346 Coccinelle.dickson Make permut_app1 defax
R27378:27384 Coq.Lists.List <> ass_app syndef
R27398:27408 Coccinelle.dickson Make permut_app2 defax
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27378:27384 Coq.Lists.List <> ass_app syndef
R27398:27408 Coccinelle.dickson Make permut_app2 defax
R27398:27408 Coccinelle.dickson Make permut_app2 defax
R27419:27430 Coccinelle.dickson Make permut_trans defax
R27435:27453 Coccinelle.dickson Make list_permut_app_app defax
R27419:27430 Coccinelle.dickson Make permut_trans defax
R27435:27453 Coccinelle.dickson Make list_permut_app_app defax
R27478:27484 Coq.Lists.List <> ass_app syndef
R27498:27508 Coccinelle.dickson Make permut_app1 defax
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27478:27484 Coq.Lists.List <> ass_app syndef
R27498:27508 Coccinelle.dickson Make permut_app1 defax
R27498:27508 Coccinelle.dickson Make permut_app1 defax
R27519:27525 Coq.Lists.List <> ass_app syndef
R27519:27525 Coq.Lists.List <> ass_app syndef
R27519:27525 Coq.Lists.List <> ass_app syndef
R27536:27547 Coccinelle.dickson Make permut_trans defax
R27550:27568 Coccinelle.dickson Make list_permut_app_app defax
R27536:27547 Coccinelle.dickson Make permut_trans defax
R27550:27568 Coccinelle.dickson Make list_permut_app_app defax
R27595:27601 Coq.Lists.List <> ass_app syndef
R27620:27630 Coccinelle.dickson Make permut_app1 defax
R27595:27601 Coq.Lists.List <> ass_app syndef
R27595:27601 Coq.Lists.List <> ass_app syndef
R27595:27601 Coq.Lists.List <> ass_app syndef
R27595:27601 Coq.Lists.List <> ass_app syndef
R27595:27601 Coq.Lists.List <> ass_app syndef
R27595:27601 Coq.Lists.List <> ass_app syndef
R27620:27630 Coccinelle.dickson Make permut_app1 defax
R27620:27630 Coccinelle.dickson Make permut_app1 defax
R27620:27630 Coccinelle.dickson Make permut_app1 defax
R27620:27630 Coccinelle.dickson Make permut_app1 defax
R27641:27652 Coccinelle.dickson Make permut_trans defax
R27655:27673 Coccinelle.dickson Make list_permut_app_app defax
R27641:27652 Coccinelle.dickson Make permut_trans defax
R27655:27673 Coccinelle.dickson Make list_permut_app_app defax
R27700:27706 Coq.Lists.List <> ass_app syndef
R27720:27730 Coccinelle.dickson Make permut_app1 defax
R27700:27706 Coq.Lists.List <> ass_app syndef
R27700:27706 Coq.Lists.List <> ass_app syndef
R27700:27706 Coq.Lists.List <> ass_app syndef
R27700:27706 Coq.Lists.List <> ass_app syndef
R27720:27730 Coccinelle.dickson Make permut_app1 defax
R27720:27730 Coccinelle.dickson Make permut_app1 defax
R27749:27759 Coccinelle.dickson Make appendn_app thm
R27768:27781 Coccinelle.dickson Make permut_appendn thm
R27749:27759 Coccinelle.dickson Make appendn_app thm
R27749:27759 Coccinelle.dickson Make appendn_app thm
R27749:27759 Coccinelle.dickson Make appendn_app thm
R27749:27759 Coccinelle.dickson Make appendn_app thm
R27768:27781 Coccinelle.dickson Make permut_appendn thm
R27808:27814 Coq.Lists.List <> ass_app syndef
R27808:27814 Coq.Lists.List <> ass_app syndef
R27808:27814 Coq.Lists.List <> ass_app syndef
R27885:27888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27842:27846 Coccinelle.dickson Make consn def
R27851:27854 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27877:27880 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27855:27855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27857:27858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27876:27876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27862:27865 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27868:27871 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27823:27834 Coccinelle.dickson Make permut_trans defax
R27885:27888 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27842:27846 Coccinelle.dickson Make consn def
R27851:27854 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27877:27880 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27855:27855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27857:27858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27876:27876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27862:27865 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27868:27871 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27823:27834 Coccinelle.dickson Make permut_trans defax
R27917:27927 Coccinelle.dickson Make permut_app2 defax
R27938:27946 Coccinelle.dickson Make consn_app thm
R27962:27971 Coccinelle.dickson Make permut_sym defax
R27986:28003 Coccinelle.dickson Make permut_cons_inside defax
R27917:27927 Coccinelle.dickson Make permut_app2 defax
R27917:27927 Coccinelle.dickson Make permut_app2 defax
R27938:27946 Coccinelle.dickson Make consn_app thm
R27938:27946 Coccinelle.dickson Make consn_app thm
R27962:27971 Coccinelle.dickson Make permut_sym defax
R27986:28003 Coccinelle.dickson Make permut_cons_inside defax
R27986:28003 Coccinelle.dickson Make permut_cons_inside defax
R27986:28003 Coccinelle.dickson Make permut_cons_inside defax
R28034:28037 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28012:28023 Coccinelle.dickson Make permut_trans defax
R28034:28037 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28012:28023 Coccinelle.dickson Make permut_trans defax
R28054:28064 Coccinelle.dickson Make permut_app2 defax
R28054:28064 Coccinelle.dickson Make permut_app2 defax
R28054:28064 Coccinelle.dickson Make permut_app2 defax
R28087:28098 Coccinelle.dickson Make permut_trans defax
R28101:28119 Coccinelle.dickson Make list_permut_app_app defax
R28087:28098 Coccinelle.dickson Make permut_trans defax
R28101:28119 Coccinelle.dickson Make list_permut_app_app defax
R28156:28160 Coccinelle.dickson Make consn def
R28165:28168 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28136:28147 Coccinelle.dickson Make permut_trans defax
R28156:28160 Coccinelle.dickson Make consn def
R28165:28168 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28136:28147 Coccinelle.dickson Make permut_trans defax
R28182:28191 Coccinelle.dickson Make permut_sym defax
R28182:28191 Coccinelle.dickson Make permut_sym defax
R28214:28222 Coccinelle.dickson Make consn_app thm
R28214:28222 Coccinelle.dickson Make consn_app thm
R28214:28222 Coccinelle.dickson Make consn_app thm
R28238:28247 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28253:28260 Coccinelle.dickson Make eq_proof defax
R28238:28247 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28253:28260 Coccinelle.dickson Make eq_proof defax
R28417:28423 Coq.Lists.List <> ass_app syndef
R28448:28457 Coccinelle.more_list <> mem_or_app thm
R28417:28423 Coq.Lists.List <> ass_app syndef
R28417:28423 Coq.Lists.List <> ass_app syndef
R28448:28457 Coccinelle.more_list <> mem_or_app thm
R28448:28457 Coccinelle.more_list <> mem_or_app thm
R28540:28543 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28546:28549 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28540:28543 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28546:28549 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28573:28582 Coccinelle.more_list <> mem_insert thm
R28573:28582 Coccinelle.more_list <> mem_insert thm
R28605:28614 Coccinelle.more_list <> mem_or_app thm
R28605:28614 Coccinelle.more_list <> mem_or_app thm
R28605:28614 Coccinelle.more_list <> mem_or_app thm
R28724:28737 Coccinelle.dickson Make mem_permut_mem defax
R28758:28767 Coccinelle.more_list <> mem_or_app thm
R28724:28737 Coccinelle.dickson Make mem_permut_mem defax
R28724:28737 Coccinelle.dickson Make mem_permut_mem defax
R28758:28767 Coccinelle.more_list <> mem_or_app thm
R28758:28767 Coccinelle.more_list <> mem_or_app thm
R28810:28813 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28816:28819 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28810:28813 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28816:28819 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28847:28856 Coccinelle.dickson Make in_appendn thm
R28847:28856 Coccinelle.dickson Make in_appendn thm
R28967:28975 Coccinelle.more_list <> in_insert thm
R28967:28975 Coccinelle.more_list <> in_insert thm
R28987:29010 Coccinelle.list_permut <> in_permut_in thm
R29023:29031 Coq.Lists.List <> in_or_app thm
R28987:29010 Coccinelle.list_permut <> in_permut_in thm
R28987:29010 Coccinelle.list_permut <> in_permut_in thm
R29023:29031 Coq.Lists.List <> in_or_app thm
R29067:29069 Coccinelle.more_list <> mem def
R29071:29074 Coccinelle.dickson Make eq_A defax
R29067:29069 Coccinelle.more_list <> mem def
R29071:29074 Coccinelle.dickson Make eq_A defax
R29095:29108 Coccinelle.dickson Make mem_permut_mem defax
R29095:29108 Coccinelle.dickson Make mem_permut_mem defax
R29095:29108 Coccinelle.dickson Make mem_permut_mem defax
R29125:29133 Coccinelle.dickson Make mem_consn thm
R29125:29133 Coccinelle.dickson Make mem_consn thm
R29125:29133 Coccinelle.dickson Make mem_consn thm
R29202:29215 Coccinelle.dickson Make mem_permut_mem defax
R29236:29245 Coccinelle.more_list <> mem_or_app thm
R29202:29215 Coccinelle.dickson Make mem_permut_mem defax
R29202:29215 Coccinelle.dickson Make mem_permut_mem defax
R29236:29245 Coccinelle.more_list <> mem_or_app thm
R29236:29245 Coccinelle.more_list <> mem_or_app thm
R29287:29290 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29293:29296 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29287:29290 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29293:29296 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29311:29319 Coq.Lists.List <> in_or_app thm
R29341:29350 Coq.Init.Logic <> refl_equal syndef
R29311:29319 Coq.Lists.List <> in_or_app thm
R29341:29350 Coq.Init.Logic <> refl_equal syndef
R29364:29373 Coccinelle.more_list <> mem_or_app thm
R29364:29373 Coccinelle.more_list <> mem_or_app thm
R29364:29373 Coccinelle.more_list <> mem_or_app thm
R29438:29446 Coccinelle.more_list <> in_insert thm
R29438:29446 Coccinelle.more_list <> in_insert thm
R29467:29490 Coccinelle.list_permut <> in_permut_in thm
R29467:29490 Coccinelle.list_permut <> in_permut_in thm
R29467:29490 Coccinelle.list_permut <> in_permut_in thm
R29503:29511 Coq.Lists.List <> in_or_app thm
R29503:29511 Coq.Lists.List <> in_or_app thm
R29607:29613 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29607:29613 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29647:29653 Coq.Lists.List <> ass_app syndef
R29712:29721 Coccinelle.more_list <> mem_or_app thm
R29712:29721 Coccinelle.more_list <> mem_or_app thm
R29712:29721 Coccinelle.more_list <> mem_or_app thm
R29805:29814 Coccinelle.more_list <> mem_or_app thm
R29805:29814 Coccinelle.more_list <> mem_or_app thm
R29805:29814 Coccinelle.more_list <> mem_or_app thm
R29919:29922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29925:29928 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29919:29922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29925:29928 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29943:29951 Coq.Lists.List <> in_or_app thm
R29973:29982 Coq.Init.Logic <> refl_equal syndef
R29943:29951 Coq.Lists.List <> in_or_app thm
R29973:29982 Coq.Init.Logic <> refl_equal syndef
R29991:30000 Coccinelle.more_list <> mem_insert thm
R29991:30000 Coccinelle.more_list <> mem_insert thm
R30078:30091 Coccinelle.dickson Make mem_permut_mem defax
R30112:30121 Coccinelle.more_list <> mem_or_app thm
R30078:30091 Coccinelle.dickson Make mem_permut_mem defax
R30078:30091 Coccinelle.dickson Make mem_permut_mem defax
R30112:30121 Coccinelle.more_list <> mem_or_app thm
R30112:30121 Coccinelle.more_list <> mem_or_app thm
R30164:30167 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30170:30173 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30164:30167 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30170:30173 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30188:30196 Coq.Lists.List <> in_or_app thm
R30218:30227 Coq.Init.Logic <> refl_equal syndef
R30188:30196 Coq.Lists.List <> in_or_app thm
R30218:30227 Coq.Init.Logic <> refl_equal syndef
R30241:30250 Coccinelle.more_list <> mem_or_app thm
R30241:30250 Coccinelle.more_list <> mem_or_app thm
R30241:30250 Coccinelle.more_list <> mem_or_app thm
R30316:30324 Coccinelle.dickson Make consn_app thm
R30338:30347 Coccinelle.more_list <> mem_or_app thm
R30316:30324 Coccinelle.dickson Make consn_app thm
R30316:30324 Coccinelle.dickson Make consn_app thm
R30338:30347 Coccinelle.more_list <> mem_or_app thm
R30338:30347 Coccinelle.more_list <> mem_or_app thm
R30370:30379 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30385:30392 Coccinelle.dickson Make eq_proof defax
R30370:30379 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30385:30392 Coccinelle.dickson Make eq_proof defax
R30407:30417 Coccinelle.dickson Make appendn_app thm
R30407:30417 Coccinelle.dickson Make appendn_app thm
R30407:30417 Coccinelle.dickson Make appendn_app thm
R30444:30457 Coccinelle.dickson Make mem_permut_mem defax
R30462:30475 Coccinelle.dickson Make permut_appendn thm
R30444:30457 Coccinelle.dickson Make mem_permut_mem defax
R30462:30475 Coccinelle.dickson Make permut_appendn thm
R30444:30457 Coccinelle.dickson Make mem_permut_mem defax
R30462:30475 Coccinelle.dickson Make permut_appendn thm
R30503:30513 Coccinelle.dickson Make appendn_app thm
R30527:30536 Coccinelle.more_list <> mem_or_app thm
R30503:30513 Coccinelle.dickson Make appendn_app thm
R30503:30513 Coccinelle.dickson Make appendn_app thm
R30527:30536 Coccinelle.more_list <> mem_or_app thm
R30527:30536 Coccinelle.more_list <> mem_or_app thm
R30547:30557 Coccinelle.dickson Make appendn_app thm
R30583:30592 Coccinelle.more_list <> mem_or_app thm
R30547:30557 Coccinelle.dickson Make appendn_app thm
R30547:30557 Coccinelle.dickson Make appendn_app thm
R30583:30592 Coccinelle.more_list <> mem_or_app thm
R30583:30592 Coccinelle.more_list <> mem_or_app thm
R30691:30700 Coccinelle.more_list <> mem_or_app thm
R30691:30700 Coccinelle.more_list <> mem_or_app thm
R30691:30700 Coccinelle.more_list <> mem_or_app thm
R30737:30746 Coccinelle.more_list <> mem_or_app thm
R30737:30746 Coccinelle.more_list <> mem_or_app thm
R30737:30746 Coccinelle.more_list <> mem_or_app thm
R30837:30846 Coccinelle.more_list <> mem_or_app thm
R30837:30846 Coccinelle.more_list <> mem_or_app thm
R30837:30846 Coccinelle.more_list <> mem_or_app thm
R30948:30956 Coccinelle.dickson Make consn_app thm
R30972:30981 Coccinelle.more_list <> mem_insert thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R30948:30956 Coccinelle.dickson Make consn_app thm
R30948:30956 Coccinelle.dickson Make consn_app thm
R30972:30981 Coccinelle.more_list <> mem_insert thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R31016:31029 Coccinelle.dickson Make mem_permut_mem defax
R31034:31045 Coccinelle.dickson Make permut_consn thm
R31061:31069 Coccinelle.dickson Make consn_app thm
R31083:31092 Coccinelle.more_list <> mem_or_app thm
R31016:31029 Coccinelle.dickson Make mem_permut_mem defax
R31034:31045 Coccinelle.dickson Make permut_consn thm
R31016:31029 Coccinelle.dickson Make mem_permut_mem defax
R31034:31045 Coccinelle.dickson Make permut_consn thm
R31061:31069 Coccinelle.dickson Make consn_app thm
R31061:31069 Coccinelle.dickson Make consn_app thm
R31083:31092 Coccinelle.more_list <> mem_or_app thm
R31083:31092 Coccinelle.more_list <> mem_or_app thm
R31119:31129 Coccinelle.dickson Make appendn_app thm
R31143:31152 Coccinelle.more_list <> mem_or_app thm
R31180:31189 Coccinelle.more_list <> mem_or_app thm
R31204:31213 Coccinelle.more_list <> mem_insert thm
R31119:31129 Coccinelle.dickson Make appendn_app thm
R31119:31129 Coccinelle.dickson Make appendn_app thm
R31143:31152 Coccinelle.more_list <> mem_or_app thm
R31143:31152 Coccinelle.more_list <> mem_or_app thm
R31180:31189 Coccinelle.more_list <> mem_or_app thm
R31180:31189 Coccinelle.more_list <> mem_or_app thm
R31204:31213 Coccinelle.more_list <> mem_insert thm
R31270:31283 Coccinelle.dickson Make mem_permut_mem defax
R31270:31283 Coccinelle.dickson Make mem_permut_mem defax
R31270:31283 Coccinelle.dickson Make mem_permut_mem defax
R31342:31350 Coccinelle.dickson Make consn_app thm
R31366:31375 Coccinelle.more_list <> mem_insert thm
R31389:31397 Coccinelle.dickson Make consn_app thm
R31409:31422 Coccinelle.dickson Make mem_permut_mem defax
R31427:31438 Coccinelle.dickson Make permut_consn thm
R31454:31462 Coccinelle.dickson Make consn_app thm
R31476:31485 Coccinelle.more_list <> mem_or_app thm
R31342:31350 Coccinelle.dickson Make consn_app thm
R31342:31350 Coccinelle.dickson Make consn_app thm
R31366:31375 Coccinelle.more_list <> mem_insert thm
R31389:31397 Coccinelle.dickson Make consn_app thm
R31389:31397 Coccinelle.dickson Make consn_app thm
R31409:31422 Coccinelle.dickson Make mem_permut_mem defax
R31427:31438 Coccinelle.dickson Make permut_consn thm
R31409:31422 Coccinelle.dickson Make mem_permut_mem defax
R31427:31438 Coccinelle.dickson Make permut_consn thm
R31454:31462 Coccinelle.dickson Make consn_app thm
R31454:31462 Coccinelle.dickson Make consn_app thm
R31476:31485 Coccinelle.more_list <> mem_or_app thm
R31476:31485 Coccinelle.more_list <> mem_or_app thm
R31515:31525 Coccinelle.dickson Make appendn_app thm
R31552:31565 Coccinelle.dickson Make mem_permut_mem defax
R31570:31583 Coccinelle.dickson Make permut_appendn thm
R31515:31525 Coccinelle.dickson Make appendn_app thm
R31515:31525 Coccinelle.dickson Make appendn_app thm
R31552:31565 Coccinelle.dickson Make mem_permut_mem defax
R31570:31583 Coccinelle.dickson Make permut_appendn thm
R31552:31565 Coccinelle.dickson Make mem_permut_mem defax
R31570:31583 Coccinelle.dickson Make permut_appendn thm
R31611:31621 Coccinelle.dickson Make appendn_app thm
R31635:31644 Coccinelle.more_list <> mem_or_app thm
R31655:31665 Coccinelle.dickson Make appendn_app thm
R31611:31621 Coccinelle.dickson Make appendn_app thm
R31611:31621 Coccinelle.dickson Make appendn_app thm
R31635:31644 Coccinelle.more_list <> mem_or_app thm
R31635:31644 Coccinelle.more_list <> mem_or_app thm
R31655:31665 Coccinelle.dickson Make appendn_app thm
R31655:31665 Coccinelle.dickson Make appendn_app thm
R31692:31701 Coccinelle.more_list <> mem_or_app thm
R31794:31803 Coccinelle.more_list <> mem_or_app thm
R31692:31701 Coccinelle.more_list <> mem_or_app thm
R31692:31701 Coccinelle.more_list <> mem_or_app thm
R31794:31803 Coccinelle.more_list <> mem_or_app thm
R31794:31803 Coccinelle.more_list <> mem_or_app thm
R31850:31852 Coccinelle.more_list <> mem def
R31854:31857 Coccinelle.dickson Make eq_A defax
R31850:31852 Coccinelle.more_list <> mem def
R31854:31857 Coccinelle.dickson Make eq_A defax
R31931:31933 Coccinelle.more_list <> mem def
R31943:31949 Coccinelle.dickson Make appendn def
R31935:31938 Coccinelle.dickson Make eq_A defax
R31931:31933 Coccinelle.more_list <> mem def
R31943:31949 Coccinelle.dickson Make appendn def
R31935:31938 Coccinelle.dickson Make eq_A defax
R31975:31987 Coccinelle.more_list <> mem_split_set thm
R31993:32002 Coccinelle.dickson Make eq_bool_ok defax
R31975:31987 Coccinelle.more_list <> mem_split_set thm
R31993:32002 Coccinelle.dickson Make eq_bool_ok defax
R32077:32088 Coccinelle.dickson Make permut_trans defax
R32091:32100 Coccinelle.dickson Make permut_sym defax
R32077:32088 Coccinelle.dickson Make permut_trans defax
R32091:32100 Coccinelle.dickson Make permut_sym defax
R32142:32148 Coq.Lists.List <> ass_app syndef
R32169:32186 Coccinelle.dickson Make permut_cons_inside defax
R32207:32213 Coq.Lists.List <> ass_app syndef
R32142:32148 Coq.Lists.List <> ass_app syndef
R32142:32148 Coq.Lists.List <> ass_app syndef
R32169:32186 Coccinelle.dickson Make permut_cons_inside defax
R32169:32186 Coccinelle.dickson Make permut_cons_inside defax
R32169:32186 Coccinelle.dickson Make permut_cons_inside defax
R32207:32213 Coq.Lists.List <> ass_app syndef
R32207:32213 Coq.Lists.List <> ass_app syndef
R32207:32213 Coq.Lists.List <> ass_app syndef
R32207:32213 Coq.Lists.List <> ass_app syndef
R32235:32255 Coccinelle.dickson Make remove_equiv_is_sound defax
R32258:32262 Coccinelle.dickson Make consn def
R32283:32294 Coccinelle.more_list <> remove_equiv def
R32307:32311 Coccinelle.dickson Make consn def
R32298:32304 Coccinelle.dickson Make eq_bool defax
R32296:32296 Coccinelle.dickson Make A defax
R32383:32403 Coccinelle.dickson Make multiset_closure_aux3 thm
R32235:32255 Coccinelle.dickson Make remove_equiv_is_sound defax
R32258:32262 Coccinelle.dickson Make consn def
R32283:32294 Coccinelle.more_list <> remove_equiv def
R32307:32311 Coccinelle.dickson Make consn def
R32298:32304 Coccinelle.dickson Make eq_bool defax
R32296:32296 Coccinelle.dickson Make A defax
R32383:32403 Coccinelle.dickson Make multiset_closure_aux3 thm
R32480:32483 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32456:32456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32458:32459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32479:32479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32463:32467 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32478:32478 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32468:32474 Coccinelle.dickson Make appendn def
R32500:32504 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32516:32516 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32508:32511 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32480:32483 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32456:32456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32458:32459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32479:32479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32463:32467 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32478:32478 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32468:32474 Coccinelle.dickson Make appendn def
R32500:32504 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32516:32516 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32508:32511 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32561:32564 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32540:32551 Coccinelle.dickson Make permut_trans defax
R32561:32564 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32540:32551 Coccinelle.dickson Make permut_trans defax
R32609:32613 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32638:32638 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32623:32626 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32614:32620 Coccinelle.dickson Make appendn def
R32630:32633 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32588:32599 Coccinelle.dickson Make permut_trans defax
R32609:32613 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32638:32638 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32623:32626 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32614:32620 Coccinelle.dickson Make appendn def
R32630:32633 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32588:32599 Coccinelle.dickson Make permut_trans defax
R32653:32663 Coccinelle.dickson Make permut_app1 defax
R32653:32663 Coccinelle.dickson Make permut_app1 defax
R32653:32663 Coccinelle.dickson Make permut_app1 defax
R32691:32697 Coq.Lists.List <> ass_app syndef
R32716:32726 Coccinelle.dickson Make permut_app2 defax
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32691:32697 Coq.Lists.List <> ass_app syndef
R32716:32726 Coccinelle.dickson Make permut_app2 defax
R32716:32726 Coccinelle.dickson Make permut_app2 defax
R32716:32726 Coccinelle.dickson Make permut_app2 defax
R32716:32726 Coccinelle.dickson Make permut_app2 defax
R32754:32754 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32764:32768 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32757:32760 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32769:32775 Coccinelle.dickson Make appendn def
R32735:32746 Coccinelle.dickson Make permut_trans defax
R32754:32754 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32764:32768 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32757:32760 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R32769:32775 Coccinelle.dickson Make appendn def
R32735:32746 Coccinelle.dickson Make permut_trans defax
R32792:32802 Coccinelle.dickson Make permut_app2 defax
R32792:32802 Coccinelle.dickson Make permut_app2 defax
R32792:32802 Coccinelle.dickson Make permut_app2 defax
R32828:32834 Coq.Lists.List <> ass_app syndef
R32845:32856 Coccinelle.dickson Make permut_trans defax
R32859:32877 Coccinelle.dickson Make list_permut_app_app defax
R32899:32909 Coccinelle.dickson Make permut_app2 defax
R32923:32929 Coq.Lists.List <> ass_app syndef
R32943:32953 Coccinelle.dickson Make appendn_app thm
R32967:32977 Coccinelle.dickson Make permut_app1 defax
R32828:32834 Coq.Lists.List <> ass_app syndef
R32828:32834 Coq.Lists.List <> ass_app syndef
R32845:32856 Coccinelle.dickson Make permut_trans defax
R32859:32877 Coccinelle.dickson Make list_permut_app_app defax
R32899:32909 Coccinelle.dickson Make permut_app2 defax
R32899:32909 Coccinelle.dickson Make permut_app2 defax
R32923:32929 Coq.Lists.List <> ass_app syndef
R32923:32929 Coq.Lists.List <> ass_app syndef
R32943:32953 Coccinelle.dickson Make appendn_app thm
R32943:32953 Coccinelle.dickson Make appendn_app thm
R32967:32977 Coccinelle.dickson Make permut_app1 defax
R32967:32977 Coccinelle.dickson Make permut_app1 defax
R32986:32999 Coccinelle.dickson Make permut_appendn thm
R32986:32999 Coccinelle.dickson Make permut_appendn thm
R33053:33056 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33046:33050 Coccinelle.dickson Make consn def
R33060:33063 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33066:33069 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33027:33038 Coccinelle.dickson Make permut_trans defax
R33053:33056 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33046:33050 Coccinelle.dickson Make consn def
R33060:33063 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33066:33069 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33027:33038 Coccinelle.dickson Make permut_trans defax
R33104:33110 Coq.Lists.List <> ass_app syndef
R33119:33128 Coccinelle.dickson Make permut_sym defax
R33143:33160 Coccinelle.dickson Make permut_cons_inside defax
R33104:33110 Coq.Lists.List <> ass_app syndef
R33104:33110 Coq.Lists.List <> ass_app syndef
R33119:33128 Coccinelle.dickson Make permut_sym defax
R33143:33160 Coccinelle.dickson Make permut_cons_inside defax
R33143:33160 Coccinelle.dickson Make permut_cons_inside defax
R33143:33160 Coccinelle.dickson Make permut_cons_inside defax
R33185:33191 Coq.Lists.List <> ass_app syndef
R33210:33220 Coccinelle.dickson Make permut_app2 defax
R33185:33191 Coq.Lists.List <> ass_app syndef
R33185:33191 Coq.Lists.List <> ass_app syndef
R33185:33191 Coq.Lists.List <> ass_app syndef
R33185:33191 Coq.Lists.List <> ass_app syndef
R33210:33220 Coccinelle.dickson Make permut_app2 defax
R33210:33220 Coccinelle.dickson Make permut_app2 defax
R33210:33220 Coccinelle.dickson Make permut_app2 defax
R33210:33220 Coccinelle.dickson Make permut_app2 defax
R33257:33260 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33248:33252 Coccinelle.dickson Make consn def
R33261:33265 Coccinelle.dickson Make consn def
R33229:33240 Coccinelle.dickson Make permut_trans defax
R33257:33260 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33248:33252 Coccinelle.dickson Make consn def
R33261:33265 Coccinelle.dickson Make consn def
R33229:33240 Coccinelle.dickson Make permut_trans defax
R33283:33293 Coccinelle.dickson Make permut_app1 defax
R33302:33311 Coccinelle.dickson Make permut_sym defax
R33283:33293 Coccinelle.dickson Make permut_app1 defax
R33283:33293 Coccinelle.dickson Make permut_app1 defax
R33302:33311 Coccinelle.dickson Make permut_sym defax
R33337:33345 Coccinelle.dickson Make consn_app thm
R33354:33365 Coccinelle.dickson Make permut_consn thm
R33337:33345 Coccinelle.dickson Make consn_app thm
R33337:33345 Coccinelle.dickson Make consn_app thm
R33354:33365 Coccinelle.dickson Make permut_consn thm
R33399:33402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33374:33389 Coccinelle.dickson Make permut_trans defax
R33399:33402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R33374:33389 Coccinelle.dickson Make permut_trans defax
R33415:33437 Coccinelle.dickson Make list_permut_app_app defax
R33415:33437 Coccinelle.dickson Make list_permut_app_app defax
R33446:33459 Coccinelle.dickson Make permut_sym defax
R33446:33459 Coccinelle.dickson Make permut_sym defax
R33622:33631 Coccinelle.more_list <> mem_or_app thm
R33622:33631 Coccinelle.more_list <> mem_or_app thm
R33622:33631 Coccinelle.more_list <> mem_or_app thm
R33712:33725 Coccinelle.dickson Make mem_permut_mem defax
R33712:33725 Coccinelle.dickson Make mem_permut_mem defax
R33712:33725 Coccinelle.dickson Make mem_permut_mem defax
R33746:33755 Coccinelle.more_list <> mem_or_app thm
R33746:33755 Coccinelle.more_list <> mem_or_app thm
R33746:33755 Coccinelle.more_list <> mem_or_app thm
R33784:33793 Coccinelle.dickson Make in_appendn thm
R33784:33793 Coccinelle.dickson Make in_appendn thm
R33907:33930 Coccinelle.list_permut <> in_permut_in thm
R33907:33930 Coccinelle.list_permut <> in_permut_in thm
R33907:33930 Coccinelle.list_permut <> in_permut_in thm
R33943:33951 Coq.Lists.List <> in_or_app thm
R33943:33951 Coq.Lists.List <> in_or_app thm
R33993:34006 Coccinelle.dickson Make mem_permut_mem defax
R34027:34036 Coccinelle.more_list <> mem_or_app thm
R33993:34006 Coccinelle.dickson Make mem_permut_mem defax
R33993:34006 Coccinelle.dickson Make mem_permut_mem defax
R34027:34036 Coccinelle.more_list <> mem_or_app thm
R34027:34036 Coccinelle.more_list <> mem_or_app thm
R34057:34070 Coccinelle.dickson Make mem_permut_mem defax
R34057:34070 Coccinelle.dickson Make mem_permut_mem defax
R34057:34070 Coccinelle.dickson Make mem_permut_mem defax
R34087:34095 Coccinelle.dickson Make mem_consn thm
R34087:34095 Coccinelle.dickson Make mem_consn thm
R34087:34095 Coccinelle.dickson Make mem_consn thm
R34162:34185 Coccinelle.list_permut <> in_permut_in thm
R34198:34206 Coq.Lists.List <> in_or_app thm
R34162:34185 Coccinelle.list_permut <> in_permut_in thm
R34162:34185 Coccinelle.list_permut <> in_permut_in thm
R34198:34206 Coq.Lists.List <> in_or_app thm
R34260:34266 Coq.Lists.List <> ass_app syndef
R34277:34283 Coq.Lists.List <> ass_app syndef
R34260:34266 Coq.Lists.List <> ass_app syndef
R34260:34266 Coq.Lists.List <> ass_app syndef
R34277:34283 Coq.Lists.List <> ass_app syndef
R34277:34283 Coq.Lists.List <> ass_app syndef
R34330:34339 Coccinelle.more_list <> mem_or_app thm
R34330:34339 Coccinelle.more_list <> mem_or_app thm
R34330:34339 Coccinelle.more_list <> mem_or_app thm
R34458:34467 Coccinelle.more_list <> mem_or_app thm
R34458:34467 Coccinelle.more_list <> mem_or_app thm
R34458:34467 Coccinelle.more_list <> mem_or_app thm
R34568:34581 Coccinelle.dickson Make mem_permut_mem defax
R34603:34612 Coccinelle.more_list <> mem_or_app thm
R34568:34581 Coccinelle.dickson Make mem_permut_mem defax
R34568:34581 Coccinelle.dickson Make mem_permut_mem defax
R34603:34612 Coccinelle.more_list <> mem_or_app thm
R34603:34612 Coccinelle.more_list <> mem_or_app thm
R34667:34676 Coccinelle.dickson Make in_appendn thm
R34667:34676 Coccinelle.dickson Make in_appendn thm
R34817:34840 Coccinelle.list_permut <> in_permut_in thm
R34817:34840 Coccinelle.list_permut <> in_permut_in thm
R34817:34840 Coccinelle.list_permut <> in_permut_in thm
R34853:34861 Coq.Lists.List <> in_or_app thm
R34853:34861 Coq.Lists.List <> in_or_app thm
R34886:34895 Coccinelle.more_list <> mem_eq_mem thm
R34897:34904 Coccinelle.dickson Make eq_proof defax
R34886:34895 Coccinelle.more_list <> mem_eq_mem thm
R34897:34904 Coccinelle.dickson Make eq_proof defax
R34951:34964 Coccinelle.dickson Make mem_permut_mem defax
R34986:34995 Coccinelle.more_list <> mem_or_app thm
R35016:35029 Coccinelle.dickson Make mem_permut_mem defax
R34951:34964 Coccinelle.dickson Make mem_permut_mem defax
R34951:34964 Coccinelle.dickson Make mem_permut_mem defax
R34986:34995 Coccinelle.more_list <> mem_or_app thm
R34986:34995 Coccinelle.more_list <> mem_or_app thm
R35016:35029 Coccinelle.dickson Make mem_permut_mem defax
R35016:35029 Coccinelle.dickson Make mem_permut_mem defax
R35046:35054 Coccinelle.dickson Make mem_consn thm
R35046:35054 Coccinelle.dickson Make mem_consn thm
R35046:35054 Coccinelle.dickson Make mem_consn thm
R35088:35097 Coccinelle.more_list <> mem_or_app thm
R35088:35097 Coccinelle.more_list <> mem_or_app thm
R35088:35097 Coccinelle.more_list <> mem_or_app thm
R35199:35212 Coccinelle.dickson Make mem_permut_mem defax
R35199:35212 Coccinelle.dickson Make mem_permut_mem defax
R35199:35212 Coccinelle.dickson Make mem_permut_mem defax
R35272:35285 Coccinelle.dickson Make mem_permut_mem defax
R35290:35301 Coccinelle.dickson Make permut_consn thm
R35317:35325 Coccinelle.dickson Make consn_app thm
R35340:35349 Coccinelle.more_list <> mem_or_app thm
R35272:35285 Coccinelle.dickson Make mem_permut_mem defax
R35290:35301 Coccinelle.dickson Make permut_consn thm
R35272:35285 Coccinelle.dickson Make mem_permut_mem defax
R35290:35301 Coccinelle.dickson Make permut_consn thm
R35317:35325 Coccinelle.dickson Make consn_app thm
R35317:35325 Coccinelle.dickson Make consn_app thm
R35340:35349 Coccinelle.more_list <> mem_or_app thm
R35340:35349 Coccinelle.more_list <> mem_or_app thm
R35377:35390 Coccinelle.dickson Make mem_permut_mem defax
R35395:35408 Coccinelle.dickson Make permut_appendn thm
R35424:35434 Coccinelle.dickson Make appendn_app thm
R35449:35458 Coccinelle.more_list <> mem_or_app thm
R35377:35390 Coccinelle.dickson Make mem_permut_mem defax
R35395:35408 Coccinelle.dickson Make permut_appendn thm
R35377:35390 Coccinelle.dickson Make mem_permut_mem defax
R35395:35408 Coccinelle.dickson Make permut_appendn thm
R35424:35434 Coccinelle.dickson Make appendn_app thm
R35424:35434 Coccinelle.dickson Make appendn_app thm
R35449:35458 Coccinelle.more_list <> mem_or_app thm
R35449:35458 Coccinelle.more_list <> mem_or_app thm
R35577:35590 Coccinelle.dickson Make mem_permut_mem defax
R35595:35608 Coccinelle.dickson Make permut_appendn thm
R35624:35634 Coccinelle.dickson Make appendn_app thm
R35648:35657 Coccinelle.more_list <> mem_or_app thm
R35577:35590 Coccinelle.dickson Make mem_permut_mem defax
R35595:35608 Coccinelle.dickson Make permut_appendn thm
R35577:35590 Coccinelle.dickson Make mem_permut_mem defax
R35595:35608 Coccinelle.dickson Make permut_appendn thm
R35624:35634 Coccinelle.dickson Make appendn_app thm
R35624:35634 Coccinelle.dickson Make appendn_app thm
R35648:35657 Coccinelle.more_list <> mem_or_app thm
R35648:35657 Coccinelle.more_list <> mem_or_app thm
R35718:35731 Coccinelle.dickson Make mem_permut_mem defax
R35736:35747 Coccinelle.dickson Make permut_consn thm
R35763:35771 Coccinelle.dickson Make consn_app thm
R35786:35795 Coccinelle.more_list <> mem_or_app thm
R35718:35731 Coccinelle.dickson Make mem_permut_mem defax
R35736:35747 Coccinelle.dickson Make permut_consn thm
R35718:35731 Coccinelle.dickson Make mem_permut_mem defax
R35736:35747 Coccinelle.dickson Make permut_consn thm
R35763:35771 Coccinelle.dickson Make consn_app thm
R35763:35771 Coccinelle.dickson Make consn_app thm
R35786:35795 Coccinelle.more_list <> mem_or_app thm
R35786:35795 Coccinelle.more_list <> mem_or_app thm
R35823:35836 Coccinelle.dickson Make mem_permut_mem defax
R35841:35854 Coccinelle.dickson Make permut_appendn thm
R35870:35880 Coccinelle.dickson Make appendn_app thm
R35895:35904 Coccinelle.more_list <> mem_or_app thm
R35823:35836 Coccinelle.dickson Make mem_permut_mem defax
R35841:35854 Coccinelle.dickson Make permut_appendn thm
R35823:35836 Coccinelle.dickson Make mem_permut_mem defax
R35841:35854 Coccinelle.dickson Make permut_appendn thm
R35870:35880 Coccinelle.dickson Make appendn_app thm
R35870:35880 Coccinelle.dickson Make appendn_app thm
R35895:35904 Coccinelle.more_list <> mem_or_app thm
R35895:35904 Coccinelle.more_list <> mem_or_app thm
prf 35951:35997 Make context_trans_clos_multiset_extension_step_cons
R36027:36030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36031:36031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36048:36055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36130:36158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36159:36168 Coccinelle.TransClosure <> trans_clos ind
R36201:36202 Coccinelle.dickson <> l2 var
R36198:36199 Coccinelle.dickson <> l1 var
R36171:36193 Coccinelle.dickson Make multiset_extension_step ind
R36195:36195 Coccinelle.dickson <> R var
R36072:36081 Coccinelle.TransClosure <> trans_clos ind
R36123:36126 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R36122:36122 Coccinelle.dickson <> a var
R36127:36128 Coccinelle.dickson <> l2 var
R36113:36116 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R36112:36112 Coccinelle.dickson <> a var
R36117:36118 Coccinelle.dickson <> l1 var
R36084:36106 Coccinelle.dickson Make multiset_extension_step ind
R36108:36108 Coccinelle.dickson <> R var
R36042:36042 Coq.Init.Logic <> :type_scope:'~'_x not
R36043:36043 Coccinelle.dickson <> R var
R36047:36047 Coccinelle.dickson <> a var
R36045:36045 Coccinelle.dickson <> a var
R36013:36022 Coq.Relations.Relation_Definitions <> transitive def
R36026:36026 Coccinelle.dickson <> R var
R36259:36274 Coccinelle.dickson Make multiset_closure thm
R36259:36274 Coccinelle.dickson Make multiset_closure thm
R36365:36375 Coccinelle.more_list <> mem_bool_ok thm
R36381:36390 Coccinelle.dickson Make eq_bool_ok defax
R36365:36375 Coccinelle.more_list <> mem_bool_ok thm
R36381:36390 Coccinelle.dickson Make eq_bool_ok defax
R36404:36411 Coccinelle.more_list <> mem_bool def
R36413:36423 Coccinelle.dickson DS1 eq_bool defax
R36404:36411 Coccinelle.more_list <> mem_bool def
R36413:36423 Coccinelle.dickson DS1 eq_bool defax
R36476:36488 Coccinelle.more_list <> mem_split_set thm
R36494:36503 Coccinelle.dickson Make eq_bool_ok defax
R36476:36488 Coccinelle.more_list <> mem_split_set thm
R36494:36503 Coccinelle.dickson Make eq_bool_ok defax
R36603:36609 Coq.Lists.List <> ass_app syndef
R36629:36646 Coccinelle.dickson Make permut_cons_inside defax
R36667:36673 Coq.Lists.List <> ass_app syndef
R36603:36609 Coq.Lists.List <> ass_app syndef
R36603:36609 Coq.Lists.List <> ass_app syndef
R36629:36646 Coccinelle.dickson Make permut_cons_inside defax
R36629:36646 Coccinelle.dickson Make permut_cons_inside defax
R36629:36646 Coccinelle.dickson Make permut_cons_inside defax
R36667:36673 Coq.Lists.List <> ass_app syndef
R36667:36673 Coq.Lists.List <> ass_app syndef
R36667:36673 Coq.Lists.List <> ass_app syndef
R36667:36673 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36716:36733 Coccinelle.dickson Make permut_cons_inside defax
R36754:36760 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36690:36696 Coq.Lists.List <> ass_app syndef
R36716:36733 Coccinelle.dickson Make permut_cons_inside defax
R36716:36733 Coccinelle.dickson Make permut_cons_inside defax
R36716:36733 Coccinelle.dickson Make permut_cons_inside defax
R36754:36760 Coq.Lists.List <> ass_app syndef
R36754:36760 Coq.Lists.List <> ass_app syndef
R36754:36760 Coq.Lists.List <> ass_app syndef
R36754:36760 Coq.Lists.List <> ass_app syndef
R36776:36795 Coccinelle.dickson Make multiset_closure_aux thm
R36802:36805 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36776:36795 Coccinelle.dickson Make multiset_closure_aux thm
R36802:36805 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36907:36915 Coq.Init.Logic <> False_rec scheme
R36907:36915 Coq.Init.Logic <> False_rec scheme
R36975:36977 Coccinelle.more_list <> mem def
R36995:36998 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36987:36991 Coccinelle.dickson Make consn def
R36979:36982 Coccinelle.dickson Make eq_A defax
R36975:36977 Coccinelle.more_list <> mem def
R36995:36998 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36987:36991 Coccinelle.dickson Make consn def
R36979:36982 Coccinelle.dickson Make eq_A defax
R37016:37029 Coccinelle.dickson Make mem_permut_mem defax
R37016:37029 Coccinelle.dickson Make mem_permut_mem defax
R37016:37029 Coccinelle.dickson Make mem_permut_mem defax
R37060:37069 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37075:37082 Coccinelle.dickson Make eq_proof defax
R37060:37069 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37075:37082 Coccinelle.dickson Make eq_proof defax
R37097:37106 Coccinelle.more_list <> mem_or_app thm
R37097:37106 Coccinelle.more_list <> mem_or_app thm
R37097:37106 Coccinelle.more_list <> mem_or_app thm
R37196:37198 Coccinelle.more_list <> mem def
R37200:37203 Coccinelle.dickson Make eq_A defax
R37196:37198 Coccinelle.more_list <> mem def
R37200:37203 Coccinelle.dickson Make eq_A defax
R37252:37254 Coccinelle.more_list <> mem def
R37274:37277 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37264:37270 Coccinelle.dickson Make appendn def
R37256:37259 Coccinelle.dickson Make eq_A defax
R37252:37254 Coccinelle.more_list <> mem def
R37274:37277 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37264:37270 Coccinelle.dickson Make appendn def
R37256:37259 Coccinelle.dickson Make eq_A defax
R37295:37308 Coccinelle.dickson Make mem_permut_mem defax
R37295:37308 Coccinelle.dickson Make mem_permut_mem defax
R37295:37308 Coccinelle.dickson Make mem_permut_mem defax
R37339:37348 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37354:37361 Coccinelle.dickson Make eq_proof defax
R37339:37348 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37354:37361 Coccinelle.dickson Make eq_proof defax
R37376:37385 Coccinelle.more_list <> mem_or_app thm
R37376:37385 Coccinelle.more_list <> mem_or_app thm
R37376:37385 Coccinelle.more_list <> mem_or_app thm
R37475:37477 Coccinelle.more_list <> mem def
R37479:37482 Coccinelle.dickson Make eq_A defax
R37475:37477 Coccinelle.more_list <> mem def
R37479:37482 Coccinelle.dickson Make eq_A defax
prf 37512:37565 Make remove_context_trans_clos_multiset_extension_step_app1
R37595:37598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37599:37599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37616:37623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37698:37726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37727:37736 Coccinelle.TransClosure <> trans_clos ind
R37769:37770 Coccinelle.dickson <> l2 var
R37766:37767 Coccinelle.dickson <> l1 var
R37739:37761 Coccinelle.dickson Make multiset_extension_step ind
R37763:37763 Coccinelle.dickson <> R var
R37640:37649 Coccinelle.TransClosure <> trans_clos ind
R37691:37694 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37690:37690 Coccinelle.dickson <> l var
R37695:37696 Coccinelle.dickson <> l2 var
R37681:37684 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37680:37680 Coccinelle.dickson <> l var
R37685:37686 Coccinelle.dickson <> l1 var
R37652:37674 Coccinelle.dickson Make multiset_extension_step ind
R37676:37676 Coccinelle.dickson <> R var
R37610:37610 Coq.Init.Logic <> :type_scope:'~'_x not
R37611:37611 Coccinelle.dickson <> R var
R37615:37615 Coccinelle.dickson <> a var
R37613:37613 Coccinelle.dickson <> a var
R37581:37590 Coq.Relations.Relation_Definitions <> transitive def
R37594:37594 Coccinelle.dickson <> R var
R37914:37960 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
R37914:37960 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
prf 37991:38009 Make nil_is_the_smallest
R38029:38038 Coccinelle.TransClosure <> trans_clos ind
R38074:38077 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38073:38073 Coccinelle.dickson <> e var
R38078:38078 Coccinelle.dickson <> l var
R38068:38070 Coq.Init.Datatypes <> nil constr
R38041:38063 Coccinelle.dickson Make multiset_extension_step ind
R38065:38065 Coccinelle.dickson <> R var
R38170:38175 Coccinelle.TransClosure <> t_step constr
R38187:38194 Coccinelle.dickson Make rmv_case constr
R38206:38208 Coq.Init.Datatypes <> nil constr
R38202:38204 Coq.Init.Datatypes <> nil constr
R38170:38175 Coccinelle.TransClosure <> t_step constr
R38187:38194 Coccinelle.dickson Make rmv_case constr
R38206:38208 Coq.Init.Datatypes <> nil constr
R38202:38204 Coq.Init.Datatypes <> nil constr
R38286:38289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38258:38276 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38286:38289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38258:38276 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38309:38314 Coccinelle.TransClosure <> t_step constr
R38326:38333 Coccinelle.dickson Make rmv_case constr
R38351:38353 Coq.Init.Datatypes <> nil constr
R38344:38347 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38309:38314 Coccinelle.TransClosure <> t_step constr
R38326:38333 Coccinelle.dickson Make rmv_case constr
R38351:38353 Coq.Init.Datatypes <> nil constr
R38344:38347 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38398:38415 Coccinelle.dickson Make permut_cons_inside defax
R38450:38453 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38454:38456 Coq.Init.Datatypes <> nil constr
R38441:38444 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38398:38415 Coccinelle.dickson Make permut_cons_inside defax
R38450:38453 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38454:38456 Coq.Init.Datatypes <> nil constr
R38441:38444 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38398:38415 Coccinelle.dickson Make permut_cons_inside defax
R38450:38453 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38454:38456 Coq.Init.Datatypes <> nil constr
R38441:38444 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38398:38415 Coccinelle.dickson Make permut_cons_inside defax
R38450:38453 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38454:38456 Coq.Init.Datatypes <> nil constr
R38441:38444 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38476:38485 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38491:38498 Coccinelle.dickson Make eq_proof defax
R38476:38485 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38491:38498 Coccinelle.dickson Make eq_proof defax
sec 38516:38519 Make Mult
var 38532:38532 Make.Mult R
R38536:38543 Coq.Relations.Relation_Definitions <> relation def
R38545:38545 Coccinelle.dickson Make A defax
var 38557:38562 Make.Mult R_bool
R38567:38570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38572:38575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38576:38579 Coq.Init.Datatypes <> bool ind
R38571:38571 Coccinelle.dickson Make A defax
R38566:38566 Coccinelle.dickson Make A defax
var 38591:38599 Make.Mult R_bool_ok
R38631:38636 Coccinelle.dickson <> Make.Mult.R_bool var
R38641:38642 Coccinelle.dickson <> a2 var
R38638:38639 Coccinelle.dickson <> a1 var
R38654:38657 Coq.Init.Datatypes <> true constr
R38662:38662 Coccinelle.dickson <> Make.Mult.R var
R38667:38668 Coccinelle.dickson <> a2 var
R38664:38665 Coccinelle.dickson <> a1 var
R38675:38679 Coq.Init.Datatypes <> false constr
R38684:38685 Coq.Init.Logic <> :type_scope:'~'_x not
R38686:38686 Coccinelle.dickson <> Make.Mult.R var
R38691:38692 Coccinelle.dickson <> a2 var
R38688:38689 Coccinelle.dickson <> a1 var
def 38714:38717 Make mult
R38728:38731 Coq.Init.Datatypes <> list ind
R38733:38733 Coccinelle.dickson Make A defax
R38738:38741 Coccinelle.ordered_set <> comp ind
R38754:38765 Coccinelle.more_list <> remove_equiv def
R38778:38779 Coccinelle.dickson <> l2 var
R38775:38776 Coccinelle.dickson <> l1 var
R38767:38773 Coccinelle.dickson Make eq_bool defax
R38792:38792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38796:38797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38801:38801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38793:38795 Coq.Init.Datatypes <> nil constr
R38798:38800 Coq.Init.Datatypes <> nil constr
R38806:38815 Coccinelle.ordered_set <> Equivalent constr
R38823:38823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38826:38827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38830:38830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38843:38853 Coccinelle.more_list <> list_forall def
R38907:38908 Coccinelle.dickson <> l2 var
R38866:38876 Coccinelle.more_list <> list_exists def
R38903:38904 Coccinelle.dickson <> l1 var
R38889:38894 Coccinelle.dickson <> Make.Mult.R_bool var
R38899:38900 Coccinelle.dickson <> t1 var
R38896:38897 Coccinelle.dickson <> t2 var
R38925:38928 Coq.Init.Datatypes <> true constr
R38933:38944 Coccinelle.ordered_set <> Greater_than constr
R38949:38953 Coq.Init.Datatypes <> false constr
R38967:38977 Coccinelle.more_list <> list_forall def
R39031:39032 Coccinelle.dickson <> l1 var
R38990:39000 Coccinelle.more_list <> list_exists def
R39027:39028 Coccinelle.dickson <> l2 var
R39013:39018 Coccinelle.dickson <> Make.Mult.R_bool var
R39023:39024 Coccinelle.dickson <> t2 var
R39020:39021 Coccinelle.dickson <> t1 var
R39044:39047 Coq.Init.Datatypes <> true constr
R39052:39060 Coccinelle.ordered_set <> Less_than constr
R39067:39071 Coq.Init.Datatypes <> false constr
R39076:39087 Coccinelle.ordered_set <> Uncomparable constr
prf 39124:39135 Make greater_case
R39156:39156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39206:39212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39286:39292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39293:39299 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39302:39303 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39304:39310 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39313:39314 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39341:39374 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39315:39320 Coccinelle.dickson Make permut syndef
R39334:39337 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R39326:39330 Coccinelle.dickson Make consn def
R39332:39333 Coccinelle.dickson <> ll var
R39338:39339 Coccinelle.dickson <> le var
R39322:39323 Coccinelle.dickson <> l1 var
R39398:39432 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39494:39494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39375:39380 Coccinelle.dickson Make permut syndef
R39387:39393 Coccinelle.dickson Make appendn def
R39395:39396 Coccinelle.dickson <> ll var
R39383:39384 Coccinelle.dickson <> l2 var
R39458:39461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39485:39488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39489:39489 Coccinelle.dickson <> Make.Mult.R var
R39493:39493 Coccinelle.dickson <> a var
R39491:39491 Coccinelle.dickson <> b var
R39472:39474 Coccinelle.more_list <> mem def
R39483:39484 Coccinelle.dickson <> la var
R39481:39481 Coccinelle.dickson <> b var
R39476:39479 Coccinelle.dickson Make eq_A defax
R39446:39447 Coq.Lists.List <> In def
R39456:39457 Coccinelle.dickson <> ll var
R39449:39449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39451:39451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39454:39454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39450:39450 Coccinelle.dickson <> a var
R39452:39453 Coccinelle.dickson <> la var
R39279:39281 Coq.Init.Logic <> :type_scope:x_'='_x not
R39213:39223 Coccinelle.more_list <> list_forall def
R39277:39278 Coccinelle.dickson <> l2 var
R39236:39246 Coccinelle.more_list <> list_exists def
R39273:39274 Coccinelle.dickson <> l1 var
R39259:39264 Coccinelle.dickson <> Make.Mult.R_bool var
R39269:39270 Coccinelle.dickson <> t1 var
R39266:39267 Coccinelle.dickson <> t2 var
R39282:39285 Coq.Init.Datatypes <> true constr
R39180:39183 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39197:39200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39201:39205 Coq.Init.Logic <> False ind
R39184:39186 Coccinelle.more_list <> mem def
R39195:39196 Coccinelle.dickson <> l2 var
R39193:39193 Coccinelle.dickson <> a var
R39188:39191 Coccinelle.dickson Make eq_A defax
R39167:39169 Coccinelle.more_list <> mem def
R39178:39179 Coccinelle.dickson <> l1 var
R39176:39176 Coccinelle.dickson <> a var
R39171:39174 Coccinelle.dickson Make eq_A defax
R39606:39608 Coq.Init.Datatypes <> nil constr
R39610:39610 Coccinelle.dickson Make A defax
R39624:39626 Coq.Init.Datatypes <> nil constr
R39630:39632 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39629:39629 Coccinelle.dickson Make A defax
R39633:39636 Coq.Init.Datatypes <> list ind
R39638:39638 Coccinelle.dickson Make A defax
R39606:39608 Coq.Init.Datatypes <> nil constr
R39610:39610 Coccinelle.dickson Make A defax
R39624:39626 Coq.Init.Datatypes <> nil constr
R39630:39632 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39629:39629 Coccinelle.dickson Make A defax
R39633:39636 Coq.Init.Datatypes <> list ind
R39638:39638 Coccinelle.dickson Make A defax
R39683:39686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39701:39703 Coq.Init.Datatypes <> nil constr
R39707:39709 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39706:39706 Coccinelle.dickson Make A defax
R39710:39713 Coq.Init.Datatypes <> list ind
R39715:39715 Coccinelle.dickson Make A defax
R39683:39686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39701:39703 Coq.Init.Datatypes <> nil constr
R39707:39709 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39706:39706 Coccinelle.dickson Make A defax
R39710:39713 Coq.Init.Datatypes <> list ind
R39715:39715 Coccinelle.dickson Make A defax
R39770:39789 Coccinelle.more_list <> list_exists_is_sound thm
R39801:39801 Coccinelle.dickson Make A defax
R39806:39811 Coccinelle.dickson <> Make.Mult.R_bool var
R39816:39817 Coccinelle.dickson <> t1 var
R39831:39841 Coccinelle.more_list <> list_exists def
R39853:39853 Coccinelle.dickson Make A defax
R39858:39863 Coccinelle.dickson <> Make.Mult.R_bool var
R39868:39869 Coccinelle.dickson <> t1 var
R39770:39789 Coccinelle.more_list <> list_exists_is_sound thm
R39801:39801 Coccinelle.dickson Make A defax
R39806:39811 Coccinelle.dickson <> Make.Mult.R_bool var
R39816:39817 Coccinelle.dickson <> t1 var
R39831:39841 Coccinelle.more_list <> list_exists def
R39853:39853 Coccinelle.dickson Make A defax
R39858:39863 Coccinelle.dickson <> Make.Mult.R_bool var
R39868:39869 Coccinelle.dickson <> t1 var
R39898:39902 Coq.Init.Logic <> proj1 thm
R39907:39916 Coq.Init.Logic <> refl_equal syndef
R39898:39902 Coq.Init.Logic <> proj1 thm
R39907:39916 Coq.Init.Logic <> refl_equal syndef
R39984:39984 Coccinelle.dickson <> Make.Mult.R var
R39984:39984 Coccinelle.dickson <> Make.Mult.R var
R40006:40014 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40006:40014 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40074:40074 Coccinelle.dickson Make A defax
R40090:40093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40107:40110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40111:40115 Coq.Init.Logic <> False ind
R40094:40096 Coccinelle.more_list <> mem def
R40103:40103 Coccinelle.dickson <> x var
R40098:40101 Coccinelle.dickson Make eq_A defax
R40077:40079 Coccinelle.more_list <> mem def
R40086:40086 Coccinelle.dickson <> x var
R40081:40084 Coccinelle.dickson Make eq_A defax
R40074:40074 Coccinelle.dickson Make A defax
R40090:40093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40107:40110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40111:40115 Coq.Init.Logic <> False ind
R40094:40096 Coccinelle.more_list <> mem def
R40103:40103 Coccinelle.dickson <> x var
R40098:40101 Coccinelle.dickson Make eq_A defax
R40077:40079 Coccinelle.more_list <> mem def
R40086:40086 Coccinelle.dickson <> x var
R40081:40084 Coccinelle.dickson Make eq_A defax
R40236:40246 Coccinelle.more_list <> list_forall def
R40258:40258 Coccinelle.dickson Make A defax
R40263:40273 Coccinelle.more_list <> list_exists def
R40285:40285 Coccinelle.dickson Make A defax
R40290:40295 Coccinelle.dickson <> Make.Mult.R_bool var
R40300:40301 Coccinelle.dickson <> t1 var
R40297:40298 Coccinelle.dickson <> t2 var
R40236:40246 Coccinelle.more_list <> list_forall def
R40258:40258 Coccinelle.dickson Make A defax
R40263:40273 Coccinelle.more_list <> list_exists def
R40285:40285 Coccinelle.dickson Make A defax
R40290:40295 Coccinelle.dickson <> Make.Mult.R_bool var
R40300:40301 Coccinelle.dickson <> t1 var
R40297:40298 Coccinelle.dickson <> t2 var
R40500:40502 Coccinelle.more_list <> mem def
R40521:40524 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40513:40517 Coccinelle.dickson Make consn def
R40504:40507 Coccinelle.dickson Make eq_A defax
R40500:40502 Coccinelle.more_list <> mem def
R40521:40524 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40513:40517 Coccinelle.dickson Make consn def
R40504:40507 Coccinelle.dickson Make eq_A defax
R40543:40556 Coccinelle.dickson Make mem_permut_mem defax
R40572:40582 Coccinelle.more_list <> in_impl_mem thm
R40543:40556 Coccinelle.dickson Make mem_permut_mem defax
R40543:40556 Coccinelle.dickson Make mem_permut_mem defax
R40572:40582 Coccinelle.more_list <> in_impl_mem thm
R40608:40617 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40623:40630 Coccinelle.dickson Make eq_proof defax
R40608:40617 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40623:40630 Coccinelle.dickson Make eq_proof defax
R40645:40654 Coccinelle.more_list <> mem_or_app thm
R40645:40654 Coccinelle.more_list <> mem_or_app thm
R40645:40654 Coccinelle.more_list <> mem_or_app thm
R40753:40757 Coq.Init.Logic <> proj1 thm
R40760:40768 Coccinelle.dickson Make mem_consn thm
R40753:40757 Coq.Init.Logic <> proj1 thm
R40760:40768 Coccinelle.dickson Make mem_consn thm
R40826:40833 Coq.Lists.List <> In_split syndef
R40826:40833 Coq.Lists.List <> In_split syndef
R40906:40909 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40924:40927 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40910:40910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40913:40914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40923:40923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40917:40920 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40906:40909 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40924:40927 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40910:40910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40913:40914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40923:40923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40917:40920 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40950:40958 Coccinelle.dickson Make consn_app thm
R40976:40984 Coccinelle.dickson Make consn_app thm
R40950:40958 Coccinelle.dickson Make consn_app thm
R40950:40958 Coccinelle.dickson Make consn_app thm
R40976:40984 Coccinelle.dickson Make consn_app thm
R40976:40984 Coccinelle.dickson Make consn_app thm
R41030:41040 Coccinelle.dickson Make appendn_app thm
R41061:41078 Coccinelle.dickson Make permut_cons_inside defax
R41089:41099 Coccinelle.dickson Make appendn_app thm
R41030:41040 Coccinelle.dickson Make appendn_app thm
R41030:41040 Coccinelle.dickson Make appendn_app thm
R41061:41078 Coccinelle.dickson Make permut_cons_inside defax
R41061:41078 Coccinelle.dickson Make permut_cons_inside defax
R41061:41078 Coccinelle.dickson Make permut_cons_inside defax
R41089:41099 Coccinelle.dickson Make appendn_app thm
R41089:41099 Coccinelle.dickson Make appendn_app thm
R41089:41099 Coccinelle.dickson Make appendn_app thm
R41089:41099 Coccinelle.dickson Make appendn_app thm
R41137:41146 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41152:41159 Coccinelle.dickson Make eq_proof defax
R41137:41146 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41152:41159 Coccinelle.dickson Make eq_proof defax
R41202:41210 Coq.Lists.List <> in_app_or thm
R41202:41210 Coq.Lists.List <> in_app_or thm
R41325:41333 Coq.Lists.List <> in_or_app thm
R41325:41333 Coq.Lists.List <> in_or_app thm
R41551:41559 Coq.Lists.List <> in_or_app thm
R41551:41559 Coq.Lists.List <> in_or_app thm
R41596:41608 Coccinelle.more_list <> mem_split_set thm
R41614:41623 Coccinelle.dickson Make eq_bool_ok defax
R41596:41608 Coccinelle.more_list <> mem_split_set thm
R41614:41623 Coccinelle.dickson Make eq_bool_ok defax
R41740:41743 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41774:41777 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41759:41759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41762:41763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41773:41773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41766:41769 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41770:41772 Coq.Init.Datatypes <> nil constr
R41740:41743 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41774:41777 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41759:41759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41762:41763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41773:41773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41766:41769 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41770:41772 Coq.Init.Datatypes <> nil constr
R41830:41833 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41822:41826 Coccinelle.dickson Make consn def
R41837:41840 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41844:41847 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41803:41814 Coccinelle.dickson Make permut_trans defax
R41830:41833 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41822:41826 Coccinelle.dickson Make consn def
R41837:41840 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41844:41847 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41803:41814 Coccinelle.dickson Make permut_trans defax
R41875:41881 Coq.Lists.List <> ass_app syndef
R41890:41899 Coccinelle.dickson Make permut_sym defax
R41913:41930 Coccinelle.dickson Make permut_cons_inside defax
R41875:41881 Coq.Lists.List <> ass_app syndef
R41875:41881 Coq.Lists.List <> ass_app syndef
R41890:41899 Coccinelle.dickson Make permut_sym defax
R41913:41930 Coccinelle.dickson Make permut_cons_inside defax
R41913:41930 Coccinelle.dickson Make permut_cons_inside defax
R41913:41930 Coccinelle.dickson Make permut_cons_inside defax
R41950:41956 Coq.Lists.List <> ass_app syndef
R41950:41956 Coq.Lists.List <> ass_app syndef
R41950:41956 Coq.Lists.List <> ass_app syndef
R41990:42000 Coccinelle.dickson Make permut_cons defax
R41990:42000 Coccinelle.dickson Make permut_cons defax
R41990:42000 Coccinelle.dickson Make permut_cons defax
R41990:42000 Coccinelle.dickson Make permut_cons defax
R42019:42028 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42034:42041 Coccinelle.dickson Make eq_proof defax
R42019:42028 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42034:42041 Coccinelle.dickson Make eq_proof defax
R42307:42317 Coccinelle.more_list <> list_forall def
R42335:42335 Coccinelle.dickson Make A defax
R42347:42354 Coq.Bool.Bool <> ifb def
R42386:42396 Coccinelle.more_list <> list_exists def
R42408:42408 Coccinelle.dickson Make A defax
R42413:42418 Coccinelle.dickson <> Make.Mult.R_bool var
R42423:42424 Coccinelle.dickson <> t2 var
R42420:42421 Coccinelle.dickson <> t1 var
R42371:42374 Coq.Init.Datatypes <> true constr
R42357:42362 Coccinelle.dickson <> Make.Mult.R_bool var
R42364:42365 Coccinelle.dickson <> t1 var
R42307:42317 Coccinelle.more_list <> list_forall def
R42335:42335 Coccinelle.dickson Make A defax
R42347:42354 Coq.Bool.Bool <> ifb def
R42386:42396 Coccinelle.more_list <> list_exists def
R42408:42408 Coccinelle.dickson Make A defax
R42413:42418 Coccinelle.dickson <> Make.Mult.R_bool var
R42423:42424 Coccinelle.dickson <> t2 var
R42420:42421 Coccinelle.dickson <> t1 var
R42371:42374 Coq.Init.Datatypes <> true constr
R42357:42362 Coccinelle.dickson <> Make.Mult.R_bool var
R42364:42365 Coccinelle.dickson <> t1 var
R42492:42502 Coccinelle.more_list <> list_forall def
R42523:42523 Coccinelle.dickson Make A defax
R42538:42545 Coq.Bool.Bool <> ifb def
R42580:42590 Coccinelle.more_list <> list_exists def
R42602:42602 Coccinelle.dickson Make A defax
R42607:42612 Coccinelle.dickson <> Make.Mult.R_bool var
R42617:42618 Coccinelle.dickson <> t2 var
R42614:42615 Coccinelle.dickson <> t1 var
R42562:42565 Coq.Init.Datatypes <> true constr
R42548:42553 Coccinelle.dickson <> Make.Mult.R_bool var
R42555:42556 Coccinelle.dickson <> t1 var
R42492:42502 Coccinelle.more_list <> list_forall def
R42523:42523 Coccinelle.dickson Make A defax
R42538:42545 Coq.Bool.Bool <> ifb def
R42580:42590 Coccinelle.more_list <> list_exists def
R42602:42602 Coccinelle.dickson Make A defax
R42607:42612 Coccinelle.dickson <> Make.Mult.R_bool var
R42617:42618 Coccinelle.dickson <> t2 var
R42614:42615 Coccinelle.dickson <> t1 var
R42562:42565 Coq.Init.Datatypes <> true constr
R42548:42553 Coccinelle.dickson <> Make.Mult.R_bool var
R42555:42556 Coccinelle.dickson <> t1 var
prf 42674:42686 Make mult_is_sound
R42713:42716 Coccinelle.dickson Make mult def
R42721:42722 Coccinelle.dickson <> l2 var
R42718:42719 Coccinelle.dickson <> l1 var
R42733:42742 Coccinelle.ordered_set <> Equivalent constr
R42747:42752 Coccinelle.dickson Make permut syndef
R42757:42758 Coccinelle.dickson <> l2 var
R42754:42755 Coccinelle.dickson <> l1 var
R42764:42772 Coccinelle.ordered_set <> Less_than constr
R42777:42786 Coccinelle.TransClosure <> trans_clos ind
R42819:42820 Coccinelle.dickson <> l2 var
R42816:42817 Coccinelle.dickson <> l1 var
R42789:42811 Coccinelle.dickson Make multiset_extension_step ind
R42813:42813 Coccinelle.dickson <> Make.Mult.R var
R42826:42837 Coccinelle.ordered_set <> Greater_than constr
R42842:42851 Coccinelle.TransClosure <> trans_clos ind
R42884:42885 Coccinelle.dickson <> l1 var
R42881:42882 Coccinelle.dickson <> l2 var
R42854:42876 Coccinelle.dickson Make multiset_extension_step ind
R42878:42878 Coccinelle.dickson <> Make.Mult.R var
R42896:42899 Coq.Init.Logic <> True ind
R42936:42939 Coccinelle.dickson Make mult def
R42955:42975 Coccinelle.dickson Make remove_equiv_is_sound defax
R42955:42975 Coccinelle.dickson Make remove_equiv_is_sound defax
R42992:42992 Coccinelle.dickson Make A defax
R43007:43018 Coccinelle.more_list <> remove_equiv def
R43026:43032 Coccinelle.dickson Make eq_bool defax
R43020:43024 Coccinelle.dickson DS1 A defax
R43007:43018 Coccinelle.more_list <> remove_equiv def
R43026:43032 Coccinelle.dickson Make eq_bool defax
R43020:43024 Coccinelle.dickson DS1 A defax
R43203:43206 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43207:43209 Coq.Init.Datatypes <> nil constr
R43183:43194 Coccinelle.dickson Make permut_trans defax
R43203:43206 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43207:43209 Coq.Init.Datatypes <> nil constr
R43183:43194 Coccinelle.dickson Make permut_trans defax
R43231:43240 Coccinelle.dickson Make permut_sym defax
R43231:43240 Coccinelle.dickson Make permut_sym defax
R43273:43283 Coq.Lists.List <> app_nil_end thm
R43299:43319 Coccinelle.dickson Make multiset_closure_aux2 thm
R43391:43393 Coq.Init.Datatypes <> nil constr
R43376:43379 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43321:43321 Coccinelle.dickson <> Make.Mult.R var
R43273:43283 Coq.Lists.List <> app_nil_end thm
R43273:43283 Coq.Lists.List <> app_nil_end thm
R43299:43319 Coccinelle.dickson Make multiset_closure_aux2 thm
R43391:43393 Coq.Init.Datatypes <> nil constr
R43376:43379 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43321:43321 Coccinelle.dickson <> Make.Mult.R var
R43439:43442 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43446:43449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43419:43430 Coccinelle.dickson Make permut_trans defax
R43439:43442 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43446:43449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43419:43430 Coccinelle.dickson Make permut_trans defax
R43476:43488 Coq.Lists.List <> app_comm_cons thm
R43497:43515 Coccinelle.dickson Make list_permut_app_app defax
R43476:43488 Coq.Lists.List <> app_comm_cons thm
R43476:43488 Coq.Lists.List <> app_comm_cons thm
R43497:43515 Coccinelle.dickson Make list_permut_app_app defax
R43580:43590 Coq.Lists.List <> app_nil_end thm
R43606:43626 Coccinelle.dickson Make multiset_closure_aux2 thm
R43698:43700 Coq.Init.Datatypes <> nil constr
R43683:43686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43628:43628 Coccinelle.dickson <> Make.Mult.R var
R43580:43590 Coq.Lists.List <> app_nil_end thm
R43580:43590 Coq.Lists.List <> app_nil_end thm
R43606:43626 Coccinelle.dickson Make multiset_closure_aux2 thm
R43698:43700 Coq.Init.Datatypes <> nil constr
R43683:43686 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43628:43628 Coccinelle.dickson <> Make.Mult.R var
R43746:43749 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43753:43756 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43726:43737 Coccinelle.dickson Make permut_trans defax
R43746:43749 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43753:43756 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43726:43737 Coccinelle.dickson Make permut_trans defax
R43783:43795 Coq.Lists.List <> app_comm_cons thm
R43804:43822 Coccinelle.dickson Make list_permut_app_app defax
R43783:43795 Coq.Lists.List <> app_comm_cons thm
R43783:43795 Coq.Lists.List <> app_comm_cons thm
R43804:43822 Coccinelle.dickson Make list_permut_app_app defax
R43881:43892 Coccinelle.dickson Make greater_case thm
R43911:43914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43898:43901 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43931:43931 Coccinelle.dickson Make A defax
R43881:43892 Coccinelle.dickson Make greater_case thm
R43911:43914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43898:43901 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43945:43955 Coccinelle.more_list <> list_forall def
R44039:44042 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43967:43971 Coccinelle.dickson DS1 A defax
R43976:43986 Coccinelle.more_list <> list_exists def
R44025:44028 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43998:44002 Coccinelle.dickson DS1 A defax
R44007:44012 Coccinelle.dickson <> Make.Mult.R_bool var
R44017:44018 Coccinelle.dickson <> t1 var
R44014:44015 Coccinelle.dickson <> t2 var
R43945:43955 Coccinelle.more_list <> list_forall def
R44039:44042 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43967:43971 Coccinelle.dickson DS1 A defax
R43976:43986 Coccinelle.more_list <> list_exists def
R44025:44028 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43998:44002 Coccinelle.dickson DS1 A defax
R44007:44012 Coccinelle.dickson <> Make.Mult.R_bool var
R44017:44018 Coccinelle.dickson <> t1 var
R44014:44015 Coccinelle.dickson <> t2 var
R44074:44083 Coq.Init.Logic <> refl_equal syndef
R44074:44083 Coq.Init.Logic <> refl_equal syndef
R44147:44167 Coccinelle.dickson Make multiset_closure_aux2 thm
R44169:44169 Coccinelle.dickson <> Make.Mult.R var
R44147:44167 Coccinelle.dickson Make multiset_closure_aux2 thm
R44169:44169 Coccinelle.dickson <> Make.Mult.R var
R44256:44259 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44263:44266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44236:44247 Coccinelle.dickson Make permut_trans defax
R44256:44259 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44263:44266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44236:44247 Coccinelle.dickson Make permut_trans defax
R44311:44314 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44315:44321 Coccinelle.dickson Make appendn def
R44291:44302 Coccinelle.dickson Make permut_trans defax
R44311:44314 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44315:44321 Coccinelle.dickson Make appendn def
R44291:44302 Coccinelle.dickson Make permut_trans defax
R44339:44349 Coccinelle.dickson Make permut_app1 defax
R44339:44349 Coccinelle.dickson Make permut_app1 defax
R44339:44349 Coccinelle.dickson Make permut_app1 defax
R44370:44388 Coccinelle.dickson Make list_permut_app_app defax
R44370:44388 Coccinelle.dickson Make list_permut_app_app defax
R44417:44420 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44424:44427 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44397:44408 Coccinelle.dickson Make permut_trans defax
R44417:44420 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44424:44427 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44397:44408 Coccinelle.dickson Make permut_trans defax
R44472:44475 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44484:44487 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44476:44480 Coccinelle.dickson Make consn def
R44452:44463 Coccinelle.dickson Make permut_trans defax
R44472:44475 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44484:44487 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44476:44480 Coccinelle.dickson Make consn def
R44452:44463 Coccinelle.dickson Make permut_trans defax
R44504:44514 Coccinelle.dickson Make permut_app1 defax
R44504:44514 Coccinelle.dickson Make permut_app1 defax
R44504:44514 Coccinelle.dickson Make permut_app1 defax
R44555:44558 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44561:44564 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44565:44569 Coccinelle.dickson Make consn def
R44535:44546 Coccinelle.dickson Make permut_trans defax
R44555:44558 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44561:44564 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44565:44569 Coccinelle.dickson Make consn def
R44535:44546 Coccinelle.dickson Make permut_trans defax
R44587:44597 Coccinelle.dickson Make permut_app1 defax
R44606:44624 Coccinelle.dickson Make list_permut_app_app defax
R44587:44597 Coccinelle.dickson Make permut_app1 defax
R44587:44597 Coccinelle.dickson Make permut_app1 defax
R44606:44624 Coccinelle.dickson Make list_permut_app_app defax
R44636:44642 Coq.Lists.List <> ass_app syndef
R44655:44673 Coccinelle.dickson Make list_permut_app_app defax
R44636:44642 Coq.Lists.List <> ass_app syndef
R44636:44642 Coq.Lists.List <> ass_app syndef
R44655:44673 Coccinelle.dickson Make list_permut_app_app defax
R44745:44757 Coccinelle.list_permut <> permut_length thm
R44802:44804 Coq.Init.Logic <> :type_scope:x_'='_x not
R44788:44788 Coq.Init.Datatypes <> S constr
R44791:44796 Coq.Init.Datatypes <> length def
R44745:44757 Coccinelle.list_permut <> permut_length thm
R44802:44804 Coq.Init.Logic <> :type_scope:x_'='_x not
R44788:44788 Coq.Init.Datatypes <> S constr
R44791:44796 Coq.Init.Datatypes <> length def
R44897:44901 Coccinelle.dickson DS1 A defax
R44927:44930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44954:44957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44958:44962 Coq.Init.Logic <> False ind
R44931:44933 Coccinelle.more_list <> mem def
R44946:44949 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44940:44940 Coccinelle.dickson <> x var
R44935:44938 Coccinelle.dickson Make eq_A defax
R44904:44906 Coccinelle.more_list <> mem def
R44919:44922 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44913:44913 Coccinelle.dickson <> x var
R44908:44911 Coccinelle.dickson Make eq_A defax
R44897:44901 Coccinelle.dickson DS1 A defax
R44927:44930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44954:44957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44958:44962 Coq.Init.Logic <> False ind
R44931:44933 Coccinelle.more_list <> mem def
R44946:44949 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44940:44940 Coccinelle.dickson <> x var
R44935:44938 Coccinelle.dickson Make eq_A defax
R44904:44906 Coccinelle.more_list <> mem def
R44919:44922 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44913:44913 Coccinelle.dickson <> x var
R44908:44911 Coccinelle.dickson Make eq_A defax
R45023:45034 Coccinelle.dickson Make greater_case thm
R45053:45056 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45040:45043 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45074:45074 Coccinelle.dickson Make A defax
R45088:45098 Coccinelle.more_list <> list_forall def
R45182:45185 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45110:45114 Coccinelle.dickson DS1 A defax
R45119:45129 Coccinelle.more_list <> list_exists def
R45168:45171 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45141:45145 Coccinelle.dickson DS1 A defax
R45150:45155 Coccinelle.dickson <> Make.Mult.R_bool var
R45160:45161 Coccinelle.dickson <> t2 var
R45157:45158 Coccinelle.dickson <> t1 var
R45023:45034 Coccinelle.dickson Make greater_case thm
R45053:45056 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45040:45043 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45088:45098 Coccinelle.more_list <> list_forall def
R45182:45185 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45110:45114 Coccinelle.dickson DS1 A defax
R45119:45129 Coccinelle.more_list <> list_exists def
R45168:45171 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45141:45145 Coccinelle.dickson DS1 A defax
R45150:45155 Coccinelle.dickson <> Make.Mult.R_bool var
R45160:45161 Coccinelle.dickson <> t2 var
R45157:45158 Coccinelle.dickson <> t1 var
R45217:45226 Coq.Init.Logic <> refl_equal syndef
R45217:45226 Coq.Init.Logic <> refl_equal syndef
R45290:45310 Coccinelle.dickson Make multiset_closure_aux2 thm
R45312:45312 Coccinelle.dickson <> Make.Mult.R var
R45290:45310 Coccinelle.dickson Make multiset_closure_aux2 thm
R45312:45312 Coccinelle.dickson <> Make.Mult.R var
R45399:45402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45406:45409 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45379:45390 Coccinelle.dickson Make permut_trans defax
R45399:45402 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45406:45409 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45379:45390 Coccinelle.dickson Make permut_trans defax
R45454:45457 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45458:45464 Coccinelle.dickson Make appendn def
R45434:45445 Coccinelle.dickson Make permut_trans defax
R45454:45457 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45458:45464 Coccinelle.dickson Make appendn def
R45434:45445 Coccinelle.dickson Make permut_trans defax
R45482:45492 Coccinelle.dickson Make permut_app1 defax
R45482:45492 Coccinelle.dickson Make permut_app1 defax
R45482:45492 Coccinelle.dickson Make permut_app1 defax
R45513:45531 Coccinelle.dickson Make list_permut_app_app defax
R45513:45531 Coccinelle.dickson Make list_permut_app_app defax
R45560:45563 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45567:45570 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45540:45551 Coccinelle.dickson Make permut_trans defax
R45560:45563 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45567:45570 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45540:45551 Coccinelle.dickson Make permut_trans defax
R45615:45618 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45627:45630 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45619:45623 Coccinelle.dickson Make consn def
R45595:45606 Coccinelle.dickson Make permut_trans defax
R45615:45618 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45627:45630 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45619:45623 Coccinelle.dickson Make consn def
R45595:45606 Coccinelle.dickson Make permut_trans defax
R45647:45657 Coccinelle.dickson Make permut_app1 defax
R45647:45657 Coccinelle.dickson Make permut_app1 defax
R45647:45657 Coccinelle.dickson Make permut_app1 defax
R45698:45701 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45704:45707 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45708:45712 Coccinelle.dickson Make consn def
R45678:45689 Coccinelle.dickson Make permut_trans defax
R45698:45701 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45704:45707 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R45708:45712 Coccinelle.dickson Make consn def
R45678:45689 Coccinelle.dickson Make permut_trans defax
R45730:45740 Coccinelle.dickson Make permut_app1 defax
R45749:45767 Coccinelle.dickson Make list_permut_app_app defax
R45730:45740 Coccinelle.dickson Make permut_app1 defax
R45730:45740 Coccinelle.dickson Make permut_app1 defax
R45749:45767 Coccinelle.dickson Make list_permut_app_app defax
R45779:45785 Coq.Lists.List <> ass_app syndef
R45798:45816 Coccinelle.dickson Make list_permut_app_app defax
R45779:45785 Coq.Lists.List <> ass_app syndef
R45779:45785 Coq.Lists.List <> ass_app syndef
R45798:45816 Coccinelle.dickson Make list_permut_app_app defax
R45888:45900 Coccinelle.list_permut <> permut_length thm
R45945:45947 Coq.Init.Logic <> :type_scope:x_'='_x not
R45931:45931 Coq.Init.Datatypes <> S constr
R45934:45939 Coq.Init.Datatypes <> length def
R45888:45900 Coccinelle.list_permut <> permut_length thm
R45945:45947 Coq.Init.Logic <> :type_scope:x_'='_x not
R45931:45931 Coq.Init.Datatypes <> S constr
R45934:45939 Coq.Init.Datatypes <> length def
prf 46041:46062 Make mult_is_complete_equiv
R46093:46096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46107:46109 Coq.Init.Logic <> :type_scope:x_'='_x not
R46097:46100 Coccinelle.dickson Make mult def
R46105:46106 Coccinelle.dickson <> l2 var
R46102:46103 Coccinelle.dickson <> l1 var
R46110:46119 Coccinelle.ordered_set <> Equivalent constr
R46081:46086 Coccinelle.dickson Make permut syndef
R46091:46092 Coccinelle.dickson <> l2 var
R46088:46089 Coccinelle.dickson <> l1 var
R46159:46164 Coccinelle.dickson Make permut syndef
R46172:46175 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46176:46178 Coq.Init.Datatypes <> nil constr
R46159:46164 Coccinelle.dickson Make permut syndef
R46172:46175 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46176:46178 Coq.Init.Datatypes <> nil constr
R46194:46204 Coq.Lists.List <> app_nil_end thm
R46213:46223 Coccinelle.dickson Make permut_refl defax
R46194:46204 Coq.Lists.List <> app_nil_end thm
R46194:46204 Coq.Lists.List <> app_nil_end thm
R46213:46223 Coccinelle.dickson Make permut_refl defax
R46239:46244 Coccinelle.dickson Make permut syndef
R46252:46255 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46256:46258 Coq.Init.Datatypes <> nil constr
R46239:46244 Coccinelle.dickson Make permut syndef
R46252:46255 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46256:46258 Coq.Init.Datatypes <> nil constr
R46274:46284 Coq.Lists.List <> app_nil_end thm
R46293:46302 Coccinelle.dickson Make permut_sym defax
R46274:46284 Coq.Lists.List <> app_nil_end thm
R46274:46284 Coq.Lists.List <> app_nil_end thm
R46293:46302 Coccinelle.dickson Make permut_sym defax
R46340:46340 Coccinelle.dickson Make A defax
R46357:46360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46375:46378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46379:46383 Coq.Init.Logic <> False ind
R46361:46363 Coccinelle.more_list <> mem def
R46372:46374 Coq.Init.Datatypes <> nil constr
R46370:46370 Coccinelle.dickson <> x var
R46365:46368 Coccinelle.dickson Make eq_A defax
R46343:46345 Coccinelle.more_list <> mem def
R46354:46356 Coq.Init.Datatypes <> nil constr
R46352:46352 Coccinelle.dickson <> x var
R46347:46350 Coccinelle.dickson Make eq_A defax
R46340:46340 Coccinelle.dickson Make A defax
R46357:46360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46375:46378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46379:46383 Coq.Init.Logic <> False ind
R46361:46363 Coccinelle.more_list <> mem def
R46372:46374 Coq.Init.Datatypes <> nil constr
R46370:46370 Coccinelle.dickson <> x var
R46365:46368 Coccinelle.dickson Make eq_A defax
R46343:46345 Coccinelle.more_list <> mem def
R46354:46356 Coq.Init.Datatypes <> nil constr
R46352:46352 Coccinelle.dickson <> x var
R46347:46350 Coccinelle.dickson Make eq_A defax
R46423:46446 Coccinelle.dickson Make remove_equiv_is_complete defax
R46461:46463 Coq.Init.Datatypes <> nil constr
R46457:46459 Coq.Init.Datatypes <> nil constr
R46423:46446 Coccinelle.dickson Make remove_equiv_is_complete defax
R46461:46463 Coq.Init.Datatypes <> nil constr
R46457:46459 Coq.Init.Datatypes <> nil constr
R46482:46485 Coccinelle.dickson Make mult def
R46495:46495 Coccinelle.dickson Make A defax
R46510:46521 Coccinelle.more_list <> remove_equiv def
R46529:46535 Coccinelle.dickson Make eq_bool defax
R46523:46527 Coccinelle.dickson DS1 A defax
R46510:46521 Coccinelle.more_list <> remove_equiv def
R46529:46535 Coccinelle.dickson Make eq_bool defax
R46523:46527 Coccinelle.dickson DS1 A defax
R46589:46598 Coccinelle.list_permut <> permut_nil thm
R46589:46598 Coccinelle.list_permut <> permut_nil thm
R46589:46598 Coccinelle.list_permut <> permut_nil thm
R46627:46636 Coccinelle.list_permut <> permut_nil thm
R46627:46636 Coccinelle.list_permut <> permut_nil thm
R46627:46636 Coccinelle.list_permut <> permut_nil thm
R46649:46658 Coq.Init.Logic <> refl_equal syndef
R46649:46658 Coq.Init.Logic <> refl_equal syndef
prf 46677:46704 Make mult_is_complete_greater_aux
R46723:46726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46727:46727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46745:46750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46767:46767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46817:46824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46883:46888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46889:46889 Coq.Init.Logic <> :type_scope:x_'='_x not
R46956:46959 Coq.Init.Logic <> :type_scope:x_'='_x not
R46890:46900 Coccinelle.more_list <> list_forall def
R46954:46955 Coccinelle.dickson <> l2 var
R46913:46923 Coccinelle.more_list <> list_exists def
R46950:46951 Coccinelle.dickson <> l1 var
R46936:46941 Coccinelle.dickson <> Make.Mult.R_bool var
R46946:46947 Coccinelle.dickson <> t1 var
R46943:46944 Coccinelle.dickson <> t2 var
R46960:46963 Coq.Init.Datatypes <> true constr
R46825:46834 Coccinelle.TransClosure <> trans_clos ind
R46876:46879 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46875:46875 Coccinelle.dickson <> l var
R46880:46881 Coccinelle.dickson <> l1 var
R46866:46869 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R46865:46865 Coccinelle.dickson <> l var
R46870:46871 Coccinelle.dickson <> l2 var
R46837:46859 Coccinelle.dickson Make multiset_extension_step ind
R46861:46861 Coccinelle.dickson <> Make.Mult.R var
R46791:46794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46808:46811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46812:46816 Coq.Init.Logic <> False ind
R46795:46797 Coccinelle.more_list <> mem def
R46806:46807 Coccinelle.dickson <> l2 var
R46804:46804 Coccinelle.dickson <> a var
R46799:46802 Coccinelle.dickson Make eq_A defax
R46778:46780 Coccinelle.more_list <> mem def
R46789:46790 Coccinelle.dickson <> l1 var
R46787:46787 Coccinelle.dickson <> a var
R46782:46785 Coccinelle.dickson Make eq_A defax
R46738:46739 Coq.Init.Logic <> :type_scope:'~'_x not
R46740:46740 Coccinelle.dickson <> Make.Mult.R var
R46744:46744 Coccinelle.dickson <> a var
R46742:46742 Coccinelle.dickson <> a var
R46709:46718 Coq.Relations.Relation_Definitions <> transitive def
R46722:46722 Coccinelle.dickson <> Make.Mult.R var
R47048:47101 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47048:47101 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47173:47188 Coccinelle.dickson Make multiset_closure thm
R47173:47188 Coccinelle.dickson Make multiset_closure thm
R47375:47377 Coq.Init.Logic <> :type_scope:x_'='_x not
R47378:47380 Coq.Init.Datatypes <> nil constr
R47375:47377 Coq.Init.Logic <> :type_scope:x_'='_x not
R47378:47380 Coq.Init.Datatypes <> nil constr
R47451:47460 Coq.Init.Logic <> refl_equal syndef
R47451:47460 Coq.Init.Logic <> refl_equal syndef
R47503:47511 Coq.Init.Logic <> False_rec scheme
R47503:47511 Coq.Init.Logic <> False_rec scheme
R47545:47558 Coccinelle.dickson Make mem_permut_mem defax
R47578:47587 Coccinelle.more_list <> mem_or_app thm
R47610:47619 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47625:47632 Coccinelle.dickson Make eq_proof defax
R47545:47558 Coccinelle.dickson Make mem_permut_mem defax
R47545:47558 Coccinelle.dickson Make mem_permut_mem defax
R47578:47587 Coccinelle.more_list <> mem_or_app thm
R47578:47587 Coccinelle.more_list <> mem_or_app thm
R47610:47619 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47625:47632 Coccinelle.dickson Make eq_proof defax
R47645:47658 Coccinelle.dickson Make mem_permut_mem defax
R47678:47687 Coccinelle.more_list <> mem_or_app thm
R47710:47719 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47725:47732 Coccinelle.dickson Make eq_proof defax
R47645:47658 Coccinelle.dickson Make mem_permut_mem defax
R47645:47658 Coccinelle.dickson Make mem_permut_mem defax
R47678:47687 Coccinelle.more_list <> mem_or_app thm
R47678:47687 Coccinelle.more_list <> mem_or_app thm
R47710:47719 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47725:47732 Coccinelle.dickson Make eq_proof defax
R47757:47767 Coq.Lists.List <> app_nil_end thm
R47787:47797 Coq.Lists.List <> app_nil_end thm
R47757:47767 Coq.Lists.List <> app_nil_end thm
R47757:47767 Coq.Lists.List <> app_nil_end thm
R47787:47797 Coq.Lists.List <> app_nil_end thm
R47787:47797 Coq.Lists.List <> app_nil_end thm
R47846:47846 Coccinelle.dickson Make A defax
R47859:47862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47875:47878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47892:47894 Coq.Init.Logic <> :type_scope:x_'='_x not
R47879:47884 Coccinelle.dickson <> Make.Mult.R_bool var
R47889:47891 Coccinelle.dickson <> ta' var
R47886:47887 Coccinelle.dickson <> ta var
R47895:47900 Coccinelle.dickson <> Make.Mult.R_bool var
R47905:47907 Coccinelle.dickson <> tb' var
R47902:47903 Coccinelle.dickson <> tb var
R47863:47866 Coccinelle.dickson Make eq_A defax
R47872:47874 Coccinelle.dickson <> tb' var
R47868:47870 Coccinelle.dickson <> ta' var
R47849:47852 Coccinelle.dickson Make eq_A defax
R47857:47858 Coccinelle.dickson <> tb var
R47854:47855 Coccinelle.dickson <> ta var
R47846:47846 Coccinelle.dickson Make A defax
R47859:47862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47875:47878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47892:47894 Coq.Init.Logic <> :type_scope:x_'='_x not
R47879:47884 Coccinelle.dickson <> Make.Mult.R_bool var
R47889:47891 Coccinelle.dickson <> ta' var
R47886:47887 Coccinelle.dickson <> ta var
R47895:47900 Coccinelle.dickson <> Make.Mult.R_bool var
R47905:47907 Coccinelle.dickson <> tb' var
R47902:47903 Coccinelle.dickson <> tb var
R47863:47866 Coccinelle.dickson Make eq_A defax
R47872:47874 Coccinelle.dickson <> tb' var
R47868:47870 Coccinelle.dickson <> ta' var
R47849:47852 Coccinelle.dickson Make eq_A defax
R47857:47858 Coccinelle.dickson <> tb var
R47854:47855 Coccinelle.dickson <> ta var
R47918:47921 Coccinelle.dickson Make eq_A defax
R47971:47980 Coq.Init.Logic <> refl_equal syndef
R47971:47980 Coq.Init.Logic <> refl_equal syndef
R47992:48016 Coccinelle.list_permut <> permut_list_forall_exists thm
R48025:48030 Coccinelle.dickson <> Make.Mult.R_bool var
R48018:48023 Coccinelle.dickson <> Make.Mult.R_bool var
R47992:48016 Coccinelle.list_permut <> permut_list_forall_exists thm
R48025:48030 Coccinelle.dickson <> Make.Mult.R_bool var
R48018:48023 Coccinelle.dickson <> Make.Mult.R_bool var
R47992:48016 Coccinelle.list_permut <> permut_list_forall_exists thm
R48025:48030 Coccinelle.dickson <> Make.Mult.R_bool var
R48018:48023 Coccinelle.dickson <> Make.Mult.R_bool var
R48149:48163 Coccinelle.more_list <> list_forall_app thm
R48174:48191 Coq.Bool.Bool <> andb_true_iff thm
R48149:48163 Coccinelle.more_list <> list_forall_app thm
R48149:48163 Coccinelle.more_list <> list_forall_app thm
R48174:48191 Coq.Bool.Bool <> andb_true_iff thm
R48174:48191 Coq.Bool.Bool <> andb_true_iff thm
R48233:48241 Coq.Init.Logic <> or_introl constr
R48246:48255 Coq.Init.Logic <> refl_equal syndef
R48233:48241 Coq.Init.Logic <> or_introl constr
R48246:48255 Coq.Init.Logic <> refl_equal syndef
R48358:48366 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48380:48385 Coccinelle.dickson <> Make.Mult.R_bool var
R48358:48366 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48380:48385 Coccinelle.dickson <> Make.Mult.R_bool var
R48493:48501 Coq.Init.Logic <> False_rec scheme
R48549:48558 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48564:48571 Coccinelle.dickson Make eq_proof defax
R48493:48501 Coq.Init.Logic <> False_rec scheme
R48549:48558 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48564:48571 Coccinelle.dickson Make eq_proof defax
R48584:48599 Coccinelle.more_list <> list_forall_impl thm
R48926:48932 Coccinelle.dickson Make appendn def
R48719:48719 Coccinelle.dickson Make A defax
R48725:48732 Coq.Bool.Bool <> ifb def
R48831:48841 Coccinelle.more_list <> list_exists def
R48873:48877 Coccinelle.dickson Make consn def
R48853:48853 Coccinelle.dickson Make A defax
R48858:48863 Coccinelle.dickson <> Make.Mult.R_bool var
R48868:48869 Coccinelle.dickson <> t2 var
R48865:48866 Coccinelle.dickson <> t1 var
R48748:48751 Coq.Init.Datatypes <> true constr
R48735:48740 Coccinelle.dickson <> Make.Mult.R_bool var
R48742:48743 Coccinelle.dickson <> t1 var
R48611:48611 Coccinelle.dickson Make A defax
R48616:48626 Coccinelle.more_list <> list_exists def
R48658:48662 Coccinelle.dickson Make consn def
R48638:48638 Coccinelle.dickson Make A defax
R48643:48648 Coccinelle.dickson <> Make.Mult.R_bool var
R48653:48654 Coccinelle.dickson <> t2 var
R48650:48651 Coccinelle.dickson <> t1 var
R48584:48599 Coccinelle.more_list <> list_forall_impl thm
R48926:48932 Coccinelle.dickson Make appendn def
R48719:48719 Coccinelle.dickson Make A defax
R48725:48732 Coq.Bool.Bool <> ifb def
R48831:48841 Coccinelle.more_list <> list_exists def
R48873:48877 Coccinelle.dickson Make consn def
R48853:48853 Coccinelle.dickson Make A defax
R48858:48863 Coccinelle.dickson <> Make.Mult.R_bool var
R48868:48869 Coccinelle.dickson <> t2 var
R48865:48866 Coccinelle.dickson <> t1 var
R48748:48751 Coq.Init.Datatypes <> true constr
R48735:48740 Coccinelle.dickson <> Make.Mult.R_bool var
R48742:48743 Coccinelle.dickson <> t1 var
R48611:48611 Coccinelle.dickson Make A defax
R48616:48626 Coccinelle.more_list <> list_exists def
R48658:48662 Coccinelle.dickson Make consn def
R48638:48638 Coccinelle.dickson Make A defax
R48643:48648 Coccinelle.dickson <> Make.Mult.R_bool var
R48653:48654 Coccinelle.dickson <> t2 var
R48650:48651 Coccinelle.dickson <> t1 var
R48584:48599 Coccinelle.more_list <> list_forall_impl thm
R48926:48932 Coccinelle.dickson Make appendn def
R48719:48719 Coccinelle.dickson Make A defax
R48725:48732 Coq.Bool.Bool <> ifb def
R48831:48841 Coccinelle.more_list <> list_exists def
R48873:48877 Coccinelle.dickson Make consn def
R48853:48853 Coccinelle.dickson Make A defax
R48858:48863 Coccinelle.dickson <> Make.Mult.R_bool var
R48868:48869 Coccinelle.dickson <> t2 var
R48865:48866 Coccinelle.dickson <> t1 var
R48748:48751 Coq.Init.Datatypes <> true constr
R48735:48740 Coccinelle.dickson <> Make.Mult.R_bool var
R48742:48743 Coccinelle.dickson <> t1 var
R48611:48611 Coccinelle.dickson Make A defax
R48616:48626 Coccinelle.more_list <> list_exists def
R48658:48662 Coccinelle.dickson Make consn def
R48638:48638 Coccinelle.dickson Make A defax
R48643:48648 Coccinelle.dickson <> Make.Mult.R_bool var
R48653:48654 Coccinelle.dickson <> t2 var
R48650:48651 Coccinelle.dickson <> t1 var
R48584:48599 Coccinelle.more_list <> list_forall_impl thm
R48926:48932 Coccinelle.dickson Make appendn def
R48719:48719 Coccinelle.dickson Make A defax
R48725:48732 Coq.Bool.Bool <> ifb def
R48831:48841 Coccinelle.more_list <> list_exists def
R48873:48877 Coccinelle.dickson Make consn def
R48853:48853 Coccinelle.dickson Make A defax
R48858:48863 Coccinelle.dickson <> Make.Mult.R_bool var
R48868:48869 Coccinelle.dickson <> t2 var
R48865:48866 Coccinelle.dickson <> t1 var
R48748:48751 Coq.Init.Datatypes <> true constr
R48735:48740 Coccinelle.dickson <> Make.Mult.R_bool var
R48742:48743 Coccinelle.dickson <> t1 var
R48611:48611 Coccinelle.dickson Make A defax
R48616:48626 Coccinelle.more_list <> list_exists def
R48658:48662 Coccinelle.dickson Make consn def
R48638:48638 Coccinelle.dickson Make A defax
R48643:48648 Coccinelle.dickson <> Make.Mult.R_bool var
R48653:48654 Coccinelle.dickson <> t2 var
R48650:48651 Coccinelle.dickson <> t1 var
R48584:48599 Coccinelle.more_list <> list_forall_impl thm
R48926:48932 Coccinelle.dickson Make appendn def
R48719:48719 Coccinelle.dickson Make A defax
R48725:48732 Coq.Bool.Bool <> ifb def
R48831:48841 Coccinelle.more_list <> list_exists def
R48873:48877 Coccinelle.dickson Make consn def
R48853:48853 Coccinelle.dickson Make A defax
R48858:48863 Coccinelle.dickson <> Make.Mult.R_bool var
R48868:48869 Coccinelle.dickson <> t2 var
R48865:48866 Coccinelle.dickson <> t1 var
R48748:48751 Coq.Init.Datatypes <> true constr
R48735:48740 Coccinelle.dickson <> Make.Mult.R_bool var
R48742:48743 Coccinelle.dickson <> t1 var
R48611:48611 Coccinelle.dickson Make A defax
R48616:48626 Coccinelle.more_list <> list_exists def
R48658:48662 Coccinelle.dickson Make consn def
R48638:48638 Coccinelle.dickson Make A defax
R48643:48648 Coccinelle.dickson <> Make.Mult.R_bool var
R48653:48654 Coccinelle.dickson <> t2 var
R48650:48651 Coccinelle.dickson <> t1 var
R48946:48955 Coq.Init.Logic <> refl_equal syndef
R48946:48955 Coq.Init.Logic <> refl_equal syndef
R48985:48990 Coccinelle.dickson <> Make.Mult.R_bool var
R49012:49021 Coq.Init.Logic <> refl_equal syndef
R48985:48990 Coccinelle.dickson <> Make.Mult.R_bool var
R49012:49021 Coq.Init.Logic <> refl_equal syndef
prf 49122:49132 Make mult_irrefl
R49151:49154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49155:49155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49173:49177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49230:49233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49234:49238 Coq.Init.Logic <> False ind
R49188:49197 Coccinelle.TransClosure <> trans_clos ind
R49229:49229 Coccinelle.dickson <> l var
R49227:49227 Coccinelle.dickson <> l var
R49200:49222 Coccinelle.dickson Make multiset_extension_step ind
R49224:49224 Coccinelle.dickson <> Make.Mult.R var
R49166:49167 Coq.Init.Logic <> :type_scope:'~'_x not
R49168:49168 Coccinelle.dickson <> Make.Mult.R var
R49172:49172 Coccinelle.dickson <> a var
R49170:49170 Coccinelle.dickson <> a var
R49137:49146 Coq.Relations.Relation_Definitions <> transitive def
R49150:49150 Coccinelle.dickson <> Make.Mult.R var
R49291:49301 Coq.Lists.List <> app_nil_end thm
R49291:49301 Coq.Lists.List <> app_nil_end thm
R49291:49301 Coq.Lists.List <> app_nil_end thm
R49339:49392 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49415:49417 Coq.Init.Datatypes <> nil constr
R49411:49413 Coq.Init.Datatypes <> nil constr
R49339:49392 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49415:49417 Coq.Init.Datatypes <> nil constr
R49411:49413 Coq.Init.Datatypes <> nil constr
R49516:49519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49528:49531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49532:49536 Coq.Init.Logic <> False ind
R49522:49524 Coq.Init.Logic <> :type_scope:x_'='_x not
R49520:49521 Coccinelle.dickson <> l2 var
R49525:49527 Coq.Init.Datatypes <> nil constr
R49472:49481 Coccinelle.TransClosure <> trans_clos ind
R49514:49515 Coccinelle.dickson <> l2 var
R49511:49512 Coccinelle.dickson <> l1 var
R49484:49506 Coccinelle.dickson Make multiset_extension_step ind
R49508:49508 Coccinelle.dickson <> Make.Mult.R var
R49516:49519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49528:49531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49532:49536 Coq.Init.Logic <> False ind
R49522:49524 Coq.Init.Logic <> :type_scope:x_'='_x not
R49520:49521 Coccinelle.dickson <> l2 var
R49525:49527 Coq.Init.Datatypes <> nil constr
R49472:49481 Coccinelle.TransClosure <> trans_clos ind
R49514:49515 Coccinelle.dickson <> l2 var
R49511:49512 Coccinelle.dickson <> l1 var
R49484:49506 Coccinelle.dickson Make multiset_extension_step ind
R49508:49508 Coccinelle.dickson <> Make.Mult.R var
R49678:49690 Coccinelle.list_permut <> permut_length thm
R49678:49690 Coccinelle.list_permut <> permut_length thm
R49736:49745 Coq.Init.Logic <> refl_equal syndef
R49736:49745 Coq.Init.Logic <> refl_equal syndef
R49780:49789 Coq.Init.Logic <> refl_equal syndef
R49780:49789 Coq.Init.Logic <> refl_equal syndef
prf 49804:49827 Make mult_is_complete_greater
R49846:49849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49850:49850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49868:49875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49934:49937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49948:49950 Coq.Init.Logic <> :type_scope:x_'='_x not
R49938:49941 Coccinelle.dickson Make mult def
R49946:49947 Coccinelle.dickson <> l2 var
R49943:49944 Coccinelle.dickson <> l1 var
R49951:49962 Coccinelle.ordered_set <> Greater_than constr
R49890:49899 Coccinelle.TransClosure <> trans_clos ind
R49932:49933 Coccinelle.dickson <> l1 var
R49929:49930 Coccinelle.dickson <> l2 var
R49902:49924 Coccinelle.dickson Make multiset_extension_step ind
R49926:49926 Coccinelle.dickson <> Make.Mult.R var
R49861:49862 Coq.Init.Logic <> :type_scope:'~'_x not
R49863:49863 Coccinelle.dickson <> Make.Mult.R var
R49867:49867 Coccinelle.dickson <> a var
R49865:49865 Coccinelle.dickson <> a var
R49832:49841 Coq.Relations.Relation_Definitions <> transitive def
R49845:49845 Coccinelle.dickson <> Make.Mult.R var
R50024:50044 Coccinelle.dickson Make remove_equiv_is_sound defax
R50061:50064 Coccinelle.dickson Make mult def
R50074:50074 Coccinelle.dickson Make A defax
R50091:50102 Coccinelle.more_list <> remove_equiv def
R50104:50110 Coccinelle.dickson Make eq_bool defax
R50024:50044 Coccinelle.dickson Make remove_equiv_is_sound defax
R50091:50102 Coccinelle.more_list <> remove_equiv def
R50104:50110 Coccinelle.dickson Make eq_bool defax
R50183:50192 Coccinelle.TransClosure <> trans_clos ind
R50234:50237 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50224:50227 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50195:50217 Coccinelle.dickson Make multiset_extension_step ind
R50219:50219 Coccinelle.dickson <> Make.Mult.R var
R50183:50192 Coccinelle.TransClosure <> trans_clos ind
R50234:50237 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50224:50227 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R50195:50217 Coccinelle.dickson Make multiset_extension_step ind
R50219:50219 Coccinelle.dickson <> Make.Mult.R var
R50250:50297 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50250:50297 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50336:50383 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50336:50383 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50424:50451 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50424:50451 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50507:50507 Coccinelle.dickson Make A defax
R50604:50613 Coq.Init.Logic <> refl_equal syndef
R50604:50613 Coq.Init.Logic <> refl_equal syndef
R50655:50664 Coq.Init.Logic <> refl_equal syndef
R50655:50664 Coq.Init.Logic <> refl_equal syndef
R50683:50691 Coq.Init.Logic <> False_rec scheme
R50683:50691 Coq.Init.Logic <> False_rec scheme
R50701:50711 Coccinelle.dickson Make mult_irrefl thm
R50701:50711 Coccinelle.dickson Make mult_irrefl thm
prf 50746:50771 Make mult_is_complete_less_than
R50790:50793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50794:50794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50812:50819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50878:50881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50892:50894 Coq.Init.Logic <> :type_scope:x_'='_x not
R50882:50885 Coccinelle.dickson Make mult def
R50890:50891 Coccinelle.dickson <> l2 var
R50887:50888 Coccinelle.dickson <> l1 var
R50895:50903 Coccinelle.ordered_set <> Less_than constr
R50834:50843 Coccinelle.TransClosure <> trans_clos ind
R50876:50877 Coccinelle.dickson <> l2 var
R50873:50874 Coccinelle.dickson <> l1 var
R50846:50868 Coccinelle.dickson Make multiset_extension_step ind
R50870:50870 Coccinelle.dickson <> Make.Mult.R var
R50805:50806 Coq.Init.Logic <> :type_scope:'~'_x not
R50807:50807 Coccinelle.dickson <> Make.Mult.R var
R50811:50811 Coccinelle.dickson <> a var
R50809:50809 Coccinelle.dickson <> a var
R50776:50785 Coq.Relations.Relation_Definitions <> transitive def
R50789:50789 Coccinelle.dickson <> Make.Mult.R var
R50965:50980 Coccinelle.dickson Make multiset_closure thm
R50965:50980 Coccinelle.dickson Make multiset_closure thm
R51126:51131 Coccinelle.dickson Make permut syndef
R51139:51142 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51143:51149 Coccinelle.dickson Make appendn def
R51126:51131 Coccinelle.dickson Make permut syndef
R51139:51142 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51143:51149 Coccinelle.dickson Make appendn def
R51192:51195 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51182:51188 Coccinelle.dickson Make appendn def
R51163:51174 Coccinelle.dickson Make permut_trans defax
R51192:51195 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51182:51188 Coccinelle.dickson Make appendn def
R51163:51174 Coccinelle.dickson Make permut_trans defax
R51219:51230 Coccinelle.list_permut <> permut_swapp thm
R51239:51249 Coccinelle.dickson Make permut_refl defax
R51219:51230 Coccinelle.list_permut <> permut_swapp thm
R51239:51249 Coccinelle.dickson Make permut_refl defax
R51239:51249 Coccinelle.dickson Make permut_refl defax
R51265:51270 Coccinelle.dickson Make permut syndef
R51278:51281 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51282:51286 Coccinelle.dickson Make consn def
R51265:51270 Coccinelle.dickson Make permut syndef
R51278:51281 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51282:51286 Coccinelle.dickson Make consn def
R51327:51330 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51319:51323 Coccinelle.dickson Make consn def
R51300:51311 Coccinelle.dickson Make permut_trans defax
R51327:51330 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R51319:51323 Coccinelle.dickson Make consn def
R51300:51311 Coccinelle.dickson Make permut_trans defax
R51354:51365 Coccinelle.list_permut <> permut_swapp thm
R51374:51384 Coccinelle.dickson Make permut_refl defax
R51354:51365 Coccinelle.list_permut <> permut_swapp thm
R51374:51384 Coccinelle.dickson Make permut_refl defax
R51374:51384 Coccinelle.dickson Make permut_refl defax
R51421:51421 Coccinelle.dickson Make A defax
R51447:51450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51472:51475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51476:51480 Coq.Init.Logic <> False ind
R51451:51453 Coccinelle.more_list <> mem def
R51463:51467 Coccinelle.dickson Make consn def
R51460:51460 Coccinelle.dickson <> x var
R51455:51458 Coccinelle.dickson Make eq_A defax
R51424:51426 Coccinelle.more_list <> mem def
R51436:51442 Coccinelle.dickson Make appendn def
R51433:51433 Coccinelle.dickson <> x var
R51428:51431 Coccinelle.dickson Make eq_A defax
R51421:51421 Coccinelle.dickson Make A defax
R51447:51450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51472:51475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51476:51480 Coq.Init.Logic <> False ind
R51451:51453 Coccinelle.more_list <> mem def
R51463:51467 Coccinelle.dickson Make consn def
R51460:51460 Coccinelle.dickson <> x var
R51455:51458 Coccinelle.dickson Make eq_A defax
R51424:51426 Coccinelle.more_list <> mem def
R51436:51442 Coccinelle.dickson Make appendn def
R51433:51433 Coccinelle.dickson <> x var
R51428:51431 Coccinelle.dickson Make eq_A defax
R51560:51583 Coccinelle.dickson Make remove_equiv_is_complete defax
R51612:51624 Coccinelle.dickson Make mult_is_sound thm
R51560:51583 Coccinelle.dickson Make remove_equiv_is_complete defax
R51612:51624 Coccinelle.dickson Make mult_is_sound thm
R51641:51644 Coccinelle.dickson Make mult def
R51654:51654 Coccinelle.dickson Make A defax
R51669:51680 Coccinelle.more_list <> remove_equiv def
R51688:51694 Coccinelle.dickson Make eq_bool defax
R51682:51686 Coccinelle.dickson DS1 A defax
R51669:51680 Coccinelle.more_list <> remove_equiv def
R51688:51694 Coccinelle.dickson Make eq_bool defax
R51682:51686 Coccinelle.dickson DS1 A defax
R51752:51779 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51752:51779 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51816:51816 Coccinelle.dickson Make A defax
R51936:51944 Coq.Init.Logic <> False_rec scheme
R51972:51981 Coq.Init.Logic <> refl_equal syndef
R51936:51944 Coq.Init.Logic <> False_rec scheme
R51972:51981 Coq.Init.Logic <> refl_equal syndef
R52017:52025 Coq.Init.Logic <> False_rec scheme
R52017:52025 Coq.Init.Logic <> False_rec scheme
R52041:52053 Coccinelle.list_permut <> permut_length thm
R52041:52053 Coccinelle.list_permut <> permut_length thm
R52089:52098 Coq.Init.Logic <> refl_equal syndef
R52089:52098 Coq.Init.Logic <> refl_equal syndef
R52151:52161 Coccinelle.more_list <> list_forall def
R52173:52177 Coccinelle.dickson DS1 A defax
R52182:52192 Coccinelle.more_list <> list_exists def
R52230:52233 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R52204:52208 Coccinelle.dickson DS1 A defax
R52213:52218 Coccinelle.dickson <> Make.Mult.R_bool var
R52223:52224 Coccinelle.dickson <> t1 var
R52220:52221 Coccinelle.dickson <> t2 var
R52151:52161 Coccinelle.more_list <> list_forall def
R52173:52177 Coccinelle.dickson DS1 A defax
R52182:52192 Coccinelle.more_list <> list_exists def
R52230:52233 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R52204:52208 Coccinelle.dickson DS1 A defax
R52213:52218 Coccinelle.dickson <> Make.Mult.R_bool var
R52223:52224 Coccinelle.dickson <> t1 var
R52220:52221 Coccinelle.dickson <> t2 var
R52266:52274 Coq.Init.Logic <> False_rec scheme
R52266:52274 Coq.Init.Logic <> False_rec scheme
R52285:52295 Coccinelle.dickson Make mult_irrefl thm
R52285:52295 Coccinelle.dickson Make mult_irrefl thm
R52325:52343 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52325:52343 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52380:52389 Coq.Init.Logic <> refl_equal syndef
R52380:52389 Coq.Init.Logic <> refl_equal syndef
R52455:52468 Coccinelle.dickson Make mem_permut_mem defax
R52455:52468 Coccinelle.dickson Make mem_permut_mem defax
R52455:52468 Coccinelle.dickson Make mem_permut_mem defax
R52502:52515 Coccinelle.dickson Make mem_permut_mem defax
R52502:52515 Coccinelle.dickson Make mem_permut_mem defax
R52502:52515 Coccinelle.dickson Make mem_permut_mem defax
R52543:52590 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52543:52590 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52628:52631 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52607:52618 Coccinelle.dickson Make permut_trans defax
R52628:52631 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52607:52618 Coccinelle.dickson Make permut_trans defax
R52672:52675 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52662:52668 Coccinelle.dickson Make appendn def
R52643:52654 Coccinelle.dickson Make permut_trans defax
R52672:52675 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52662:52668 Coccinelle.dickson Make appendn def
R52643:52654 Coccinelle.dickson Make permut_trans defax
R52704:52714 Coccinelle.dickson Make permut_app2 defax
R52723:52732 Coccinelle.dickson Make permut_sym defax
R52704:52714 Coccinelle.dickson Make permut_app2 defax
R52704:52714 Coccinelle.dickson Make permut_app2 defax
R52723:52732 Coccinelle.dickson Make permut_sym defax
R52753:52764 Coccinelle.list_permut <> permut_swapp thm
R52773:52783 Coccinelle.dickson Make permut_refl defax
R52753:52764 Coccinelle.list_permut <> permut_swapp thm
R52773:52783 Coccinelle.dickson Make permut_refl defax
R52773:52783 Coccinelle.dickson Make permut_refl defax
R52792:52839 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52792:52839 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52877:52880 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52856:52867 Coccinelle.dickson Make permut_trans defax
R52877:52880 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52856:52867 Coccinelle.dickson Make permut_trans defax
R52919:52922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52911:52915 Coccinelle.dickson Make consn def
R52892:52903 Coccinelle.dickson Make permut_trans defax
R52919:52922 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R52911:52915 Coccinelle.dickson Make consn def
R52892:52903 Coccinelle.dickson Make permut_trans defax
R52951:52961 Coccinelle.dickson Make permut_app2 defax
R52970:52979 Coccinelle.dickson Make permut_sym defax
R52951:52961 Coccinelle.dickson Make permut_app2 defax
R52951:52961 Coccinelle.dickson Make permut_app2 defax
R52970:52979 Coccinelle.dickson Make permut_sym defax
R53000:53011 Coccinelle.list_permut <> permut_swapp thm
R53020:53030 Coccinelle.dickson Make permut_refl defax
R53000:53011 Coccinelle.list_permut <> permut_swapp thm
R53020:53030 Coccinelle.dickson Make permut_refl defax
R53020:53030 Coccinelle.dickson Make permut_refl defax
prf 53061:53076 Make mult_is_complete
R53096:53099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53100:53100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53118:53123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53146:53149 Coccinelle.dickson Make mult def
R53154:53155 Coccinelle.dickson <> l2 var
R53151:53152 Coccinelle.dickson <> l1 var
R53166:53177 Coccinelle.ordered_set <> Uncomparable constr
R53196:53237 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53182:53183 Coq.Init.Logic <> :type_scope:'~'_x not
R53184:53189 Coccinelle.dickson Make permut syndef
R53194:53195 Coccinelle.dickson <> l2 var
R53191:53192 Coccinelle.dickson <> l1 var
R53283:53325 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53238:53238 Coq.Init.Logic <> :type_scope:'~'_x not
R53239:53248 Coccinelle.TransClosure <> trans_clos ind
R53281:53282 Coccinelle.dickson <> l2 var
R53278:53279 Coccinelle.dickson <> l1 var
R53251:53273 Coccinelle.dickson Make multiset_extension_step ind
R53275:53275 Coccinelle.dickson <> Make.Mult.R var
R53326:53326 Coq.Init.Logic <> :type_scope:'~'_x not
R53327:53336 Coccinelle.TransClosure <> trans_clos ind
R53369:53370 Coccinelle.dickson <> l1 var
R53366:53367 Coccinelle.dickson <> l2 var
R53339:53361 Coccinelle.dickson Make multiset_extension_step ind
R53363:53363 Coccinelle.dickson <> Make.Mult.R var
R53381:53384 Coq.Init.Logic <> True ind
R53111:53112 Coq.Init.Logic <> :type_scope:'~'_x not
R53113:53113 Coccinelle.dickson <> Make.Mult.R var
R53117:53117 Coccinelle.dickson <> a var
R53115:53115 Coccinelle.dickson <> a var
R53082:53091 Coq.Relations.Relation_Definitions <> transitive def
R53095:53095 Coccinelle.dickson <> Make.Mult.R var
R53443:53455 Coccinelle.dickson Make mult_is_sound thm
R53466:53487 Coccinelle.dickson Make mult_is_complete_equiv thm
R53519:53542 Coccinelle.dickson Make mult_is_complete_greater thm
R53570:53595 Coccinelle.dickson Make mult_is_complete_less_than thm
R53443:53455 Coccinelle.dickson Make mult_is_sound thm
R53466:53487 Coccinelle.dickson Make mult_is_complete_equiv thm
R53519:53542 Coccinelle.dickson Make mult_is_complete_greater thm
R53570:53595 Coccinelle.dickson Make mult_is_complete_less_than thm
R53628:53631 Coccinelle.dickson Make mult def
R53628:53631 Coccinelle.dickson Make mult def
R53801:53804 Coccinelle.dickson Make.Mult <> sec
R53812:53815 Coccinelle.dickson Make <> mod
R53836:53839 Coccinelle.dickson Make <> modtype
R53842:53856 Coccinelle.ordered_set Nat <> modtype
mod 53826:53831 <> NatMul
