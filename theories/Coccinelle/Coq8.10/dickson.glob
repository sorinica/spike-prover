DIGEST fcb2e14dc08e70d53b44db5271575715
FCoccinelle.dickson
R905:910 Coq.Setoids.Setoid <> <> lib
R928:936 Coq.Relations.Relations <> <> lib
R954:957 Coq.Lists.List <> <> lib
R975:983 Coccinelle.more_list <> <> lib
R1001:1008 Coq.Sets.Multiset <> <> lib
R1026:1036 Coccinelle.list_permut <> <> lib
R1054:1064 Coccinelle.ordered_set <> <> lib
R1082:1086 Coq.Arith.Arith <> <> lib
R1104:1110 Coccinelle.closure <> <> lib
R1128:1133 Coq.funind.FunInd <> <> lib
R1179:1181 Coq.Init.Logic <> ::type_scope:x_'='_x not
modtype 1256:1256 <> D
R1289:1303 Coccinelle.decidable_set S <> mod
mod 1284:1285 <> D.DS
R1335:1347 Coccinelle.list_permut S <> mod
R1374:1377 Coccinelle.dickson D A defax
R1476:1477 Coq.Init.Logic <> eq ind
R1479:1482 Coccinelle.dickson D A defax
mod 1330:1331 <> D.LP
ind 1559:1581 D multiset_extension_step
constr 1634:1641 D rmv_case
R1588:1595 Coq.Relations.Relation_Definitions <> relation def
R1597:1597 Coccinelle.dickson D A defax
R1608:1611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1618:1621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1612:1615 Coq.Init.Datatypes <> list ind
R1617:1617 Coccinelle.dickson D A defax
R1602:1605 Coq.Init.Datatypes <> list ind
R1607:1607 Coccinelle.dickson D A defax
R1672:1672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1709:1720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1740:1743 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1762:1771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1772:1794 Coccinelle.dickson <> multiset_extension_step ind
R1801:1802 Coccinelle.dickson <> l2 var
R1798:1799 Coccinelle.dickson <> l1 var
R1796:1796 Coccinelle.dickson <> R var
R1744:1749 Coccinelle.dickson D permut syndef
R1756:1759 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1755:1755 Coccinelle.dickson <> a var
R1760:1760 Coccinelle.dickson <> l var
R1751:1752 Coccinelle.dickson <> l2 var
R1721:1726 Coccinelle.dickson D permut syndef
R1734:1737 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1732:1733 Coccinelle.dickson <> la var
R1738:1738 Coccinelle.dickson <> l var
R1728:1729 Coccinelle.dickson <> l1 var
R1700:1703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1704:1704 Coccinelle.dickson <> R var
R1708:1708 Coccinelle.dickson <> a var
R1706:1706 Coccinelle.dickson <> b var
R1683:1685 Coccinelle.more_list <> mem def
R1698:1699 Coccinelle.dickson <> la var
R1696:1696 Coccinelle.dickson <> b var
R1687:1694 Coccinelle.dickson D eq_A defax
ax 1881:1917 D list_permut_multiset_extension_step_1
R1953:1959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1990:1993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1994:2016 Coccinelle.dickson D multiset_extension_step ind
R2023:2023 Coccinelle.dickson <> l var
R2020:2021 Coccinelle.dickson <> l2 var
R2018:2018 Coccinelle.dickson <> R var
R1960:1982 Coccinelle.dickson D multiset_extension_step ind
R1989:1989 Coccinelle.dickson <> l var
R1986:1987 Coccinelle.dickson <> l1 var
R1984:1984 Coccinelle.dickson <> R var
R1941:1946 Coccinelle.dickson D permut syndef
R1951:1952 Coccinelle.dickson <> l2 var
R1948:1949 Coccinelle.dickson <> l1 var
ax 2037:2073 D list_permut_multiset_extension_step_2
R2109:2115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2146:2149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2150:2172 Coccinelle.dickson D multiset_extension_step ind
R2178:2179 Coccinelle.dickson <> l2 var
R2176:2176 Coccinelle.dickson <> l var
R2174:2174 Coccinelle.dickson <> R var
R2116:2138 Coccinelle.dickson D multiset_extension_step ind
R2144:2145 Coccinelle.dickson <> l1 var
R2142:2142 Coccinelle.dickson <> l var
R2140:2140 Coccinelle.dickson <> R var
R2097:2102 Coccinelle.dickson D permut syndef
R2107:2108 Coccinelle.dickson <> l2 var
R2104:2105 Coccinelle.dickson <> l1 var
R2212:2219 Coq.Relations.Relation_Definitions <> relation def
R2221:2221 Coccinelle.dickson D A defax
R2227:2249 Coccinelle.dickson D multiset_extension_step ind
R2251:2251 Coccinelle.dickson <> R var
R2278:2282 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R2272:2277 Coccinelle.dickson D permut syndef
R2289:2293 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R2283:2288 Coccinelle.dickson D permut syndef
R2294:2296 Coq.Init.Logic <> iff def
ax 2370:2384 D list_permut_acc
R2418:2424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2459:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2463:2465 Coq.Init.Wf <> Acc ind
R2495:2496 Coccinelle.dickson <> l2 var
R2468:2490 Coccinelle.dickson D multiset_extension_step ind
R2492:2492 Coccinelle.dickson <> R var
R2425:2427 Coq.Init.Wf <> Acc ind
R2457:2458 Coccinelle.dickson <> l1 var
R2430:2452 Coccinelle.dickson D multiset_extension_step ind
R2454:2454 Coccinelle.dickson <> R var
R2406:2411 Coccinelle.dickson D permut syndef
R2416:2417 Coccinelle.dickson <> l1 var
R2413:2414 Coccinelle.dickson <> l2 var
ax 2529:2535 D dickson
R2566:2569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2570:2581 Coq.Init.Wf <> well_founded def
R2584:2606 Coccinelle.dickson D multiset_extension_step ind
R2608:2608 Coccinelle.dickson <> R var
R2552:2563 Coq.Init.Wf <> well_founded def
R2565:2565 Coccinelle.dickson <> R var
ax 2623:2636 D dickson_strong
R2655:2655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2683:2687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2688:2690 Coq.Init.Wf <> Acc ind
R2720:2720 Coccinelle.dickson <> l var
R2693:2715 Coccinelle.dickson D multiset_extension_step ind
R2717:2717 Coccinelle.dickson <> R var
R2672:2675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2676:2678 Coq.Init.Wf <> Acc ind
R2682:2682 Coccinelle.dickson <> a var
R2680:2680 Coccinelle.dickson <> R var
R2666:2667 Coq.Lists.List <> In def
R2671:2671 Coccinelle.dickson <> l var
R2669:2669 Coccinelle.dickson <> a var
ax 2734:2780 D context_trans_clos_multiset_extension_step_app1
R2848:2876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2877:2886 Coccinelle.TransClosure <> trans_clos ind
R2928:2931 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2927:2927 Coccinelle.dickson <> l var
R2932:2933 Coccinelle.dickson <> l2 var
R2918:2921 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2917:2917 Coccinelle.dickson <> l var
R2922:2923 Coccinelle.dickson <> l1 var
R2889:2911 Coccinelle.dickson D multiset_extension_step ind
R2913:2913 Coccinelle.dickson <> R var
R2804:2813 Coccinelle.TransClosure <> trans_clos ind
R2846:2847 Coccinelle.dickson <> l2 var
R2843:2844 Coccinelle.dickson <> l1 var
R2816:2838 Coccinelle.dickson D multiset_extension_step ind
R2840:2840 Coccinelle.dickson <> R var
R2959:2962 Coq.Init.Datatypes <> list ind
R2966:2968 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2965:2965 Coccinelle.dickson D A defax
R2969:2972 Coq.Init.Datatypes <> list ind
R2974:2974 Coccinelle.dickson D A defax
R2980:2983 Coq.Init.Datatypes <> list ind
R2985:2985 Coccinelle.dickson D A defax
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R2998:2999 Coccinelle.dickson <> ll var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn def
R3052:3053 Coccinelle.dickson <> ll var
R3087:3090 Coq.Init.Datatypes <> list ind
R3094:3096 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3093:3093 Coccinelle.dickson D A defax
R3097:3100 Coq.Init.Datatypes <> list ind
R3102:3102 Coccinelle.dickson D A defax
R3108:3111 Coq.Init.Datatypes <> list ind
R3113:3113 Coccinelle.dickson D A defax
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
R3126:3127 Coccinelle.dickson <> ll var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn def
R3183:3184 Coccinelle.dickson <> ll var
ax 3205:3220 D multiset_closure
R3236:3236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3265:3269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3284:3289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3344:3349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3350:3356 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3358:3359 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3360:3366 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3369:3372 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3401:3406 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3373:3378 Coccinelle.dickson D permut syndef
R3383:3383 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3393:3397 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3384:3390 Coccinelle.dickson D appendn def
R3392:3392 Coccinelle.dickson <> l var
R3398:3399 Coccinelle.dickson <> pq var
R3380:3380 Coccinelle.dickson <> p var
R3433:3438 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3407:3412 Coccinelle.dickson D permut syndef
R3417:3417 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3425:3429 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3418:3422 Coccinelle.dickson D consn def
R3424:3424 Coccinelle.dickson <> l var
R3430:3431 Coccinelle.dickson <> pq var
R3414:3414 Coccinelle.dickson <> q var
R3447:3452 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3440:3443 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3439:3439 Coccinelle.dickson <> l var
R3444:3446 Coq.Init.Datatypes <> nil constr
R3453:3453 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3526:3533 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3629:3629 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3486:3489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3517:3520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3521:3521 Coccinelle.dickson <> R var
R3525:3525 Coccinelle.dickson <> a var
R3523:3523 Coccinelle.dickson <> b var
R3500:3502 Coccinelle.more_list <> mem def
R3515:3516 Coccinelle.dickson <> la var
R3513:3513 Coccinelle.dickson <> b var
R3504:3511 Coccinelle.dickson D eq_A defax
R3475:3476 Coq.Lists.List <> In def
R3485:3485 Coccinelle.dickson <> l var
R3478:3478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3480:3480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3483:3483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3479:3479 Coccinelle.dickson <> a var
R3481:3482 Coccinelle.dickson <> la var
R3534:3534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3551:3555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3590:3593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3620:3623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3624:3628 Coq.Init.Logic <> False ind
R3594:3596 Coccinelle.more_list <> mem def
R3610:3616 Coccinelle.dickson D appendn def
R3618:3618 Coccinelle.dickson <> l var
R3607:3607 Coccinelle.dickson <> a var
R3598:3605 Coccinelle.dickson D eq_A defax
R3566:3568 Coccinelle.more_list <> mem def
R3582:3586 Coccinelle.dickson D consn def
R3588:3588 Coccinelle.dickson <> l var
R3579:3579 Coccinelle.dickson <> a var
R3570:3577 Coccinelle.dickson D eq_A defax
R3545:3545 Coq.Init.Logic <> ::type_scope:'~'_x not
R3546:3546 Coccinelle.dickson <> R var
R3550:3550 Coccinelle.dickson <> a var
R3548:3548 Coccinelle.dickson <> a var
R3302:3311 Coccinelle.TransClosure <> trans_clos ind
R3343:3343 Coccinelle.dickson <> q var
R3341:3341 Coccinelle.dickson <> p var
R3314:3336 Coccinelle.dickson D multiset_extension_step ind
R3338:3338 Coccinelle.dickson <> R var
R3270:3279 Coq.Relations.Relation_Definitions <> transitive def
R3283:3283 Coccinelle.dickson <> R var
R3249:3249 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3255:3257 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3264:3264 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3250:3250 Coccinelle.dickson <> R var
R3254:3254 Coccinelle.dickson <> y var
R3252:3252 Coccinelle.dickson <> x var
R3258:3258 Coq.Init.Logic <> ::type_scope:'~'_x not
R3259:3259 Coccinelle.dickson <> R var
R3263:3263 Coccinelle.dickson <> y var
R3261:3261 Coccinelle.dickson <> x var
R3637:3637 Coccinelle.dickson D <> modtype
R3660:3674 Coccinelle.decidable_set S <> mod
mod 3648:3651 <> Make
R3699:3719 Coccinelle.decidable_set Convert <> modtype
R3722:3724 Coccinelle.dickson DS1 <> modtype
mod 3693:3694 <> Make.DS
R3748:3763 Coccinelle.list_permut Make <> modtype
R3766:3767 Coccinelle.dickson Make.DS <> modtype
mod 3742:3743 <> Make.LP
ind 3847:3869 Make multiset_extension_step
constr 3922:3929 Make rmv_case
R3876:3883 Coq.Relations.Relation_Definitions <> relation def
R3885:3885 Coccinelle.dickson Make A defax
R3896:3899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3906:3909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3900:3903 Coq.Init.Datatypes <> list ind
R3905:3905 Coccinelle.dickson Make A defax
R3890:3893 Coq.Init.Datatypes <> list ind
R3895:3895 Coccinelle.dickson Make A defax
R3960:3960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3997:4008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4028:4031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4050:4059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4060:4082 Coccinelle.dickson <> multiset_extension_step ind
R4089:4090 Coccinelle.dickson <> l2 var
R4086:4087 Coccinelle.dickson <> l1 var
R4084:4084 Coccinelle.dickson <> R var
R4032:4037 Coccinelle.dickson Make permut syndef
R4044:4047 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4043:4043 Coccinelle.dickson <> a var
R4048:4048 Coccinelle.dickson <> l var
R4039:4040 Coccinelle.dickson <> l2 var
R4009:4014 Coccinelle.dickson Make permut syndef
R4022:4025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R4020:4021 Coccinelle.dickson <> la var
R4026:4026 Coccinelle.dickson <> l var
R4016:4017 Coccinelle.dickson <> l1 var
R3988:3991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3992:3992 Coccinelle.dickson <> R var
R3996:3996 Coccinelle.dickson <> a var
R3994:3994 Coccinelle.dickson <> b var
R3971:3973 Coccinelle.more_list <> mem def
R3986:3987 Coccinelle.dickson <> la var
R3984:3984 Coccinelle.dickson <> b var
R3975:3982 Coccinelle.dickson Make eq_A defax
prf 4165:4201 Make list_permut_multiset_extension_step_1
R4237:4243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4274:4277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4278:4300 Coccinelle.dickson Make multiset_extension_step ind
R4307:4307 Coccinelle.dickson <> l var
R4304:4305 Coccinelle.dickson <> l2 var
R4302:4302 Coccinelle.dickson <> R var
R4244:4266 Coccinelle.dickson Make multiset_extension_step ind
R4273:4273 Coccinelle.dickson <> l var
R4270:4271 Coccinelle.dickson <> l1 var
R4268:4268 Coccinelle.dickson <> R var
R4225:4230 Coccinelle.dickson Make permut syndef
R4235:4236 Coccinelle.dickson <> l2 var
R4232:4233 Coccinelle.dickson <> l1 var
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
prf 4541:4577 Make list_permut_multiset_extension_step_2
R4613:4619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4650:4653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4654:4676 Coccinelle.dickson Make multiset_extension_step ind
R4682:4683 Coccinelle.dickson <> l2 var
R4680:4680 Coccinelle.dickson <> l var
R4678:4678 Coccinelle.dickson <> R var
R4620:4642 Coccinelle.dickson Make multiset_extension_step ind
R4648:4649 Coccinelle.dickson <> l1 var
R4646:4646 Coccinelle.dickson <> l var
R4644:4644 Coccinelle.dickson <> R var
R4601:4606 Coccinelle.dickson Make permut syndef
R4611:4612 Coccinelle.dickson <> l2 var
R4608:4609 Coccinelle.dickson <> l1 var
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4944:4951 Coq.Relations.Relation_Definitions <> relation def
R4953:4953 Coccinelle.dickson Make A defax
R4959:4981 Coccinelle.dickson Make multiset_extension_step ind
R4983:4983 Coccinelle.dickson <> R var
R5010:5014 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5004:5009 Coccinelle.dickson Make permut syndef
R5021:5025 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5015:5020 Coccinelle.dickson Make permut syndef
R5026:5028 Coq.Init.Logic <> iff def
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 5526:5534 Make two_cases
R5593:5597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5598:5598 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5676:5682 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5764:5764 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5599:5605 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5608:5609 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5628:5645 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5610:5615 Coccinelle.dickson Make permut syndef
R5621:5624 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5620:5620 Coccinelle.dickson <> a var
R5625:5626 Coccinelle.dickson <> n' var
R5617:5617 Coccinelle.dickson <> n var
R5646:5668 Coccinelle.dickson Make multiset_extension_step ind
R5675:5675 Coccinelle.dickson <> m var
R5672:5673 Coccinelle.dickson <> n' var
R5670:5670 Coccinelle.dickson <> R var
R5683:5689 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5691:5692 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5693:5693 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5729:5746 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5720:5723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5724:5724 Coccinelle.dickson <> R var
R5728:5728 Coccinelle.dickson <> a var
R5726:5726 Coccinelle.dickson <> b var
R5704:5706 Coccinelle.more_list <> mem def
R5719:5719 Coccinelle.dickson <> k var
R5717:5717 Coccinelle.dickson <> b var
R5708:5715 Coccinelle.dickson Make eq_A defax
R5747:5752 Coccinelle.dickson Make permut syndef
R5758:5761 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5757:5757 Coccinelle.dickson <> k var
R5762:5762 Coccinelle.dickson <> m var
R5754:5754 Coccinelle.dickson <> n var
R5557:5579 Coccinelle.dickson Make multiset_extension_step ind
R5587:5590 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5586:5586 Coccinelle.dickson <> a var
R5591:5591 Coccinelle.dickson <> m var
R5583:5583 Coccinelle.dickson <> n var
R5581:5581 Coccinelle.dickson <> R var
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R6066:6069 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6066:6069 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6171:6171 Coccinelle.dickson Make A defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6171:6171 Coccinelle.dickson Make A defax
R6210:6213 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6210:6213 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6417:6420 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6417:6420 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6813:6822 Coccinelle.dickson Make permut_sym defax
R6836:6853 Coccinelle.dickson Make permut_cons_inside defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R7092:7097 Coq.Init.Logic <> sym_eq syndef
R7092:7097 Coq.Init.Logic <> sym_eq syndef
prf 7178:7192 Make list_permut_acc
R7226:7232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7267:7270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7271:7273 Coq.Init.Wf <> Acc ind
R7303:7304 Coccinelle.dickson <> l2 var
R7276:7298 Coccinelle.dickson Make multiset_extension_step ind
R7300:7300 Coccinelle.dickson <> R var
R7233:7235 Coq.Init.Wf <> Acc ind
R7265:7266 Coccinelle.dickson <> l1 var
R7238:7260 Coccinelle.dickson Make multiset_extension_step ind
R7262:7262 Coccinelle.dickson <> R var
R7214:7219 Coccinelle.dickson Make permut syndef
R7224:7225 Coccinelle.dickson <> l1 var
R7221:7222 Coccinelle.dickson <> l2 var
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
prf 7748:7759 Make dickson_aux1
R7775:7782 Coq.Relations.Relation_Definitions <> relation def
R7784:7784 Coccinelle.dickson Make A defax
R7791:7791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7914:7919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7963:7968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7969:7969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8072:8077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8078:8080 Coq.Init.Wf <> Acc ind
R8112:8115 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8111:8111 Coccinelle.dickson <> a var
R8116:8116 Coccinelle.dickson <> m var
R8083:8105 Coccinelle.dickson Make multiset_extension_step ind
R8107:8107 Coccinelle.dickson <> R var
R8013:8030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8031:8033 Coq.Init.Wf <> Acc ind
R8065:8068 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8064:8064 Coccinelle.dickson <> a var
R8069:8070 Coccinelle.dickson <> m' var
R8036:8058 Coccinelle.dickson Make multiset_extension_step ind
R8060:8060 Coccinelle.dickson <> R var
R7982:8004 Coccinelle.dickson Make multiset_extension_step ind
R8006:8006 Coccinelle.dickson <> R var
R8012:8012 Coccinelle.dickson <> m var
R8009:8010 Coccinelle.dickson <> m' var
R7930:7932 Coq.Init.Wf <> Acc ind
R7962:7962 Coccinelle.dickson <> m var
R7935:7957 Coccinelle.dickson Make multiset_extension_step ind
R7959:7959 Coccinelle.dickson <> R var
R7807:7813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7857:7873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7874:7876 Coq.Init.Wf <> Acc ind
R7908:7911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7907:7907 Coccinelle.dickson <> b var
R7912:7912 Coccinelle.dickson <> m var
R7879:7901 Coccinelle.dickson Make multiset_extension_step ind
R7903:7903 Coccinelle.dickson <> R var
R7824:7826 Coq.Init.Wf <> Acc ind
R7856:7856 Coccinelle.dickson <> m var
R7829:7851 Coccinelle.dickson Make multiset_extension_step ind
R7853:7853 Coccinelle.dickson <> R var
R7802:7802 Coccinelle.dickson <> R var
R7806:7806 Coccinelle.dickson <> a var
R7804:7804 Coccinelle.dickson <> b var
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
prf 8496:8507 Make dickson_aux2
R8558:8563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8574:8574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8719:8726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8727:8729 Coq.Init.Wf <> Acc ind
R8761:8764 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8760:8760 Coccinelle.dickson <> a var
R8765:8765 Coccinelle.dickson <> m var
R8732:8754 Coccinelle.dickson Make multiset_extension_step ind
R8756:8756 Coccinelle.dickson <> R var
R8590:8607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8651:8678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8679:8681 Coq.Init.Wf <> Acc ind
R8713:8716 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8712:8712 Coccinelle.dickson <> b var
R8717:8717 Coccinelle.dickson <> m var
R8684:8706 Coccinelle.dickson Make multiset_extension_step ind
R8708:8708 Coccinelle.dickson <> R var
R8618:8620 Coq.Init.Wf <> Acc ind
R8650:8650 Coccinelle.dickson <> m var
R8623:8645 Coccinelle.dickson Make multiset_extension_step ind
R8647:8647 Coccinelle.dickson <> R var
R8585:8585 Coccinelle.dickson <> R var
R8589:8589 Coccinelle.dickson <> a var
R8587:8587 Coccinelle.dickson <> b var
R8525:8527 Coq.Init.Wf <> Acc ind
R8557:8557 Coccinelle.dickson <> m var
R8530:8552 Coccinelle.dickson Make multiset_extension_step ind
R8554:8554 Coccinelle.dickson <> R var
R8810:8817 Coq.Init.Wf <> Acc_iter syndef
R8895:8899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
R8810:8817 Coq.Init.Wf <> Acc_iter syndef
R8895:8899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
prf 9088:9099 Make dickson_aux3
R9122:9125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9169:9172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9173:9175 Coq.Init.Wf <> Acc ind
R9207:9210 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9206:9206 Coccinelle.dickson <> a var
R9211:9211 Coccinelle.dickson <> m var
R9178:9200 Coccinelle.dickson Make multiset_extension_step ind
R9202:9202 Coccinelle.dickson <> R var
R9136:9138 Coq.Init.Wf <> Acc ind
R9168:9168 Coccinelle.dickson <> m var
R9141:9163 Coccinelle.dickson Make multiset_extension_step ind
R9165:9165 Coccinelle.dickson <> R var
R9115:9117 Coq.Init.Wf <> Acc ind
R9121:9121 Coccinelle.dickson <> a var
R9119:9119 Coccinelle.dickson <> R var
R9247:9254 Coq.Init.Wf <> Acc_iter syndef
R9282:9285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9329:9333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a var
R9372:9372 Coccinelle.dickson <> m var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a var
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
R9247:9254 Coq.Init.Wf <> Acc_iter syndef
R9282:9285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9329:9333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a var
R9372:9372 Coccinelle.dickson <> m var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a var
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
prf 9549:9555 Make dickson
R9586:9589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9590:9601 Coq.Init.Wf <> well_founded def
R9604:9626 Coccinelle.dickson Make multiset_extension_step ind
R9628:9628 Coccinelle.dickson <> R var
R9572:9583 Coq.Init.Wf <> well_founded def
R9585:9585 Coccinelle.dickson <> R var
R9661:9672 Coq.Init.Wf <> well_founded def
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
prf 9904:9917 Make dickson_strong
R9936:9936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9964:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9969:9971 Coq.Init.Wf <> Acc ind
R10001:10001 Coccinelle.dickson <> l var
R9974:9996 Coccinelle.dickson Make multiset_extension_step ind
R9998:9998 Coccinelle.dickson <> R var
R9953:9956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9957:9959 Coq.Init.Wf <> Acc ind
R9963:9963 Coccinelle.dickson <> a var
R9961:9961 Coccinelle.dickson <> R var
R9947:9948 Coq.Lists.List <> In def
R9952:9952 Coccinelle.dickson <> l var
R9950:9950 Coccinelle.dickson <> a var
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
prf 10369:10416 Make list_permut_trans_clos_multiset_extension_step_1
R10452:10458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10504:10510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10512:10521 Coccinelle.TransClosure <> trans_clos ind
R10524:10546 Coccinelle.dickson Make multiset_extension_step ind
R10548:10548 Coccinelle.dickson <> R var
R10555:10555 Coccinelle.dickson <> l var
R10552:10553 Coccinelle.dickson <> l2 var
R10460:10469 Coccinelle.TransClosure <> trans_clos ind
R10472:10494 Coccinelle.dickson Make multiset_extension_step ind
R10496:10496 Coccinelle.dickson <> R var
R10503:10503 Coccinelle.dickson <> l var
R10500:10501 Coccinelle.dickson <> l1 var
R10440:10445 Coccinelle.dickson Make permut syndef
R10450:10451 Coccinelle.dickson <> l2 var
R10447:10448 Coccinelle.dickson <> l1 var
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 10817:10864 Make list_permut_trans_clos_multiset_extension_step_2
R10900:10906 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10952:10958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10960:10969 Coccinelle.TransClosure <> trans_clos ind
R10972:10994 Coccinelle.dickson Make multiset_extension_step ind
R10996:10996 Coccinelle.dickson <> R var
R11002:11003 Coccinelle.dickson <> l2 var
R11000:11000 Coccinelle.dickson <> l var
R10908:10917 Coccinelle.TransClosure <> trans_clos ind
R10920:10942 Coccinelle.dickson Make multiset_extension_step ind
R10944:10944 Coccinelle.dickson <> R var
R10950:10951 Coccinelle.dickson <> l1 var
R10948:10948 Coccinelle.dickson <> l var
R10888:10893 Coccinelle.dickson Make permut syndef
R10898:10899 Coccinelle.dickson <> l2 var
R10895:10896 Coccinelle.dickson <> l1 var
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11165:11171 Coccinelle.TransClosure <> t_trans constr
R11165:11171 Coccinelle.TransClosure <> t_trans constr
prf 11222:11257 Make context_multiset_extension_step_app1
R11312:11340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11341:11363 Coccinelle.dickson Make multiset_extension_step ind
R11379:11382 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11378:11378 Coccinelle.dickson <> l var
R11383:11384 Coccinelle.dickson <> l2 var
R11369:11372 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11368:11368 Coccinelle.dickson <> l var
R11373:11374 Coccinelle.dickson <> l1 var
R11365:11365 Coccinelle.dickson <> R var
R11281:11303 Coccinelle.dickson Make multiset_extension_step ind
R11310:11311 Coccinelle.dickson <> l2 var
R11307:11308 Coccinelle.dickson <> l1 var
R11305:11305 Coccinelle.dickson <> R var
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11492:11493 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11476:11477 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11492:11493 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11476:11477 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11541:11544 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11541:11544 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11606:11612 Coq.Lists.List <> app_ass syndef
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11606:11612 Coq.Lists.List <> app_ass syndef
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11701:11704 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11701:11704 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
prf 11862:11908 Make context_trans_clos_multiset_extension_step_app1
R11976:12004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12005:12014 Coccinelle.TransClosure <> trans_clos ind
R12056:12059 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12055:12055 Coccinelle.dickson <> l var
R12060:12061 Coccinelle.dickson <> l2 var
R12046:12049 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12045:12045 Coccinelle.dickson <> l var
R12050:12051 Coccinelle.dickson <> l1 var
R12017:12039 Coccinelle.dickson Make multiset_extension_step ind
R12041:12041 Coccinelle.dickson <> R var
R11932:11941 Coccinelle.TransClosure <> trans_clos ind
R11974:11975 Coccinelle.dickson <> l2 var
R11971:11972 Coccinelle.dickson <> l1 var
R11944:11966 Coccinelle.dickson Make multiset_extension_step ind
R11968:11968 Coccinelle.dickson <> R var
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12193:12196 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12193:12196 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
prf 12275:12310 Make context_multiset_extension_step_cons
R12326:12326 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12343:12350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12412:12440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12441:12463 Coccinelle.dickson Make multiset_extension_step ind
R12470:12471 Coccinelle.dickson <> l2 var
R12467:12468 Coccinelle.dickson <> l1 var
R12465:12465 Coccinelle.dickson <> R var
R12367:12389 Coccinelle.dickson Make multiset_extension_step ind
R12405:12408 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12404:12404 Coccinelle.dickson <> a var
R12409:12410 Coccinelle.dickson <> l2 var
R12395:12398 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12394:12394 Coccinelle.dickson <> a var
R12399:12400 Coccinelle.dickson <> l1 var
R12391:12391 Coccinelle.dickson <> R var
R12337:12337 Coq.Init.Logic <> ::type_scope:'~'_x not
R12338:12338 Coccinelle.dickson <> R var
R12342:12342 Coccinelle.dickson <> a var
R12340:12340 Coccinelle.dickson <> a var
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13268:13274 Coq.Lists.List <> app_ass syndef
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13268:13274 Coq.Lists.List <> app_ass syndef
R13268:13274 Coq.Lists.List <> app_ass syndef
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13333:13339 Coq.Lists.List <> ass_app syndef
R13333:13339 Coq.Lists.List <> ass_app syndef
R13333:13339 Coq.Lists.List <> ass_app syndef
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13721:13727 Coq.Lists.List <> app_ass syndef
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13721:13727 Coq.Lists.List <> app_ass syndef
R13721:13727 Coq.Lists.List <> app_ass syndef
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13786:13792 Coq.Lists.List <> ass_app syndef
R13786:13792 Coq.Lists.List <> ass_app syndef
R13786:13792 Coq.Lists.List <> ass_app syndef
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
prf 13979:14021 Make remove_context_multiset_extension_step_app1
R14038:14038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14055:14062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14124:14152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14153:14175 Coccinelle.dickson Make multiset_extension_step ind
R14182:14183 Coccinelle.dickson <> l2 var
R14179:14180 Coccinelle.dickson <> l1 var
R14177:14177 Coccinelle.dickson <> R var
R14079:14101 Coccinelle.dickson Make multiset_extension_step ind
R14117:14120 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14116:14116 Coccinelle.dickson <> l var
R14121:14122 Coccinelle.dickson <> l2 var
R14107:14110 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14106:14106 Coccinelle.dickson <> l var
R14111:14112 Coccinelle.dickson <> l1 var
R14103:14103 Coccinelle.dickson <> R var
R14049:14049 Coq.Init.Logic <> ::type_scope:'~'_x not
R14050:14050 Coccinelle.dickson <> R var
R14054:14054 Coccinelle.dickson <> a var
R14052:14052 Coccinelle.dickson <> a var
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14425:14425 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14425:14425 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14569:14569 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14569:14569 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
prf 14744:14779 Make context_multiset_extension_step_app2
R14834:14862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14863:14885 Coccinelle.dickson Make multiset_extension_step ind
R14902:14905 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14900:14901 Coccinelle.dickson <> l2 var
R14906:14906 Coccinelle.dickson <> l var
R14892:14895 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14890:14891 Coccinelle.dickson <> l1 var
R14896:14896 Coccinelle.dickson <> l var
R14887:14887 Coccinelle.dickson <> R var
R14803:14825 Coccinelle.dickson Make multiset_extension_step ind
R14832:14833 Coccinelle.dickson <> l2 var
R14829:14830 Coccinelle.dickson <> l1 var
R14827:14827 Coccinelle.dickson <> R var
R14985:14992 Coccinelle.dickson Make rmv_case constr
R15016:15017 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14999:15000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14985:14992 Coccinelle.dickson Make rmv_case constr
R15016:15017 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14999:15000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15048:15054 Coq.Lists.List <> app_ass syndef
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15048:15054 Coq.Lists.List <> app_ass syndef
R15048:15054 Coq.Lists.List <> app_ass syndef
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15173:15176 Coq.Init.Datatypes <> list ind
R15180:15182 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15179:15179 Coccinelle.dickson Make A defax
R15183:15186 Coq.Init.Datatypes <> list ind
R15188:15188 Coccinelle.dickson Make A defax
R15194:15197 Coq.Init.Datatypes <> list ind
R15199:15199 Coccinelle.dickson Make A defax
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
R15212:15213 Coccinelle.dickson <> ll var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn def
R15266:15267 Coccinelle.dickson <> ll var
prf 15284:15292 Make mem_consn
R15337:15341 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15312:15314 Coccinelle.more_list <> mem def
R15328:15332 Coccinelle.dickson Make consn def
R15334:15335 Coccinelle.dickson <> ll var
R15325:15325 Coccinelle.dickson <> a var
R15316:15323 Coccinelle.dickson Make eq_A defax
R15342:15348 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R15351:15352 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R15353:15354 Coq.Lists.List <> In def
R15363:15364 Coccinelle.dickson <> ll var
R15356:15356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15358:15358 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15361:15361 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15357:15357 Coccinelle.dickson <> a var
R15359:15360 Coccinelle.dickson <> la var
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
prf 15847:15855 Make consn_app
R15894:15896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15876:15880 Coccinelle.dickson Make consn def
R15886:15889 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15883:15885 Coccinelle.dickson <> ll1 var
R15890:15892 Coccinelle.dickson <> ll2 var
R15906:15909 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15897:15901 Coccinelle.dickson Make consn def
R15903:15905 Coccinelle.dickson <> ll1 var
R15910:15914 Coccinelle.dickson Make consn def
R15916:15918 Coccinelle.dickson <> ll2 var
R16059:16062 Coq.Init.Datatypes <> list ind
R16066:16068 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16065:16065 Coccinelle.dickson Make A defax
R16069:16072 Coq.Init.Datatypes <> list ind
R16074:16074 Coccinelle.dickson Make A defax
R16080:16083 Coq.Init.Datatypes <> list ind
R16085:16085 Coccinelle.dickson Make A defax
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
R16098:16099 Coccinelle.dickson <> ll var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn def
R16155:16156 Coccinelle.dickson <> ll var
prf 16173:16183 Make appendn_app
R16224:16226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16204:16210 Coccinelle.dickson Make appendn def
R16216:16219 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16213:16215 Coccinelle.dickson <> ll1 var
R16220:16222 Coccinelle.dickson <> ll2 var
R16238:16241 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16227:16233 Coccinelle.dickson Make appendn def
R16235:16237 Coccinelle.dickson <> ll1 var
R16242:16248 Coccinelle.dickson Make appendn def
R16250:16252 Coccinelle.dickson <> ll2 var
R16363:16369 Coq.Lists.List <> ass_app syndef
R16363:16369 Coq.Lists.List <> ass_app syndef
R16363:16369 Coq.Lists.List <> ass_app syndef
prf 16393:16402 Make in_appendn
R16449:16452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16453:16459 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16461:16462 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16463:16469 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16472:16473 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16486:16489 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16474:16475 Coq.Lists.List <> In def
R16484:16485 Coccinelle.dickson <> ll var
R16477:16477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16479:16479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16482:16482 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16478:16478 Coccinelle.dickson <> b var
R16480:16481 Coccinelle.dickson <> lb var
R16490:16492 Coccinelle.more_list <> mem def
R16505:16506 Coccinelle.dickson <> lb var
R16503:16503 Coccinelle.dickson <> a var
R16494:16501 Coccinelle.dickson Make eq_A defax
R16422:16424 Coccinelle.more_list <> mem def
R16438:16444 Coccinelle.dickson Make appendn def
R16446:16447 Coccinelle.dickson <> ll var
R16435:16435 Coccinelle.dickson <> a var
R16426:16433 Coccinelle.dickson Make eq_A defax
R16554:16560 Coccinelle.dickson Make appendn def
R16554:16560 Coccinelle.dickson Make appendn def
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
prf 16842:16861 Make multiset_closure_aux
R16879:16886 Coq.Relations.Relation_Definitions <> relation def
R16888:16888 Coccinelle.dickson Make A defax
R16932:16937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16964:16969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16978:16983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16984:16984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17057:17063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17064:17073 Coccinelle.TransClosure <> trans_clos ind
R17105:17105 Coccinelle.dickson <> q var
R17103:17103 Coccinelle.dickson <> p var
R17076:17098 Coccinelle.dickson Make multiset_extension_step ind
R17100:17100 Coccinelle.dickson <> R var
R17017:17020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17048:17051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17052:17052 Coccinelle.dickson <> R var
R17056:17056 Coccinelle.dickson <> a var
R17054:17054 Coccinelle.dickson <> b var
R17031:17033 Coccinelle.more_list <> mem def
R17046:17047 Coccinelle.dickson <> la var
R17044:17044 Coccinelle.dickson <> b var
R17035:17042 Coccinelle.dickson Make eq_A defax
R17006:17007 Coq.Lists.List <> In def
R17016:17016 Coccinelle.dickson <> l var
R17009:17009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17011:17011 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17014:17014 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17010:17010 Coccinelle.dickson <> a var
R17012:17013 Coccinelle.dickson <> la var
R16971:16974 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16970:16970 Coccinelle.dickson <> l var
R16975:16977 Coq.Init.Datatypes <> nil constr
R16938:16943 Coccinelle.dickson Make permut syndef
R16948:16948 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16956:16960 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16949:16953 Coccinelle.dickson Make consn def
R16955:16955 Coccinelle.dickson <> l var
R16961:16962 Coccinelle.dickson <> pq var
R16945:16945 Coccinelle.dickson <> q var
R16904:16909 Coccinelle.dickson Make permut syndef
R16914:16914 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16924:16928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16915:16921 Coccinelle.dickson Make appendn def
R16923:16923 Coccinelle.dickson <> l var
R16929:16930 Coccinelle.dickson <> pq var
R16911:16911 Coccinelle.dickson <> p var
R17243:17245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
R17243:17245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
R17338:17341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17344:17344 Coccinelle.dickson <> b var
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17338:17341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17344:17344 Coccinelle.dickson <> b var
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17531:17534 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17531:17534 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17574:17580 Coq.Lists.List <> app_ass syndef
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17574:17580 Coq.Lists.List <> app_ass syndef
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17858:17861 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17837:17840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17814:17817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17885:17888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17858:17861 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17837:17840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17814:17817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17885:17888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17946:17952 Coq.Lists.List <> ass_app syndef
R17946:17952 Coq.Lists.List <> ass_app syndef
R17946:17952 Coq.Lists.List <> ass_app syndef
prf 18054:18074 Make multiset_closure_aux2
R18092:18099 Coq.Relations.Relation_Definitions <> relation def
R18101:18101 Coccinelle.dickson Make A defax
R18148:18153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18186:18191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18213:18218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18219:18219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18292:18298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18299:18308 Coccinelle.TransClosure <> trans_clos ind
R18340:18340 Coccinelle.dickson <> q var
R18338:18338 Coccinelle.dickson <> p var
R18311:18333 Coccinelle.dickson Make multiset_extension_step ind
R18335:18335 Coccinelle.dickson <> R var
R18252:18255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18283:18286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18287:18287 Coccinelle.dickson <> R var
R18291:18291 Coccinelle.dickson <> a var
R18289:18289 Coccinelle.dickson <> b var
R18266:18268 Coccinelle.more_list <> mem def
R18281:18282 Coccinelle.dickson <> la var
R18279:18279 Coccinelle.dickson <> b var
R18270:18277 Coccinelle.dickson Make eq_A defax
R18241:18242 Coq.Lists.List <> In def
R18251:18251 Coccinelle.dickson <> l var
R18244:18244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18246:18246 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18249:18249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18245:18245 Coccinelle.dickson <> a var
R18247:18248 Coccinelle.dickson <> la var
R18200:18203 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18193:18196 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18192:18192 Coccinelle.dickson <> l var
R18197:18199 Coq.Init.Datatypes <> nil constr
R18206:18209 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18204:18205 Coccinelle.dickson <> le var
R18210:18212 Coq.Init.Datatypes <> nil constr
R18154:18159 Coccinelle.dickson Make permut syndef
R18166:18169 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18164:18165 Coccinelle.dickson <> le var
R18170:18170 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18178:18182 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18171:18175 Coccinelle.dickson Make consn def
R18177:18177 Coccinelle.dickson <> l var
R18183:18184 Coccinelle.dickson <> pq var
R18161:18161 Coccinelle.dickson <> q var
R18120:18125 Coccinelle.dickson Make permut syndef
R18130:18130 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18140:18144 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18131:18137 Coccinelle.dickson Make appendn def
R18139:18139 Coccinelle.dickson <> l var
R18145:18146 Coccinelle.dickson <> pq var
R18127:18127 Coccinelle.dickson <> p var
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
R18434:18434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
R18434:18434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18496:18499 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18496:18499 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18641:18644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18641:18644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18681:18687 Coq.Lists.List <> ass_app syndef
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18681:18687 Coq.Lists.List <> ass_app syndef
R18681:18687 Coq.Lists.List <> ass_app syndef
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18722:18730 Coccinelle.dickson Make consn_app thm
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18969:18971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R18969:18971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
mod 19234:19236 <> Make.LDS
def 19251:19251 Make.LDS A
R19258:19261 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19268:19268 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19257:19257 Coccinelle.dickson Make.DS A defax
R19262:19265 Coq.Init.Datatypes <> list ind
R19267:19267 Coccinelle.dickson Make.DS A defax
def 19288:19291 Make.LDS eq_A
R19297:19298 Coq.Init.Logic <> eq ind
R19300:19300 Coccinelle.dickson Make.LDS A def
prf 19310:19317 Make.LDS eq_proof
R19321:19331 Coq.Relations.Relation_Definitions <> equivalence rec
R19335:19338 Coccinelle.dickson Make.LDS eq_A def
R19333:19333 Coccinelle.dickson Make.LDS A def
R19348:19351 Coccinelle.dickson Make.LDS eq_A def
R19376:19385 Coq.Init.Logic <> refl_equal syndef
R19376:19385 Coq.Init.Logic <> refl_equal syndef
R19468:19477 Coq.Init.Logic <> refl_equal syndef
R19468:19477 Coq.Init.Logic <> refl_equal syndef
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
def 19744:19755 Make.LDS eq_bool_list
R19764:19767 Coq.Init.Datatypes <> bool ind
R19787:19788 Coccinelle.dickson <> l2 var
R19783:19784 Coccinelle.dickson <> l1 var
R19802:19804 Coq.Init.Datatypes <> nil constr
R19807:19809 Coq.Init.Datatypes <> nil constr
R19814:19817 Coq.Init.Datatypes <> true constr
R19826:19828 Coq.Init.Datatypes <> nil constr
R19833:19836 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19843:19847 Coq.Init.Datatypes <> false constr
R19859:19862 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19868:19870 Coq.Init.Datatypes <> nil constr
R19875:19879 Coq.Init.Datatypes <> false constr
R19891:19894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19903:19906 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19917:19927 Coccinelle.dickson DS1 eq_bool defax
R19964:19968 Coq.Init.Datatypes <> false constr
R19940:19951 Coccinelle.dickson <> eq_bool_list def
R19956:19957 Coccinelle.dickson <> l2 var
R19953:19954 Coccinelle.dickson <> l1 var
def 19992:19998 Make.LDS eq_bool
R20010:20013 Coq.Init.Datatypes <> bool ind
R20033:20035 Coccinelle.dickson <> al2 var
R20028:20030 Coccinelle.dickson <> al1 var
R20046:20046 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20049:20049 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20052:20052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20055:20055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20058:20058 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20061:20061 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20069:20079 Coccinelle.dickson DS1 eq_bool defax
R20116:20120 Coq.Init.Datatypes <> false constr
R20092:20103 Coccinelle.dickson Make.LDS eq_bool_list def
prf 20136:20145 Make.LDS eq_bool_ok
R20171:20177 Coccinelle.dickson Make.LDS eq_bool def
R20183:20185 Coccinelle.dickson <> al2 var
R20179:20181 Coccinelle.dickson <> al1 var
R20192:20195 Coq.Init.Datatypes <> true constr
R20203:20205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20200:20202 Coccinelle.dickson <> al1 var
R20206:20208 Coccinelle.dickson <> al2 var
R20212:20216 Coq.Init.Datatypes <> false constr
R20221:20221 Coq.Init.Logic <> ::type_scope:'~'_x not
R20225:20227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20222:20224 Coccinelle.dickson <> al1 var
R20228:20230 Coccinelle.dickson <> al2 var
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2 var
R20435:20436 Coccinelle.dickson <> l1 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1 var
R20459:20460 Coccinelle.dickson <> l2 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> ::type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1 var
R20479:20480 Coccinelle.dickson <> l2 var
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2 var
R20435:20436 Coccinelle.dickson <> l1 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1 var
R20459:20460 Coccinelle.dickson <> l2 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> ::type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1 var
R20479:20480 Coccinelle.dickson <> l2 var
R20550:20559 Coq.Init.Logic <> refl_equal syndef
R20550:20559 Coq.Init.Logic <> refl_equal syndef
R20602:20615 Coccinelle.dickson DS1 eq_bool_ok defax
R20631:20641 Coccinelle.dickson DS1 eq_bool defax
R20602:20615 Coccinelle.dickson DS1 eq_bool_ok defax
R20631:20641 Coccinelle.dickson DS1 eq_bool defax
R20728:20739 Coccinelle.dickson Make.LDS eq_bool_list def
R20728:20739 Coccinelle.dickson Make.LDS eq_bool_list def
R20799:20808 Coq.Init.Logic <> refl_equal syndef
R20799:20808 Coq.Init.Logic <> refl_equal syndef
R20872:20881 Coq.Init.Logic <> refl_equal syndef
R20872:20881 Coq.Init.Logic <> refl_equal syndef
R20945:20954 Coq.Init.Logic <> refl_equal syndef
R20945:20954 Coq.Init.Logic <> refl_equal syndef
R20999:21010 Coccinelle.dickson Make.LDS eq_bool_list def
R20999:21010 Coccinelle.dickson Make.LDS eq_bool_list def
R21071:21080 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21086:21093 Coccinelle.dickson Make.LDS eq_proof thm
R21071:21080 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21086:21093 Coccinelle.dickson Make.LDS eq_proof thm
R21158:21167 Coq.Init.Logic <> refl_equal syndef
R21158:21167 Coq.Init.Logic <> refl_equal syndef
R21231:21240 Coq.Init.Logic <> refl_equal syndef
R21231:21240 Coq.Init.Logic <> refl_equal syndef
R21257:21259 Coccinelle.dickson Make.LDS <> mod
R21278:21298 Coccinelle.decidable_set Convert <> modtype
R21300:21302 Coccinelle.dickson Make.LDS <> modtype
mod 21270:21273 <> Make.LEDS
R21320:21335 Coccinelle.list_permut Make <> modtype
R21338:21341 Coccinelle.dickson Make.LEDS <> modtype
mod 21313:21315 <> Make.LLP
prf 21352:21363 Make permut_consn
R21402:21405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21406:21411 Coccinelle.dickson Make permut syndef
R21426:21430 Coccinelle.dickson Make consn def
R21432:21434 Coccinelle.dickson <> ll2 var
R21414:21418 Coccinelle.dickson Make consn def
R21420:21422 Coccinelle.dickson <> ll1 var
R21384:21393 Coccinelle.dickson Make permut syndef
R21399:21401 Coccinelle.dickson <> ll2 var
R21395:21397 Coccinelle.dickson <> ll1 var
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21587:21588 Coq.Lists.List <> In def
R21590:21590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21592:21592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21595:21595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21587:21588 Coq.Lists.List <> In def
R21590:21590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21592:21592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21595:21595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21657:21664 Coq.Lists.List <> In_split syndef
R21657:21664 Coq.Lists.List <> In_split syndef
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21758:21766 Coccinelle.dickson Make consn_app thm
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21758:21766 Coccinelle.dickson Make consn_app thm
R21758:21766 Coccinelle.dickson Make consn_app thm
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21818:21826 Coccinelle.dickson Make consn_app thm
R21818:21826 Coccinelle.dickson Make consn_app thm
R21818:21826 Coccinelle.dickson Make consn_app thm
R21858:21867 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21873:21880 Coccinelle.dickson Make eq_proof defax
R21858:21867 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21873:21880 Coccinelle.dickson Make eq_proof defax
R21891:21900 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21906:21918 Coccinelle.dickson Make eq_proof defax
R21891:21900 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21906:21918 Coccinelle.dickson Make eq_proof defax
prf 21934:21947 Make permut_appendn
R21986:21989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21990:21995 Coccinelle.dickson Make permut syndef
R22012:22018 Coccinelle.dickson Make appendn def
R22020:22022 Coccinelle.dickson <> ll2 var
R21998:22004 Coccinelle.dickson Make appendn def
R22006:22008 Coccinelle.dickson <> ll1 var
R21968:21977 Coccinelle.dickson Make permut syndef
R21983:21985 Coccinelle.dickson <> ll2 var
R21979:21981 Coccinelle.dickson <> ll1 var
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22175:22176 Coq.Lists.List <> In def
R22178:22178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22180:22180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22183:22183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22175:22176 Coq.Lists.List <> In def
R22178:22178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22180:22180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22183:22183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22245:22252 Coq.Lists.List <> In_split syndef
R22245:22252 Coq.Lists.List <> In_split syndef
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22334:22345 Coccinelle.dickson Make permut_trans defax
R22350:22368 Coccinelle.dickson Make list_permut_app_app defax
R22334:22345 Coccinelle.dickson Make permut_trans defax
R22350:22368 Coccinelle.dickson Make list_permut_app_app defax
R22388:22394 Coq.Lists.List <> ass_app syndef
R22388:22394 Coq.Lists.List <> ass_app syndef
R22388:22394 Coq.Lists.List <> ass_app syndef
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22429:22440 Coccinelle.dickson Make permut_trans defax
R22445:22463 Coccinelle.dickson Make list_permut_app_app defax
R22429:22440 Coccinelle.dickson Make permut_trans defax
R22445:22463 Coccinelle.dickson Make list_permut_app_app defax
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22574:22583 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22589:22601 Coccinelle.dickson Make eq_proof defax
R22574:22583 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22589:22601 Coccinelle.dickson Make eq_proof defax
prf 22617:22637 Make multiset_closure_aux3
R22688:22706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22707:22713 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22716:22717 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22718:22724 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22728:22730 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22755:22802 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22731:22740 Coccinelle.dickson Make permut syndef
R22747:22750 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22745:22746 Coccinelle.dickson <> ll var
R22751:22753 Coccinelle.dickson <> ll' var
R22742:22742 Coccinelle.dickson <> l var
R22824:22871 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22803:22808 Coccinelle.dickson Make permut syndef
R22822:22823 Coccinelle.dickson <> lc var
R22811:22815 Coccinelle.dickson Make consn def
R22817:22818 Coccinelle.dickson <> ll var
R22872:22877 Coccinelle.dickson Make permut syndef
R22891:22893 Coccinelle.dickson <> cns var
R22880:22884 Coccinelle.dickson Make consn def
R22886:22888 Coccinelle.dickson <> ll' var
R22660:22665 Coccinelle.dickson Make permut syndef
R22680:22683 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22678:22679 Coccinelle.dickson <> lc var
R22684:22686 Coccinelle.dickson <> cns var
R22668:22672 Coccinelle.dickson Make consn def
R22674:22674 Coccinelle.dickson <> l var
R22955:22974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23010:23013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23031:23049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23050:23056 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23059:23060 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23061:23067 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23071:23073 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23098:23145 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23074:23083 Coccinelle.dickson Make permut syndef
R23090:23093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23088:23089 Coccinelle.dickson <> ll var
R23094:23096 Coccinelle.dickson <> ll' var
R23085:23085 Coccinelle.dickson <> l var
R23167:23214 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23146:23151 Coccinelle.dickson Make permut syndef
R23165:23166 Coccinelle.dickson <> lc var
R23154:23158 Coccinelle.dickson Make consn def
R23160:23161 Coccinelle.dickson <> ll var
R23215:23220 Coccinelle.dickson Make permut syndef
R23234:23236 Coccinelle.dickson <> cns var
R23223:23227 Coccinelle.dickson Make consn def
R23229:23231 Coccinelle.dickson <> ll' var
R23019:23021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23014:23018 Coccinelle.dickson <> lccns var
R23024:23027 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23022:23023 Coccinelle.dickson <> lc var
R23028:23030 Coccinelle.dickson <> cns var
R23000:23002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22994:22999 Coccinelle.dickson <> consnl var
R23003:23007 Coccinelle.dickson Make consn def
R23009:23009 Coccinelle.dickson <> l var
R22936:22941 Coccinelle.dickson Make permut syndef
R22950:22954 Coccinelle.dickson <> lccns var
R22943:22948 Coccinelle.dickson <> consnl var
R22955:22974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23010:23013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23031:23049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23050:23056 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23059:23060 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23061:23067 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23071:23073 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23098:23145 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23074:23083 Coccinelle.dickson Make permut syndef
R23090:23093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23088:23089 Coccinelle.dickson <> ll var
R23094:23096 Coccinelle.dickson <> ll' var
R23085:23085 Coccinelle.dickson <> l var
R23167:23214 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23146:23151 Coccinelle.dickson Make permut syndef
R23165:23166 Coccinelle.dickson <> lc var
R23154:23158 Coccinelle.dickson Make consn def
R23160:23161 Coccinelle.dickson <> ll var
R23215:23220 Coccinelle.dickson Make permut syndef
R23234:23236 Coccinelle.dickson <> cns var
R23223:23227 Coccinelle.dickson Make consn def
R23229:23231 Coccinelle.dickson <> ll' var
R23019:23021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23014:23018 Coccinelle.dickson <> lccns var
R23024:23027 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23022:23023 Coccinelle.dickson <> lc var
R23028:23030 Coccinelle.dickson <> cns var
R23000:23002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22994:22999 Coccinelle.dickson <> consnl var
R23003:23007 Coccinelle.dickson Make consn def
R23009:23009 Coccinelle.dickson <> l var
R22936:22941 Coccinelle.dickson Make permut syndef
R22950:22954 Coccinelle.dickson <> lccns var
R22943:22948 Coccinelle.dickson <> consnl var
R23384:23386 Coq.Init.Datatypes <> nil constr
R23390:23392 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23389:23389 Coccinelle.dickson Make A defax
R23393:23396 Coq.Init.Datatypes <> list ind
R23398:23398 Coccinelle.dickson Make A defax
R23412:23414 Coq.Init.Datatypes <> nil constr
R23418:23420 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23417:23417 Coccinelle.dickson Make A defax
R23421:23424 Coq.Init.Datatypes <> list ind
R23426:23426 Coccinelle.dickson Make A defax
R23384:23386 Coq.Init.Datatypes <> nil constr
R23390:23392 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23389:23389 Coccinelle.dickson Make A defax
R23393:23396 Coq.Init.Datatypes <> list ind
R23398:23398 Coccinelle.dickson Make A defax
R23412:23414 Coq.Init.Datatypes <> nil constr
R23418:23420 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23417:23417 Coccinelle.dickson Make A defax
R23421:23424 Coq.Init.Datatypes <> list ind
R23426:23426 Coccinelle.dickson Make A defax
R23636:23645 Coccinelle.more_list <> split_list thm
R23636:23645 Coccinelle.more_list <> split_list thm
R23745:23754 Coq.Init.Logic <> refl_equal syndef
R23736:23739 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23769:23775 Coq.Lists.List <> ass_app syndef
R23745:23754 Coq.Init.Logic <> refl_equal syndef
R23736:23739 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23769:23775 Coq.Lists.List <> ass_app syndef
R23769:23775 Coq.Lists.List <> ass_app syndef
R23804:23813 Coq.Init.Logic <> refl_equal syndef
R23804:23813 Coq.Init.Logic <> refl_equal syndef
R23888:23891 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R23881:23881 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23884:23884 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23887:23887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23888:23891 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R23881:23881 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23884:23884 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23887:23887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23939:23960 Coccinelle.dickson Make permut_cons_inside defax
R23983:23992 Coq.Init.Logic <> refl_equal syndef
R23939:23960 Coccinelle.dickson Make permut_cons_inside defax
R23939:23960 Coccinelle.dickson Make permut_cons_inside defax
R23939:23960 Coccinelle.dickson Make permut_cons_inside defax
R23983:23992 Coq.Init.Logic <> refl_equal syndef
R24007:24024 Coccinelle.dickson Make permut_cons_inside defax
R24007:24024 Coccinelle.dickson Make permut_cons_inside defax
R24007:24024 Coccinelle.dickson Make permut_cons_inside defax
R24007:24024 Coccinelle.dickson Make permut_cons_inside defax
R24151:24160 Coq.Init.Logic <> refl_equal syndef
R24136:24145 Coq.Init.Logic <> refl_equal syndef
R24151:24160 Coq.Init.Logic <> refl_equal syndef
R24136:24145 Coq.Init.Logic <> refl_equal syndef
R24225:24228 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24218:24218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24221:24221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24224:24224 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24225:24228 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24218:24218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24221:24221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24224:24224 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24260:24281 Coccinelle.dickson Make permut_cons_inside defax
R24304:24313 Coq.Init.Logic <> refl_equal syndef
R24260:24281 Coccinelle.dickson Make permut_cons_inside defax
R24260:24281 Coccinelle.dickson Make permut_cons_inside defax
R24260:24281 Coccinelle.dickson Make permut_cons_inside defax
R24304:24313 Coq.Init.Logic <> refl_equal syndef
R24328:24338 Coq.Lists.List <> app_nil_end thm
R24328:24338 Coq.Lists.List <> app_nil_end thm
R24328:24338 Coq.Lists.List <> app_nil_end thm
R24371:24381 Coccinelle.dickson Make permut_cons defax
R24371:24381 Coccinelle.dickson Make permut_cons defax
R24371:24381 Coccinelle.dickson Make permut_cons defax
R24371:24381 Coccinelle.dickson Make permut_cons defax
R24476:24485 Coq.Init.Logic <> refl_equal syndef
R24463:24466 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24476:24485 Coq.Init.Logic <> refl_equal syndef
R24463:24466 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24500:24506 Coq.Lists.List <> ass_app syndef
R24500:24506 Coq.Lists.List <> ass_app syndef
R24500:24506 Coq.Lists.List <> ass_app syndef
R24531:24540 Coq.Init.Logic <> refl_equal syndef
R24531:24540 Coq.Init.Logic <> refl_equal syndef
R24605:24608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24597:24597 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24600:24601 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24604:24604 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24605:24608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24597:24597 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24600:24601 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24604:24604 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24658:24672 Coccinelle.dickson Make permut_cons defax
R24695:24704 Coq.Init.Logic <> refl_equal syndef
R24658:24672 Coccinelle.dickson Make permut_cons defax
R24658:24672 Coccinelle.dickson Make permut_cons defax
R24658:24672 Coccinelle.dickson Make permut_cons defax
R24695:24704 Coq.Init.Logic <> refl_equal syndef
R24726:24743 Coccinelle.dickson Make permut_cons_inside defax
R24726:24743 Coccinelle.dickson Make permut_cons_inside defax
R24726:24743 Coccinelle.dickson Make permut_cons_inside defax
R24726:24743 Coccinelle.dickson Make permut_cons_inside defax
R24844:24853 Coq.Init.Logic <> refl_equal syndef
R24829:24838 Coq.Init.Logic <> refl_equal syndef
R24811:24814 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24799:24803 Coccinelle.dickson Make consn def
R24844:24853 Coq.Init.Logic <> refl_equal syndef
R24829:24838 Coq.Init.Logic <> refl_equal syndef
R24811:24814 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24799:24803 Coccinelle.dickson Make consn def
prf 24872:24887 Make multiset_closure
R24917:24922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24977:24982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24983:24989 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24991:24992 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24993:24999 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25002:25005 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25034:25039 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25006:25011 Coccinelle.dickson Make permut syndef
R25016:25016 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25026:25030 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25017:25023 Coccinelle.dickson Make appendn def
R25025:25025 Coccinelle.dickson <> l var
R25031:25032 Coccinelle.dickson <> pq var
R25013:25013 Coccinelle.dickson <> p var
R25066:25071 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25040:25045 Coccinelle.dickson Make permut syndef
R25050:25050 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25058:25062 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25051:25055 Coccinelle.dickson Make consn def
R25057:25057 Coccinelle.dickson <> l var
R25063:25064 Coccinelle.dickson <> pq var
R25047:25047 Coccinelle.dickson <> q var
R25080:25085 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25073:25076 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R25072:25072 Coccinelle.dickson <> l var
R25077:25079 Coq.Init.Datatypes <> nil constr
R25086:25086 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25159:25166 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25262:25262 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25119:25122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25150:25153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25154:25154 Coccinelle.dickson <> R var
R25158:25158 Coccinelle.dickson <> a var
R25156:25156 Coccinelle.dickson <> b var
R25133:25135 Coccinelle.more_list <> mem def
R25148:25149 Coccinelle.dickson <> la var
R25146:25146 Coccinelle.dickson <> b var
R25137:25144 Coccinelle.dickson Make eq_A defax
R25108:25109 Coq.Lists.List <> In def
R25118:25118 Coccinelle.dickson <> l var
R25111:25111 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25113:25113 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25116:25116 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25112:25112 Coccinelle.dickson <> a var
R25114:25115 Coccinelle.dickson <> la var
R25167:25167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25184:25188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25223:25226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25253:25256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25257:25261 Coq.Init.Logic <> False ind
R25227:25229 Coccinelle.more_list <> mem def
R25243:25249 Coccinelle.dickson Make appendn def
R25251:25251 Coccinelle.dickson <> l var
R25240:25240 Coccinelle.dickson <> a var
R25231:25238 Coccinelle.dickson Make eq_A defax
R25199:25201 Coccinelle.more_list <> mem def
R25215:25219 Coccinelle.dickson Make consn def
R25221:25221 Coccinelle.dickson <> l var
R25212:25212 Coccinelle.dickson <> a var
R25203:25210 Coccinelle.dickson Make eq_A defax
R25178:25178 Coq.Init.Logic <> ::type_scope:'~'_x not
R25179:25179 Coccinelle.dickson <> R var
R25183:25183 Coccinelle.dickson <> a var
R25181:25181 Coccinelle.dickson <> a var
R24935:24944 Coccinelle.TransClosure <> trans_clos ind
R24976:24976 Coccinelle.dickson <> q var
R24974:24974 Coccinelle.dickson <> p var
R24947:24969 Coccinelle.dickson Make multiset_extension_step ind
R24971:24971 Coccinelle.dickson <> R var
R24903:24912 Coq.Relations.Relation_Definitions <> transitive def
R24916:24916 Coccinelle.dickson <> R var
R25432:25435 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25426:25426 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25428:25428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25431:25431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25436:25438 Coq.Init.Datatypes <> nil constr
R25432:25435 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25426:25426 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25428:25428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25431:25431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25436:25438 Coq.Init.Datatypes <> nil constr
R25491:25501 Coq.Lists.List <> app_nil_end thm
R25491:25501 Coq.Lists.List <> app_nil_end thm
R25491:25501 Coq.Lists.List <> app_nil_end thm
R25637:25647 Coq.Lists.List <> app_nil_end thm
R25637:25647 Coq.Lists.List <> app_nil_end thm
R25637:25647 Coq.Lists.List <> app_nil_end thm
R25953:25955 Coccinelle.more_list <> mem def
R25969:25969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25979:25983 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25970:25976 Coccinelle.dickson Make appendn def
R25957:25964 Coccinelle.dickson Make eq_A defax
R25953:25955 Coccinelle.more_list <> mem def
R25969:25969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25979:25983 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25970:25976 Coccinelle.dickson Make appendn def
R25957:25964 Coccinelle.dickson Make eq_A defax
R25997:26001 Coq.Init.Logic <> proj1 thm
R26004:26017 Coccinelle.dickson Make mem_permut_mem defax
R25997:26001 Coq.Init.Logic <> proj1 thm
R26004:26017 Coccinelle.dickson Make mem_permut_mem defax
R26035:26039 Coq.Init.Logic <> proj1 thm
R26042:26055 Coccinelle.dickson Make mem_permut_mem defax
R26060:26069 Coccinelle.dickson Make permut_sym defax
R26035:26039 Coq.Init.Logic <> proj1 thm
R26042:26055 Coccinelle.dickson Make mem_permut_mem defax
R26060:26069 Coccinelle.dickson Make permut_sym defax
R26091:26100 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26106:26113 Coccinelle.dickson Make eq_proof defax
R26091:26100 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26106:26113 Coccinelle.dickson Make eq_proof defax
R26128:26137 Coccinelle.more_list <> mem_or_app thm
R26128:26137 Coccinelle.more_list <> mem_or_app thm
R26128:26137 Coccinelle.more_list <> mem_or_app thm
R26168:26178 Coccinelle.more_list <> mem_bool_ok thm
R26202:26208 Coccinelle.dickson Make appendn def
R26184:26197 Coccinelle.dickson Make eq_bool_ok defax
R26168:26178 Coccinelle.more_list <> mem_bool_ok thm
R26202:26208 Coccinelle.dickson Make appendn def
R26184:26197 Coccinelle.dickson Make eq_bool_ok defax
R26221:26228 Coccinelle.more_list <> mem_bool def
R26245:26251 Coccinelle.dickson Make appendn def
R26230:26240 Coccinelle.dickson Make eq_bool defax
R26221:26228 Coccinelle.more_list <> mem_bool def
R26245:26251 Coccinelle.dickson Make appendn def
R26230:26240 Coccinelle.dickson Make eq_bool defax
R26309:26318 Coccinelle.dickson Make in_appendn thm
R26309:26318 Coccinelle.dickson Make in_appendn thm
R26377:26389 Coccinelle.more_list <> mem_split_set thm
R26395:26404 Coccinelle.dickson Make eq_bool_ok defax
R26377:26389 Coccinelle.more_list <> mem_split_set thm
R26395:26404 Coccinelle.dickson Make eq_bool_ok defax
R26507:26514 Coq.Lists.List <> In_split syndef
R26507:26514 Coq.Lists.List <> In_split syndef
R26565:26575 Coccinelle.dickson Make appendn_app thm
R26616:26622 Coq.Lists.List <> ass_app syndef
R26565:26575 Coccinelle.dickson Make appendn_app thm
R26565:26575 Coccinelle.dickson Make appendn_app thm
R26616:26622 Coq.Lists.List <> ass_app syndef
R26616:26622 Coq.Lists.List <> ass_app syndef
R26616:26622 Coq.Lists.List <> ass_app syndef
R26616:26622 Coq.Lists.List <> ass_app syndef
R26616:26622 Coq.Lists.List <> ass_app syndef
R26616:26622 Coq.Lists.List <> ass_app syndef
R26654:26660 Coq.Lists.List <> ass_app syndef
R26654:26660 Coq.Lists.List <> ass_app syndef
R26654:26660 Coq.Lists.List <> ass_app syndef
R26682:26693 Coccinelle.dickson Make permut_trans defax
R26696:26705 Coccinelle.dickson Make permut_sym defax
R26682:26693 Coccinelle.dickson Make permut_trans defax
R26696:26705 Coccinelle.dickson Make permut_sym defax
R26750:26767 Coccinelle.dickson Make permut_cons_inside defax
R26750:26767 Coccinelle.dickson Make permut_cons_inside defax
R26750:26767 Coccinelle.dickson Make permut_cons_inside defax
R26750:26767 Coccinelle.dickson Make permut_cons_inside defax
R26788:26794 Coq.Lists.List <> ass_app syndef
R26788:26794 Coq.Lists.List <> ass_app syndef
R26788:26794 Coq.Lists.List <> ass_app syndef
R26816:26836 Coccinelle.dickson Make remove_equiv_is_sound defax
R26839:26843 Coccinelle.dickson Make consn def
R26848:26851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26816:26836 Coccinelle.dickson Make remove_equiv_is_sound defax
R26839:26843 Coccinelle.dickson Make consn def
R26848:26851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26874:26885 Coccinelle.more_list <> remove_equiv def
R26899:26903 Coccinelle.dickson Make consn def
R26908:26911 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26889:26895 Coccinelle.dickson Make eq_bool defax
R26887:26887 Coccinelle.dickson Make A defax
R26874:26885 Coccinelle.more_list <> remove_equiv def
R26899:26903 Coccinelle.dickson Make consn def
R26908:26911 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26889:26895 Coccinelle.dickson Make eq_bool defax
R26887:26887 Coccinelle.dickson Make A defax
R26985:27005 Coccinelle.dickson Make multiset_closure_aux3 thm
R27010:27013 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27107:27110 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27068:27068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27070:27071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27106:27106 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27075:27078 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27083:27086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27090:27094 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27105:27105 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27095:27101 Coccinelle.dickson Make appendn def
R27127:27130 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26985:27005 Coccinelle.dickson Make multiset_closure_aux3 thm
R27010:27013 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27107:27110 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27068:27068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27070:27071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27106:27106 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27075:27078 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27083:27086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27090:27094 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27105:27105 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27095:27101 Coccinelle.dickson Make appendn def
R27127:27130 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27170:27173 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27149:27160 Coccinelle.dickson Make permut_trans defax
R27170:27173 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27149:27160 Coccinelle.dickson Make permut_trans defax
R27216:27216 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27226:27230 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27219:27222 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27197:27208 Coccinelle.dickson Make permut_trans defax
R27216:27216 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27226:27230 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27219:27222 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27197:27208 Coccinelle.dickson Make permut_trans defax
R27247:27257 Coccinelle.dickson Make permut_app2 defax
R27247:27257 Coccinelle.dickson Make permut_app2 defax
R27247:27257 Coccinelle.dickson Make permut_app2 defax
R27294:27294 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27304:27309 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27356:27356 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27297:27300 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27320:27323 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27310:27316 Coccinelle.dickson Make appendn def
R27327:27330 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27335:27338 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27350:27353 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27339:27345 Coccinelle.dickson Make appendn def
R27275:27286 Coccinelle.dickson Make permut_trans defax
R27294:27294 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27304:27309 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27356:27356 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27297:27300 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27320:27323 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27310:27316 Coccinelle.dickson Make appendn def
R27327:27330 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27335:27338 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27350:27353 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27339:27345 Coccinelle.dickson Make appendn def
R27275:27286 Coccinelle.dickson Make permut_trans defax
R27371:27381 Coccinelle.dickson Make permut_app1 defax
R27371:27381 Coccinelle.dickson Make permut_app1 defax
R27371:27381 Coccinelle.dickson Make permut_app1 defax
R27413:27419 Coq.Lists.List <> ass_app syndef
R27433:27443 Coccinelle.dickson Make permut_app2 defax
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27413:27419 Coq.Lists.List <> ass_app syndef
R27433:27443 Coccinelle.dickson Make permut_app2 defax
R27433:27443 Coccinelle.dickson Make permut_app2 defax
R27454:27465 Coccinelle.dickson Make permut_trans defax
R27470:27488 Coccinelle.dickson Make list_permut_app_app defax
R27454:27465 Coccinelle.dickson Make permut_trans defax
R27470:27488 Coccinelle.dickson Make list_permut_app_app defax
R27513:27519 Coq.Lists.List <> ass_app syndef
R27533:27543 Coccinelle.dickson Make permut_app1 defax
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27513:27519 Coq.Lists.List <> ass_app syndef
R27533:27543 Coccinelle.dickson Make permut_app1 defax
R27533:27543 Coccinelle.dickson Make permut_app1 defax
R27554:27560 Coq.Lists.List <> ass_app syndef
R27554:27560 Coq.Lists.List <> ass_app syndef
R27554:27560 Coq.Lists.List <> ass_app syndef
R27571:27582 Coccinelle.dickson Make permut_trans defax
R27585:27603 Coccinelle.dickson Make list_permut_app_app defax
R27571:27582 Coccinelle.dickson Make permut_trans defax
R27585:27603 Coccinelle.dickson Make list_permut_app_app defax
R27630:27636 Coq.Lists.List <> ass_app syndef
R27655:27665 Coccinelle.dickson Make permut_app1 defax
R27630:27636 Coq.Lists.List <> ass_app syndef
R27630:27636 Coq.Lists.List <> ass_app syndef
R27630:27636 Coq.Lists.List <> ass_app syndef
R27630:27636 Coq.Lists.List <> ass_app syndef
R27630:27636 Coq.Lists.List <> ass_app syndef
R27630:27636 Coq.Lists.List <> ass_app syndef
R27655:27665 Coccinelle.dickson Make permut_app1 defax
R27655:27665 Coccinelle.dickson Make permut_app1 defax
R27655:27665 Coccinelle.dickson Make permut_app1 defax
R27655:27665 Coccinelle.dickson Make permut_app1 defax
R27676:27687 Coccinelle.dickson Make permut_trans defax
R27690:27708 Coccinelle.dickson Make list_permut_app_app defax
R27676:27687 Coccinelle.dickson Make permut_trans defax
R27690:27708 Coccinelle.dickson Make list_permut_app_app defax
R27735:27741 Coq.Lists.List <> ass_app syndef
R27755:27765 Coccinelle.dickson Make permut_app1 defax
R27735:27741 Coq.Lists.List <> ass_app syndef
R27735:27741 Coq.Lists.List <> ass_app syndef
R27735:27741 Coq.Lists.List <> ass_app syndef
R27735:27741 Coq.Lists.List <> ass_app syndef
R27755:27765 Coccinelle.dickson Make permut_app1 defax
R27755:27765 Coccinelle.dickson Make permut_app1 defax
R27784:27794 Coccinelle.dickson Make appendn_app thm
R27803:27816 Coccinelle.dickson Make permut_appendn thm
R27784:27794 Coccinelle.dickson Make appendn_app thm
R27784:27794 Coccinelle.dickson Make appendn_app thm
R27784:27794 Coccinelle.dickson Make appendn_app thm
R27784:27794 Coccinelle.dickson Make appendn_app thm
R27803:27816 Coccinelle.dickson Make permut_appendn thm
R27843:27849 Coq.Lists.List <> ass_app syndef
R27843:27849 Coq.Lists.List <> ass_app syndef
R27843:27849 Coq.Lists.List <> ass_app syndef
R27920:27923 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27877:27881 Coccinelle.dickson Make consn def
R27886:27889 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27912:27915 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27890:27890 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27892:27893 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27911:27911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27897:27900 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27903:27906 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27858:27869 Coccinelle.dickson Make permut_trans defax
R27920:27923 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27877:27881 Coccinelle.dickson Make consn def
R27886:27889 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27912:27915 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27890:27890 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27892:27893 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27911:27911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27897:27900 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27903:27906 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27858:27869 Coccinelle.dickson Make permut_trans defax
R27952:27962 Coccinelle.dickson Make permut_app2 defax
R27973:27981 Coccinelle.dickson Make consn_app thm
R27997:28006 Coccinelle.dickson Make permut_sym defax
R28021:28038 Coccinelle.dickson Make permut_cons_inside defax
R27952:27962 Coccinelle.dickson Make permut_app2 defax
R27952:27962 Coccinelle.dickson Make permut_app2 defax
R27973:27981 Coccinelle.dickson Make consn_app thm
R27973:27981 Coccinelle.dickson Make consn_app thm
R27997:28006 Coccinelle.dickson Make permut_sym defax
R28021:28038 Coccinelle.dickson Make permut_cons_inside defax
R28021:28038 Coccinelle.dickson Make permut_cons_inside defax
R28021:28038 Coccinelle.dickson Make permut_cons_inside defax
R28069:28072 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28047:28058 Coccinelle.dickson Make permut_trans defax
R28069:28072 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28047:28058 Coccinelle.dickson Make permut_trans defax
R28089:28099 Coccinelle.dickson Make permut_app2 defax
R28089:28099 Coccinelle.dickson Make permut_app2 defax
R28089:28099 Coccinelle.dickson Make permut_app2 defax
R28122:28133 Coccinelle.dickson Make permut_trans defax
R28136:28154 Coccinelle.dickson Make list_permut_app_app defax
R28122:28133 Coccinelle.dickson Make permut_trans defax
R28136:28154 Coccinelle.dickson Make list_permut_app_app defax
R28191:28195 Coccinelle.dickson Make consn def
R28200:28203 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28171:28182 Coccinelle.dickson Make permut_trans defax
R28191:28195 Coccinelle.dickson Make consn def
R28200:28203 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28171:28182 Coccinelle.dickson Make permut_trans defax
R28217:28226 Coccinelle.dickson Make permut_sym defax
R28217:28226 Coccinelle.dickson Make permut_sym defax
R28249:28257 Coccinelle.dickson Make consn_app thm
R28249:28257 Coccinelle.dickson Make consn_app thm
R28249:28257 Coccinelle.dickson Make consn_app thm
R28273:28282 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28288:28295 Coccinelle.dickson Make eq_proof defax
R28273:28282 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28288:28295 Coccinelle.dickson Make eq_proof defax
R28452:28458 Coq.Lists.List <> ass_app syndef
R28483:28492 Coccinelle.more_list <> mem_or_app thm
R28452:28458 Coq.Lists.List <> ass_app syndef
R28452:28458 Coq.Lists.List <> ass_app syndef
R28483:28492 Coccinelle.more_list <> mem_or_app thm
R28483:28492 Coccinelle.more_list <> mem_or_app thm
R28575:28578 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28581:28584 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28575:28578 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28581:28584 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28608:28617 Coccinelle.more_list <> mem_insert thm
R28608:28617 Coccinelle.more_list <> mem_insert thm
R28640:28649 Coccinelle.more_list <> mem_or_app thm
R28640:28649 Coccinelle.more_list <> mem_or_app thm
R28640:28649 Coccinelle.more_list <> mem_or_app thm
R28759:28772 Coccinelle.dickson Make mem_permut_mem defax
R28793:28802 Coccinelle.more_list <> mem_or_app thm
R28759:28772 Coccinelle.dickson Make mem_permut_mem defax
R28759:28772 Coccinelle.dickson Make mem_permut_mem defax
R28793:28802 Coccinelle.more_list <> mem_or_app thm
R28793:28802 Coccinelle.more_list <> mem_or_app thm
R28845:28848 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28851:28854 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28845:28848 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28851:28854 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28882:28891 Coccinelle.dickson Make in_appendn thm
R28882:28891 Coccinelle.dickson Make in_appendn thm
R29002:29010 Coccinelle.more_list <> in_insert thm
R29002:29010 Coccinelle.more_list <> in_insert thm
R29022:29045 Coccinelle.list_permut <> in_permut_in thm
R29058:29066 Coq.Lists.List <> in_or_app thm
R29022:29045 Coccinelle.list_permut <> in_permut_in thm
R29022:29045 Coccinelle.list_permut <> in_permut_in thm
R29058:29066 Coq.Lists.List <> in_or_app thm
R29102:29104 Coccinelle.more_list <> mem def
R29106:29109 Coccinelle.dickson Make eq_A defax
R29102:29104 Coccinelle.more_list <> mem def
R29106:29109 Coccinelle.dickson Make eq_A defax
R29130:29143 Coccinelle.dickson Make mem_permut_mem defax
R29130:29143 Coccinelle.dickson Make mem_permut_mem defax
R29130:29143 Coccinelle.dickson Make mem_permut_mem defax
R29160:29168 Coccinelle.dickson Make mem_consn thm
R29160:29168 Coccinelle.dickson Make mem_consn thm
R29160:29168 Coccinelle.dickson Make mem_consn thm
R29237:29250 Coccinelle.dickson Make mem_permut_mem defax
R29271:29280 Coccinelle.more_list <> mem_or_app thm
R29237:29250 Coccinelle.dickson Make mem_permut_mem defax
R29237:29250 Coccinelle.dickson Make mem_permut_mem defax
R29271:29280 Coccinelle.more_list <> mem_or_app thm
R29271:29280 Coccinelle.more_list <> mem_or_app thm
R29322:29325 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29328:29331 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29322:29325 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29328:29331 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29346:29354 Coq.Lists.List <> in_or_app thm
R29376:29385 Coq.Init.Logic <> refl_equal syndef
R29346:29354 Coq.Lists.List <> in_or_app thm
R29376:29385 Coq.Init.Logic <> refl_equal syndef
R29399:29408 Coccinelle.more_list <> mem_or_app thm
R29399:29408 Coccinelle.more_list <> mem_or_app thm
R29399:29408 Coccinelle.more_list <> mem_or_app thm
R29473:29481 Coccinelle.more_list <> in_insert thm
R29473:29481 Coccinelle.more_list <> in_insert thm
R29502:29525 Coccinelle.list_permut <> in_permut_in thm
R29502:29525 Coccinelle.list_permut <> in_permut_in thm
R29502:29525 Coccinelle.list_permut <> in_permut_in thm
R29538:29546 Coq.Lists.List <> in_or_app thm
R29538:29546 Coq.Lists.List <> in_or_app thm
R29642:29648 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29642:29648 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29682:29688 Coq.Lists.List <> ass_app syndef
R29747:29756 Coccinelle.more_list <> mem_or_app thm
R29747:29756 Coccinelle.more_list <> mem_or_app thm
R29747:29756 Coccinelle.more_list <> mem_or_app thm
R29840:29849 Coccinelle.more_list <> mem_or_app thm
R29840:29849 Coccinelle.more_list <> mem_or_app thm
R29840:29849 Coccinelle.more_list <> mem_or_app thm
R29954:29957 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29960:29963 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29954:29957 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29960:29963 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29978:29986 Coq.Lists.List <> in_or_app thm
R30008:30017 Coq.Init.Logic <> refl_equal syndef
R29978:29986 Coq.Lists.List <> in_or_app thm
R30008:30017 Coq.Init.Logic <> refl_equal syndef
R30026:30035 Coccinelle.more_list <> mem_insert thm
R30026:30035 Coccinelle.more_list <> mem_insert thm
R30113:30126 Coccinelle.dickson Make mem_permut_mem defax
R30147:30156 Coccinelle.more_list <> mem_or_app thm
R30113:30126 Coccinelle.dickson Make mem_permut_mem defax
R30113:30126 Coccinelle.dickson Make mem_permut_mem defax
R30147:30156 Coccinelle.more_list <> mem_or_app thm
R30147:30156 Coccinelle.more_list <> mem_or_app thm
R30199:30202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30205:30208 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30199:30202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30205:30208 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30223:30231 Coq.Lists.List <> in_or_app thm
R30253:30262 Coq.Init.Logic <> refl_equal syndef
R30223:30231 Coq.Lists.List <> in_or_app thm
R30253:30262 Coq.Init.Logic <> refl_equal syndef
R30276:30285 Coccinelle.more_list <> mem_or_app thm
R30276:30285 Coccinelle.more_list <> mem_or_app thm
R30276:30285 Coccinelle.more_list <> mem_or_app thm
R30351:30359 Coccinelle.dickson Make consn_app thm
R30373:30382 Coccinelle.more_list <> mem_or_app thm
R30351:30359 Coccinelle.dickson Make consn_app thm
R30351:30359 Coccinelle.dickson Make consn_app thm
R30373:30382 Coccinelle.more_list <> mem_or_app thm
R30373:30382 Coccinelle.more_list <> mem_or_app thm
R30405:30414 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30420:30427 Coccinelle.dickson Make eq_proof defax
R30405:30414 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30420:30427 Coccinelle.dickson Make eq_proof defax
R30442:30452 Coccinelle.dickson Make appendn_app thm
R30442:30452 Coccinelle.dickson Make appendn_app thm
R30442:30452 Coccinelle.dickson Make appendn_app thm
R30479:30492 Coccinelle.dickson Make mem_permut_mem defax
R30497:30510 Coccinelle.dickson Make permut_appendn thm
R30479:30492 Coccinelle.dickson Make mem_permut_mem defax
R30497:30510 Coccinelle.dickson Make permut_appendn thm
R30479:30492 Coccinelle.dickson Make mem_permut_mem defax
R30497:30510 Coccinelle.dickson Make permut_appendn thm
R30538:30548 Coccinelle.dickson Make appendn_app thm
R30562:30571 Coccinelle.more_list <> mem_or_app thm
R30538:30548 Coccinelle.dickson Make appendn_app thm
R30538:30548 Coccinelle.dickson Make appendn_app thm
R30562:30571 Coccinelle.more_list <> mem_or_app thm
R30562:30571 Coccinelle.more_list <> mem_or_app thm
R30582:30592 Coccinelle.dickson Make appendn_app thm
R30618:30627 Coccinelle.more_list <> mem_or_app thm
R30582:30592 Coccinelle.dickson Make appendn_app thm
R30582:30592 Coccinelle.dickson Make appendn_app thm
R30618:30627 Coccinelle.more_list <> mem_or_app thm
R30618:30627 Coccinelle.more_list <> mem_or_app thm
R30726:30735 Coccinelle.more_list <> mem_or_app thm
R30726:30735 Coccinelle.more_list <> mem_or_app thm
R30726:30735 Coccinelle.more_list <> mem_or_app thm
R30772:30781 Coccinelle.more_list <> mem_or_app thm
R30772:30781 Coccinelle.more_list <> mem_or_app thm
R30772:30781 Coccinelle.more_list <> mem_or_app thm
R30872:30881 Coccinelle.more_list <> mem_or_app thm
R30872:30881 Coccinelle.more_list <> mem_or_app thm
R30872:30881 Coccinelle.more_list <> mem_or_app thm
R30983:30991 Coccinelle.dickson Make consn_app thm
R31007:31016 Coccinelle.more_list <> mem_insert thm
R31030:31038 Coccinelle.dickson Make consn_app thm
R30983:30991 Coccinelle.dickson Make consn_app thm
R30983:30991 Coccinelle.dickson Make consn_app thm
R31007:31016 Coccinelle.more_list <> mem_insert thm
R31030:31038 Coccinelle.dickson Make consn_app thm
R31030:31038 Coccinelle.dickson Make consn_app thm
R31051:31064 Coccinelle.dickson Make mem_permut_mem defax
R31069:31080 Coccinelle.dickson Make permut_consn thm
R31096:31104 Coccinelle.dickson Make consn_app thm
R31118:31127 Coccinelle.more_list <> mem_or_app thm
R31051:31064 Coccinelle.dickson Make mem_permut_mem defax
R31069:31080 Coccinelle.dickson Make permut_consn thm
R31051:31064 Coccinelle.dickson Make mem_permut_mem defax
R31069:31080 Coccinelle.dickson Make permut_consn thm
R31096:31104 Coccinelle.dickson Make consn_app thm
R31096:31104 Coccinelle.dickson Make consn_app thm
R31118:31127 Coccinelle.more_list <> mem_or_app thm
R31118:31127 Coccinelle.more_list <> mem_or_app thm
R31154:31164 Coccinelle.dickson Make appendn_app thm
R31178:31187 Coccinelle.more_list <> mem_or_app thm
R31215:31224 Coccinelle.more_list <> mem_or_app thm
R31239:31248 Coccinelle.more_list <> mem_insert thm
R31154:31164 Coccinelle.dickson Make appendn_app thm
R31154:31164 Coccinelle.dickson Make appendn_app thm
R31178:31187 Coccinelle.more_list <> mem_or_app thm
R31178:31187 Coccinelle.more_list <> mem_or_app thm
R31215:31224 Coccinelle.more_list <> mem_or_app thm
R31215:31224 Coccinelle.more_list <> mem_or_app thm
R31239:31248 Coccinelle.more_list <> mem_insert thm
R31305:31318 Coccinelle.dickson Make mem_permut_mem defax
R31305:31318 Coccinelle.dickson Make mem_permut_mem defax
R31305:31318 Coccinelle.dickson Make mem_permut_mem defax
R31377:31385 Coccinelle.dickson Make consn_app thm
R31401:31410 Coccinelle.more_list <> mem_insert thm
R31424:31432 Coccinelle.dickson Make consn_app thm
R31444:31457 Coccinelle.dickson Make mem_permut_mem defax
R31462:31473 Coccinelle.dickson Make permut_consn thm
R31489:31497 Coccinelle.dickson Make consn_app thm
R31511:31520 Coccinelle.more_list <> mem_or_app thm
R31377:31385 Coccinelle.dickson Make consn_app thm
R31377:31385 Coccinelle.dickson Make consn_app thm
R31401:31410 Coccinelle.more_list <> mem_insert thm
R31424:31432 Coccinelle.dickson Make consn_app thm
R31424:31432 Coccinelle.dickson Make consn_app thm
R31444:31457 Coccinelle.dickson Make mem_permut_mem defax
R31462:31473 Coccinelle.dickson Make permut_consn thm
R31444:31457 Coccinelle.dickson Make mem_permut_mem defax
R31462:31473 Coccinelle.dickson Make permut_consn thm
R31489:31497 Coccinelle.dickson Make consn_app thm
R31489:31497 Coccinelle.dickson Make consn_app thm
R31511:31520 Coccinelle.more_list <> mem_or_app thm
R31511:31520 Coccinelle.more_list <> mem_or_app thm
R31550:31560 Coccinelle.dickson Make appendn_app thm
R31587:31600 Coccinelle.dickson Make mem_permut_mem defax
R31605:31618 Coccinelle.dickson Make permut_appendn thm
R31550:31560 Coccinelle.dickson Make appendn_app thm
R31550:31560 Coccinelle.dickson Make appendn_app thm
R31587:31600 Coccinelle.dickson Make mem_permut_mem defax
R31605:31618 Coccinelle.dickson Make permut_appendn thm
R31587:31600 Coccinelle.dickson Make mem_permut_mem defax
R31605:31618 Coccinelle.dickson Make permut_appendn thm
R31646:31656 Coccinelle.dickson Make appendn_app thm
R31670:31679 Coccinelle.more_list <> mem_or_app thm
R31690:31700 Coccinelle.dickson Make appendn_app thm
R31646:31656 Coccinelle.dickson Make appendn_app thm
R31646:31656 Coccinelle.dickson Make appendn_app thm
R31670:31679 Coccinelle.more_list <> mem_or_app thm
R31670:31679 Coccinelle.more_list <> mem_or_app thm
R31690:31700 Coccinelle.dickson Make appendn_app thm
R31690:31700 Coccinelle.dickson Make appendn_app thm
R31727:31736 Coccinelle.more_list <> mem_or_app thm
R31829:31838 Coccinelle.more_list <> mem_or_app thm
R31727:31736 Coccinelle.more_list <> mem_or_app thm
R31727:31736 Coccinelle.more_list <> mem_or_app thm
R31829:31838 Coccinelle.more_list <> mem_or_app thm
R31829:31838 Coccinelle.more_list <> mem_or_app thm
R31885:31887 Coccinelle.more_list <> mem def
R31889:31892 Coccinelle.dickson Make eq_A defax
R31885:31887 Coccinelle.more_list <> mem def
R31889:31892 Coccinelle.dickson Make eq_A defax
R31966:31968 Coccinelle.more_list <> mem def
R31978:31984 Coccinelle.dickson Make appendn def
R31970:31973 Coccinelle.dickson Make eq_A defax
R31966:31968 Coccinelle.more_list <> mem def
R31978:31984 Coccinelle.dickson Make appendn def
R31970:31973 Coccinelle.dickson Make eq_A defax
R32010:32022 Coccinelle.more_list <> mem_split_set thm
R32028:32037 Coccinelle.dickson Make eq_bool_ok defax
R32010:32022 Coccinelle.more_list <> mem_split_set thm
R32028:32037 Coccinelle.dickson Make eq_bool_ok defax
R32112:32123 Coccinelle.dickson Make permut_trans defax
R32126:32135 Coccinelle.dickson Make permut_sym defax
R32112:32123 Coccinelle.dickson Make permut_trans defax
R32126:32135 Coccinelle.dickson Make permut_sym defax
R32177:32183 Coq.Lists.List <> ass_app syndef
R32204:32221 Coccinelle.dickson Make permut_cons_inside defax
R32242:32248 Coq.Lists.List <> ass_app syndef
R32177:32183 Coq.Lists.List <> ass_app syndef
R32177:32183 Coq.Lists.List <> ass_app syndef
R32204:32221 Coccinelle.dickson Make permut_cons_inside defax
R32204:32221 Coccinelle.dickson Make permut_cons_inside defax
R32204:32221 Coccinelle.dickson Make permut_cons_inside defax
R32242:32248 Coq.Lists.List <> ass_app syndef
R32242:32248 Coq.Lists.List <> ass_app syndef
R32242:32248 Coq.Lists.List <> ass_app syndef
R32242:32248 Coq.Lists.List <> ass_app syndef
R32270:32290 Coccinelle.dickson Make remove_equiv_is_sound defax
R32293:32297 Coccinelle.dickson Make consn def
R32318:32329 Coccinelle.more_list <> remove_equiv def
R32342:32346 Coccinelle.dickson Make consn def
R32333:32339 Coccinelle.dickson Make eq_bool defax
R32331:32331 Coccinelle.dickson Make A defax
R32418:32438 Coccinelle.dickson Make multiset_closure_aux3 thm
R32270:32290 Coccinelle.dickson Make remove_equiv_is_sound defax
R32293:32297 Coccinelle.dickson Make consn def
R32318:32329 Coccinelle.more_list <> remove_equiv def
R32342:32346 Coccinelle.dickson Make consn def
R32333:32339 Coccinelle.dickson Make eq_bool defax
R32331:32331 Coccinelle.dickson Make A defax
R32418:32438 Coccinelle.dickson Make multiset_closure_aux3 thm
R32515:32518 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32491:32491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32493:32494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32514:32514 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32498:32502 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32513:32513 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32503:32509 Coccinelle.dickson Make appendn def
R32535:32539 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32551:32551 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32543:32546 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32515:32518 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32491:32491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32493:32494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32514:32514 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32498:32502 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32513:32513 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32503:32509 Coccinelle.dickson Make appendn def
R32535:32539 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32551:32551 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32543:32546 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32596:32599 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32575:32586 Coccinelle.dickson Make permut_trans defax
R32596:32599 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32575:32586 Coccinelle.dickson Make permut_trans defax
R32644:32648 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32673:32673 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32658:32661 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32649:32655 Coccinelle.dickson Make appendn def
R32665:32668 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32623:32634 Coccinelle.dickson Make permut_trans defax
R32644:32648 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32673:32673 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32658:32661 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32649:32655 Coccinelle.dickson Make appendn def
R32665:32668 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32623:32634 Coccinelle.dickson Make permut_trans defax
R32688:32698 Coccinelle.dickson Make permut_app1 defax
R32688:32698 Coccinelle.dickson Make permut_app1 defax
R32688:32698 Coccinelle.dickson Make permut_app1 defax
R32726:32732 Coq.Lists.List <> ass_app syndef
R32751:32761 Coccinelle.dickson Make permut_app2 defax
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32726:32732 Coq.Lists.List <> ass_app syndef
R32751:32761 Coccinelle.dickson Make permut_app2 defax
R32751:32761 Coccinelle.dickson Make permut_app2 defax
R32751:32761 Coccinelle.dickson Make permut_app2 defax
R32751:32761 Coccinelle.dickson Make permut_app2 defax
R32789:32789 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32799:32803 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32792:32795 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32804:32810 Coccinelle.dickson Make appendn def
R32770:32781 Coccinelle.dickson Make permut_trans defax
R32789:32789 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32799:32803 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32792:32795 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32804:32810 Coccinelle.dickson Make appendn def
R32770:32781 Coccinelle.dickson Make permut_trans defax
R32827:32837 Coccinelle.dickson Make permut_app2 defax
R32827:32837 Coccinelle.dickson Make permut_app2 defax
R32827:32837 Coccinelle.dickson Make permut_app2 defax
R32863:32869 Coq.Lists.List <> ass_app syndef
R32880:32891 Coccinelle.dickson Make permut_trans defax
R32894:32912 Coccinelle.dickson Make list_permut_app_app defax
R32934:32944 Coccinelle.dickson Make permut_app2 defax
R32958:32964 Coq.Lists.List <> ass_app syndef
R32978:32988 Coccinelle.dickson Make appendn_app thm
R33002:33012 Coccinelle.dickson Make permut_app1 defax
R32863:32869 Coq.Lists.List <> ass_app syndef
R32863:32869 Coq.Lists.List <> ass_app syndef
R32880:32891 Coccinelle.dickson Make permut_trans defax
R32894:32912 Coccinelle.dickson Make list_permut_app_app defax
R32934:32944 Coccinelle.dickson Make permut_app2 defax
R32934:32944 Coccinelle.dickson Make permut_app2 defax
R32958:32964 Coq.Lists.List <> ass_app syndef
R32958:32964 Coq.Lists.List <> ass_app syndef
R32978:32988 Coccinelle.dickson Make appendn_app thm
R32978:32988 Coccinelle.dickson Make appendn_app thm
R33002:33012 Coccinelle.dickson Make permut_app1 defax
R33002:33012 Coccinelle.dickson Make permut_app1 defax
R33021:33034 Coccinelle.dickson Make permut_appendn thm
R33021:33034 Coccinelle.dickson Make permut_appendn thm
R33088:33091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33081:33085 Coccinelle.dickson Make consn def
R33095:33098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33101:33104 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33062:33073 Coccinelle.dickson Make permut_trans defax
R33088:33091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33081:33085 Coccinelle.dickson Make consn def
R33095:33098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33101:33104 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33062:33073 Coccinelle.dickson Make permut_trans defax
R33139:33145 Coq.Lists.List <> ass_app syndef
R33154:33163 Coccinelle.dickson Make permut_sym defax
R33178:33195 Coccinelle.dickson Make permut_cons_inside defax
R33139:33145 Coq.Lists.List <> ass_app syndef
R33139:33145 Coq.Lists.List <> ass_app syndef
R33154:33163 Coccinelle.dickson Make permut_sym defax
R33178:33195 Coccinelle.dickson Make permut_cons_inside defax
R33178:33195 Coccinelle.dickson Make permut_cons_inside defax
R33178:33195 Coccinelle.dickson Make permut_cons_inside defax
R33220:33226 Coq.Lists.List <> ass_app syndef
R33245:33255 Coccinelle.dickson Make permut_app2 defax
R33220:33226 Coq.Lists.List <> ass_app syndef
R33220:33226 Coq.Lists.List <> ass_app syndef
R33220:33226 Coq.Lists.List <> ass_app syndef
R33220:33226 Coq.Lists.List <> ass_app syndef
R33245:33255 Coccinelle.dickson Make permut_app2 defax
R33245:33255 Coccinelle.dickson Make permut_app2 defax
R33245:33255 Coccinelle.dickson Make permut_app2 defax
R33245:33255 Coccinelle.dickson Make permut_app2 defax
R33292:33295 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33283:33287 Coccinelle.dickson Make consn def
R33296:33300 Coccinelle.dickson Make consn def
R33264:33275 Coccinelle.dickson Make permut_trans defax
R33292:33295 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33283:33287 Coccinelle.dickson Make consn def
R33296:33300 Coccinelle.dickson Make consn def
R33264:33275 Coccinelle.dickson Make permut_trans defax
R33318:33328 Coccinelle.dickson Make permut_app1 defax
R33337:33346 Coccinelle.dickson Make permut_sym defax
R33318:33328 Coccinelle.dickson Make permut_app1 defax
R33318:33328 Coccinelle.dickson Make permut_app1 defax
R33337:33346 Coccinelle.dickson Make permut_sym defax
R33372:33380 Coccinelle.dickson Make consn_app thm
R33389:33400 Coccinelle.dickson Make permut_consn thm
R33372:33380 Coccinelle.dickson Make consn_app thm
R33372:33380 Coccinelle.dickson Make consn_app thm
R33389:33400 Coccinelle.dickson Make permut_consn thm
R33434:33437 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33409:33424 Coccinelle.dickson Make permut_trans defax
R33434:33437 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33409:33424 Coccinelle.dickson Make permut_trans defax
R33450:33472 Coccinelle.dickson Make list_permut_app_app defax
R33450:33472 Coccinelle.dickson Make list_permut_app_app defax
R33481:33494 Coccinelle.dickson Make permut_sym defax
R33481:33494 Coccinelle.dickson Make permut_sym defax
R33657:33666 Coccinelle.more_list <> mem_or_app thm
R33657:33666 Coccinelle.more_list <> mem_or_app thm
R33657:33666 Coccinelle.more_list <> mem_or_app thm
R33747:33760 Coccinelle.dickson Make mem_permut_mem defax
R33747:33760 Coccinelle.dickson Make mem_permut_mem defax
R33747:33760 Coccinelle.dickson Make mem_permut_mem defax
R33781:33790 Coccinelle.more_list <> mem_or_app thm
R33781:33790 Coccinelle.more_list <> mem_or_app thm
R33781:33790 Coccinelle.more_list <> mem_or_app thm
R33819:33828 Coccinelle.dickson Make in_appendn thm
R33819:33828 Coccinelle.dickson Make in_appendn thm
R33942:33965 Coccinelle.list_permut <> in_permut_in thm
R33942:33965 Coccinelle.list_permut <> in_permut_in thm
R33942:33965 Coccinelle.list_permut <> in_permut_in thm
R33978:33986 Coq.Lists.List <> in_or_app thm
R33978:33986 Coq.Lists.List <> in_or_app thm
R34028:34041 Coccinelle.dickson Make mem_permut_mem defax
R34062:34071 Coccinelle.more_list <> mem_or_app thm
R34028:34041 Coccinelle.dickson Make mem_permut_mem defax
R34028:34041 Coccinelle.dickson Make mem_permut_mem defax
R34062:34071 Coccinelle.more_list <> mem_or_app thm
R34062:34071 Coccinelle.more_list <> mem_or_app thm
R34092:34105 Coccinelle.dickson Make mem_permut_mem defax
R34092:34105 Coccinelle.dickson Make mem_permut_mem defax
R34092:34105 Coccinelle.dickson Make mem_permut_mem defax
R34122:34130 Coccinelle.dickson Make mem_consn thm
R34122:34130 Coccinelle.dickson Make mem_consn thm
R34122:34130 Coccinelle.dickson Make mem_consn thm
R34197:34220 Coccinelle.list_permut <> in_permut_in thm
R34233:34241 Coq.Lists.List <> in_or_app thm
R34197:34220 Coccinelle.list_permut <> in_permut_in thm
R34197:34220 Coccinelle.list_permut <> in_permut_in thm
R34233:34241 Coq.Lists.List <> in_or_app thm
R34295:34301 Coq.Lists.List <> ass_app syndef
R34312:34318 Coq.Lists.List <> ass_app syndef
R34295:34301 Coq.Lists.List <> ass_app syndef
R34295:34301 Coq.Lists.List <> ass_app syndef
R34312:34318 Coq.Lists.List <> ass_app syndef
R34312:34318 Coq.Lists.List <> ass_app syndef
R34365:34374 Coccinelle.more_list <> mem_or_app thm
R34365:34374 Coccinelle.more_list <> mem_or_app thm
R34365:34374 Coccinelle.more_list <> mem_or_app thm
R34493:34502 Coccinelle.more_list <> mem_or_app thm
R34493:34502 Coccinelle.more_list <> mem_or_app thm
R34493:34502 Coccinelle.more_list <> mem_or_app thm
R34603:34616 Coccinelle.dickson Make mem_permut_mem defax
R34638:34647 Coccinelle.more_list <> mem_or_app thm
R34603:34616 Coccinelle.dickson Make mem_permut_mem defax
R34603:34616 Coccinelle.dickson Make mem_permut_mem defax
R34638:34647 Coccinelle.more_list <> mem_or_app thm
R34638:34647 Coccinelle.more_list <> mem_or_app thm
R34702:34711 Coccinelle.dickson Make in_appendn thm
R34702:34711 Coccinelle.dickson Make in_appendn thm
R34852:34875 Coccinelle.list_permut <> in_permut_in thm
R34852:34875 Coccinelle.list_permut <> in_permut_in thm
R34852:34875 Coccinelle.list_permut <> in_permut_in thm
R34888:34896 Coq.Lists.List <> in_or_app thm
R34888:34896 Coq.Lists.List <> in_or_app thm
R34921:34930 Coccinelle.more_list <> mem_eq_mem thm
R34932:34939 Coccinelle.dickson Make eq_proof defax
R34921:34930 Coccinelle.more_list <> mem_eq_mem thm
R34932:34939 Coccinelle.dickson Make eq_proof defax
R34986:34999 Coccinelle.dickson Make mem_permut_mem defax
R35021:35030 Coccinelle.more_list <> mem_or_app thm
R35051:35064 Coccinelle.dickson Make mem_permut_mem defax
R34986:34999 Coccinelle.dickson Make mem_permut_mem defax
R34986:34999 Coccinelle.dickson Make mem_permut_mem defax
R35021:35030 Coccinelle.more_list <> mem_or_app thm
R35021:35030 Coccinelle.more_list <> mem_or_app thm
R35051:35064 Coccinelle.dickson Make mem_permut_mem defax
R35051:35064 Coccinelle.dickson Make mem_permut_mem defax
R35081:35089 Coccinelle.dickson Make mem_consn thm
R35081:35089 Coccinelle.dickson Make mem_consn thm
R35081:35089 Coccinelle.dickson Make mem_consn thm
R35123:35132 Coccinelle.more_list <> mem_or_app thm
R35123:35132 Coccinelle.more_list <> mem_or_app thm
R35123:35132 Coccinelle.more_list <> mem_or_app thm
R35234:35247 Coccinelle.dickson Make mem_permut_mem defax
R35234:35247 Coccinelle.dickson Make mem_permut_mem defax
R35234:35247 Coccinelle.dickson Make mem_permut_mem defax
R35307:35320 Coccinelle.dickson Make mem_permut_mem defax
R35325:35336 Coccinelle.dickson Make permut_consn thm
R35352:35360 Coccinelle.dickson Make consn_app thm
R35375:35384 Coccinelle.more_list <> mem_or_app thm
R35307:35320 Coccinelle.dickson Make mem_permut_mem defax
R35325:35336 Coccinelle.dickson Make permut_consn thm
R35307:35320 Coccinelle.dickson Make mem_permut_mem defax
R35325:35336 Coccinelle.dickson Make permut_consn thm
R35352:35360 Coccinelle.dickson Make consn_app thm
R35352:35360 Coccinelle.dickson Make consn_app thm
R35375:35384 Coccinelle.more_list <> mem_or_app thm
R35375:35384 Coccinelle.more_list <> mem_or_app thm
R35412:35425 Coccinelle.dickson Make mem_permut_mem defax
R35430:35443 Coccinelle.dickson Make permut_appendn thm
R35459:35469 Coccinelle.dickson Make appendn_app thm
R35484:35493 Coccinelle.more_list <> mem_or_app thm
R35412:35425 Coccinelle.dickson Make mem_permut_mem defax
R35430:35443 Coccinelle.dickson Make permut_appendn thm
R35412:35425 Coccinelle.dickson Make mem_permut_mem defax
R35430:35443 Coccinelle.dickson Make permut_appendn thm
R35459:35469 Coccinelle.dickson Make appendn_app thm
R35459:35469 Coccinelle.dickson Make appendn_app thm
R35484:35493 Coccinelle.more_list <> mem_or_app thm
R35484:35493 Coccinelle.more_list <> mem_or_app thm
R35612:35625 Coccinelle.dickson Make mem_permut_mem defax
R35630:35643 Coccinelle.dickson Make permut_appendn thm
R35659:35669 Coccinelle.dickson Make appendn_app thm
R35683:35692 Coccinelle.more_list <> mem_or_app thm
R35612:35625 Coccinelle.dickson Make mem_permut_mem defax
R35630:35643 Coccinelle.dickson Make permut_appendn thm
R35612:35625 Coccinelle.dickson Make mem_permut_mem defax
R35630:35643 Coccinelle.dickson Make permut_appendn thm
R35659:35669 Coccinelle.dickson Make appendn_app thm
R35659:35669 Coccinelle.dickson Make appendn_app thm
R35683:35692 Coccinelle.more_list <> mem_or_app thm
R35683:35692 Coccinelle.more_list <> mem_or_app thm
R35753:35766 Coccinelle.dickson Make mem_permut_mem defax
R35771:35782 Coccinelle.dickson Make permut_consn thm
R35798:35806 Coccinelle.dickson Make consn_app thm
R35821:35830 Coccinelle.more_list <> mem_or_app thm
R35753:35766 Coccinelle.dickson Make mem_permut_mem defax
R35771:35782 Coccinelle.dickson Make permut_consn thm
R35753:35766 Coccinelle.dickson Make mem_permut_mem defax
R35771:35782 Coccinelle.dickson Make permut_consn thm
R35798:35806 Coccinelle.dickson Make consn_app thm
R35798:35806 Coccinelle.dickson Make consn_app thm
R35821:35830 Coccinelle.more_list <> mem_or_app thm
R35821:35830 Coccinelle.more_list <> mem_or_app thm
R35858:35871 Coccinelle.dickson Make mem_permut_mem defax
R35876:35889 Coccinelle.dickson Make permut_appendn thm
R35905:35915 Coccinelle.dickson Make appendn_app thm
R35930:35939 Coccinelle.more_list <> mem_or_app thm
R35858:35871 Coccinelle.dickson Make mem_permut_mem defax
R35876:35889 Coccinelle.dickson Make permut_appendn thm
R35858:35871 Coccinelle.dickson Make mem_permut_mem defax
R35876:35889 Coccinelle.dickson Make permut_appendn thm
R35905:35915 Coccinelle.dickson Make appendn_app thm
R35905:35915 Coccinelle.dickson Make appendn_app thm
R35930:35939 Coccinelle.more_list <> mem_or_app thm
R35930:35939 Coccinelle.more_list <> mem_or_app thm
prf 35986:36032 Make context_trans_clos_multiset_extension_step_cons
R36062:36065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36066:36066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36083:36090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36165:36193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36194:36203 Coccinelle.TransClosure <> trans_clos ind
R36236:36237 Coccinelle.dickson <> l2 var
R36233:36234 Coccinelle.dickson <> l1 var
R36206:36228 Coccinelle.dickson Make multiset_extension_step ind
R36230:36230 Coccinelle.dickson <> R var
R36107:36116 Coccinelle.TransClosure <> trans_clos ind
R36158:36161 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R36157:36157 Coccinelle.dickson <> a var
R36162:36163 Coccinelle.dickson <> l2 var
R36148:36151 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R36147:36147 Coccinelle.dickson <> a var
R36152:36153 Coccinelle.dickson <> l1 var
R36119:36141 Coccinelle.dickson Make multiset_extension_step ind
R36143:36143 Coccinelle.dickson <> R var
R36077:36077 Coq.Init.Logic <> ::type_scope:'~'_x not
R36078:36078 Coccinelle.dickson <> R var
R36082:36082 Coccinelle.dickson <> a var
R36080:36080 Coccinelle.dickson <> a var
R36048:36057 Coq.Relations.Relation_Definitions <> transitive def
R36061:36061 Coccinelle.dickson <> R var
R36294:36309 Coccinelle.dickson Make multiset_closure thm
R36294:36309 Coccinelle.dickson Make multiset_closure thm
R36400:36410 Coccinelle.more_list <> mem_bool_ok thm
R36416:36425 Coccinelle.dickson Make eq_bool_ok defax
R36400:36410 Coccinelle.more_list <> mem_bool_ok thm
R36416:36425 Coccinelle.dickson Make eq_bool_ok defax
R36439:36446 Coccinelle.more_list <> mem_bool def
R36448:36458 Coccinelle.dickson DS1 eq_bool defax
R36439:36446 Coccinelle.more_list <> mem_bool def
R36448:36458 Coccinelle.dickson DS1 eq_bool defax
R36511:36523 Coccinelle.more_list <> mem_split_set thm
R36529:36538 Coccinelle.dickson Make eq_bool_ok defax
R36511:36523 Coccinelle.more_list <> mem_split_set thm
R36529:36538 Coccinelle.dickson Make eq_bool_ok defax
R36638:36644 Coq.Lists.List <> ass_app syndef
R36664:36681 Coccinelle.dickson Make permut_cons_inside defax
R36702:36708 Coq.Lists.List <> ass_app syndef
R36638:36644 Coq.Lists.List <> ass_app syndef
R36638:36644 Coq.Lists.List <> ass_app syndef
R36664:36681 Coccinelle.dickson Make permut_cons_inside defax
R36664:36681 Coccinelle.dickson Make permut_cons_inside defax
R36664:36681 Coccinelle.dickson Make permut_cons_inside defax
R36702:36708 Coq.Lists.List <> ass_app syndef
R36702:36708 Coq.Lists.List <> ass_app syndef
R36702:36708 Coq.Lists.List <> ass_app syndef
R36702:36708 Coq.Lists.List <> ass_app syndef
R36725:36731 Coq.Lists.List <> ass_app syndef
R36751:36768 Coccinelle.dickson Make permut_cons_inside defax
R36789:36795 Coq.Lists.List <> ass_app syndef
R36725:36731 Coq.Lists.List <> ass_app syndef
R36725:36731 Coq.Lists.List <> ass_app syndef
R36751:36768 Coccinelle.dickson Make permut_cons_inside defax
R36751:36768 Coccinelle.dickson Make permut_cons_inside defax
R36751:36768 Coccinelle.dickson Make permut_cons_inside defax
R36789:36795 Coq.Lists.List <> ass_app syndef
R36789:36795 Coq.Lists.List <> ass_app syndef
R36789:36795 Coq.Lists.List <> ass_app syndef
R36789:36795 Coq.Lists.List <> ass_app syndef
R36811:36830 Coccinelle.dickson Make multiset_closure_aux thm
R36837:36840 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36811:36830 Coccinelle.dickson Make multiset_closure_aux thm
R36837:36840 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36942:36950 Coq.Init.Logic <> False_rec scheme
R36942:36950 Coq.Init.Logic <> False_rec scheme
R37010:37012 Coccinelle.more_list <> mem def
R37030:37033 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37022:37026 Coccinelle.dickson Make consn def
R37014:37017 Coccinelle.dickson Make eq_A defax
R37010:37012 Coccinelle.more_list <> mem def
R37030:37033 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37022:37026 Coccinelle.dickson Make consn def
R37014:37017 Coccinelle.dickson Make eq_A defax
R37051:37064 Coccinelle.dickson Make mem_permut_mem defax
R37051:37064 Coccinelle.dickson Make mem_permut_mem defax
R37051:37064 Coccinelle.dickson Make mem_permut_mem defax
R37095:37104 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37110:37117 Coccinelle.dickson Make eq_proof defax
R37095:37104 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37110:37117 Coccinelle.dickson Make eq_proof defax
R37132:37141 Coccinelle.more_list <> mem_or_app thm
R37132:37141 Coccinelle.more_list <> mem_or_app thm
R37132:37141 Coccinelle.more_list <> mem_or_app thm
R37231:37233 Coccinelle.more_list <> mem def
R37235:37238 Coccinelle.dickson Make eq_A defax
R37231:37233 Coccinelle.more_list <> mem def
R37235:37238 Coccinelle.dickson Make eq_A defax
R37287:37289 Coccinelle.more_list <> mem def
R37309:37312 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37299:37305 Coccinelle.dickson Make appendn def
R37291:37294 Coccinelle.dickson Make eq_A defax
R37287:37289 Coccinelle.more_list <> mem def
R37309:37312 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37299:37305 Coccinelle.dickson Make appendn def
R37291:37294 Coccinelle.dickson Make eq_A defax
R37330:37343 Coccinelle.dickson Make mem_permut_mem defax
R37330:37343 Coccinelle.dickson Make mem_permut_mem defax
R37330:37343 Coccinelle.dickson Make mem_permut_mem defax
R37374:37383 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37389:37396 Coccinelle.dickson Make eq_proof defax
R37374:37383 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37389:37396 Coccinelle.dickson Make eq_proof defax
R37411:37420 Coccinelle.more_list <> mem_or_app thm
R37411:37420 Coccinelle.more_list <> mem_or_app thm
R37411:37420 Coccinelle.more_list <> mem_or_app thm
R37510:37512 Coccinelle.more_list <> mem def
R37514:37517 Coccinelle.dickson Make eq_A defax
R37510:37512 Coccinelle.more_list <> mem def
R37514:37517 Coccinelle.dickson Make eq_A defax
prf 37547:37600 Make remove_context_trans_clos_multiset_extension_step_app1
R37630:37633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37634:37634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37651:37658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37733:37761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37762:37771 Coccinelle.TransClosure <> trans_clos ind
R37804:37805 Coccinelle.dickson <> l2 var
R37801:37802 Coccinelle.dickson <> l1 var
R37774:37796 Coccinelle.dickson Make multiset_extension_step ind
R37798:37798 Coccinelle.dickson <> R var
R37675:37684 Coccinelle.TransClosure <> trans_clos ind
R37726:37729 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37725:37725 Coccinelle.dickson <> l var
R37730:37731 Coccinelle.dickson <> l2 var
R37716:37719 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37715:37715 Coccinelle.dickson <> l var
R37720:37721 Coccinelle.dickson <> l1 var
R37687:37709 Coccinelle.dickson Make multiset_extension_step ind
R37711:37711 Coccinelle.dickson <> R var
R37645:37645 Coq.Init.Logic <> ::type_scope:'~'_x not
R37646:37646 Coccinelle.dickson <> R var
R37650:37650 Coccinelle.dickson <> a var
R37648:37648 Coccinelle.dickson <> a var
R37616:37625 Coq.Relations.Relation_Definitions <> transitive def
R37629:37629 Coccinelle.dickson <> R var
R37949:37995 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
R37949:37995 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
prf 38026:38044 Make nil_is_the_smallest
R38064:38073 Coccinelle.TransClosure <> trans_clos ind
R38109:38112 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38108:38108 Coccinelle.dickson <> e var
R38113:38113 Coccinelle.dickson <> l var
R38103:38105 Coq.Init.Datatypes <> nil constr
R38076:38098 Coccinelle.dickson Make multiset_extension_step ind
R38100:38100 Coccinelle.dickson <> R var
R38205:38210 Coccinelle.TransClosure <> t_step constr
R38222:38229 Coccinelle.dickson Make rmv_case constr
R38241:38243 Coq.Init.Datatypes <> nil constr
R38237:38239 Coq.Init.Datatypes <> nil constr
R38205:38210 Coccinelle.TransClosure <> t_step constr
R38222:38229 Coccinelle.dickson Make rmv_case constr
R38241:38243 Coq.Init.Datatypes <> nil constr
R38237:38239 Coq.Init.Datatypes <> nil constr
R38321:38324 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38293:38311 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38321:38324 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38293:38311 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38344:38349 Coccinelle.TransClosure <> t_step constr
R38361:38368 Coccinelle.dickson Make rmv_case constr
R38386:38388 Coq.Init.Datatypes <> nil constr
R38379:38382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38344:38349 Coccinelle.TransClosure <> t_step constr
R38361:38368 Coccinelle.dickson Make rmv_case constr
R38386:38388 Coq.Init.Datatypes <> nil constr
R38379:38382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38433:38450 Coccinelle.dickson Make permut_cons_inside defax
R38485:38488 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38489:38491 Coq.Init.Datatypes <> nil constr
R38476:38479 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38433:38450 Coccinelle.dickson Make permut_cons_inside defax
R38485:38488 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38489:38491 Coq.Init.Datatypes <> nil constr
R38476:38479 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38433:38450 Coccinelle.dickson Make permut_cons_inside defax
R38485:38488 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38489:38491 Coq.Init.Datatypes <> nil constr
R38476:38479 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38433:38450 Coccinelle.dickson Make permut_cons_inside defax
R38485:38488 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38489:38491 Coq.Init.Datatypes <> nil constr
R38476:38479 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38511:38520 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38526:38533 Coccinelle.dickson Make eq_proof defax
R38511:38520 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38526:38533 Coccinelle.dickson Make eq_proof defax
sec 38551:38554 Make Mult
var 38567:38567 Make.Mult R
R38571:38578 Coq.Relations.Relation_Definitions <> relation def
R38580:38580 Coccinelle.dickson Make A defax
var 38592:38597 Make.Mult R_bool
R38602:38605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38607:38610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38611:38614 Coq.Init.Datatypes <> bool ind
R38606:38606 Coccinelle.dickson Make A defax
R38601:38601 Coccinelle.dickson Make A defax
var 38626:38634 Make.Mult R_bool_ok
R38666:38671 Coccinelle.dickson <> Make.Mult.R_bool var
R38676:38677 Coccinelle.dickson <> a2 var
R38673:38674 Coccinelle.dickson <> a1 var
R38689:38692 Coq.Init.Datatypes <> true constr
R38697:38697 Coccinelle.dickson <> Make.Mult.R var
R38702:38703 Coccinelle.dickson <> a2 var
R38699:38700 Coccinelle.dickson <> a1 var
R38710:38714 Coq.Init.Datatypes <> false constr
R38719:38720 Coq.Init.Logic <> ::type_scope:'~'_x not
R38721:38721 Coccinelle.dickson <> Make.Mult.R var
R38726:38727 Coccinelle.dickson <> a2 var
R38723:38724 Coccinelle.dickson <> a1 var
def 38749:38752 Make mult
R38763:38766 Coq.Init.Datatypes <> list ind
R38768:38768 Coccinelle.dickson Make A defax
R38773:38776 Coccinelle.ordered_set <> comp ind
R38789:38800 Coccinelle.more_list <> remove_equiv def
R38813:38814 Coccinelle.dickson <> l2 var
R38810:38811 Coccinelle.dickson <> l1 var
R38802:38808 Coccinelle.dickson Make eq_bool defax
R38827:38827 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38831:38832 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38836:38836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38828:38830 Coq.Init.Datatypes <> nil constr
R38833:38835 Coq.Init.Datatypes <> nil constr
R38841:38850 Coccinelle.ordered_set <> Equivalent constr
R38858:38858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38861:38862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38865:38865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38878:38888 Coccinelle.more_list <> list_forall def
R38942:38943 Coccinelle.dickson <> l2 var
R38901:38911 Coccinelle.more_list <> list_exists def
R38938:38939 Coccinelle.dickson <> l1 var
R38924:38929 Coccinelle.dickson <> Make.Mult.R_bool var
R38934:38935 Coccinelle.dickson <> t1 var
R38931:38932 Coccinelle.dickson <> t2 var
R38960:38963 Coq.Init.Datatypes <> true constr
R38968:38979 Coccinelle.ordered_set <> Greater_than constr
R38984:38988 Coq.Init.Datatypes <> false constr
R39002:39012 Coccinelle.more_list <> list_forall def
R39066:39067 Coccinelle.dickson <> l1 var
R39025:39035 Coccinelle.more_list <> list_exists def
R39062:39063 Coccinelle.dickson <> l2 var
R39048:39053 Coccinelle.dickson <> Make.Mult.R_bool var
R39058:39059 Coccinelle.dickson <> t2 var
R39055:39056 Coccinelle.dickson <> t1 var
R39079:39082 Coq.Init.Datatypes <> true constr
R39087:39095 Coccinelle.ordered_set <> Less_than constr
R39102:39106 Coq.Init.Datatypes <> false constr
R39111:39122 Coccinelle.ordered_set <> Uncomparable constr
prf 39159:39170 Make greater_case
R39191:39191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39241:39247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39321:39327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39328:39334 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39337:39338 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39339:39345 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39348:39349 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39376:39409 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39350:39355 Coccinelle.dickson Make permut syndef
R39369:39372 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R39361:39365 Coccinelle.dickson Make consn def
R39367:39368 Coccinelle.dickson <> ll var
R39373:39374 Coccinelle.dickson <> le var
R39357:39358 Coccinelle.dickson <> l1 var
R39433:39467 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39529:39529 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39410:39415 Coccinelle.dickson Make permut syndef
R39422:39428 Coccinelle.dickson Make appendn def
R39430:39431 Coccinelle.dickson <> ll var
R39418:39419 Coccinelle.dickson <> l2 var
R39493:39496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39520:39523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39524:39524 Coccinelle.dickson <> Make.Mult.R var
R39528:39528 Coccinelle.dickson <> a var
R39526:39526 Coccinelle.dickson <> b var
R39507:39509 Coccinelle.more_list <> mem def
R39518:39519 Coccinelle.dickson <> la var
R39516:39516 Coccinelle.dickson <> b var
R39511:39514 Coccinelle.dickson Make eq_A defax
R39481:39482 Coq.Lists.List <> In def
R39491:39492 Coccinelle.dickson <> ll var
R39484:39484 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39486:39486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39489:39489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39485:39485 Coccinelle.dickson <> a var
R39487:39488 Coccinelle.dickson <> la var
R39314:39316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39248:39258 Coccinelle.more_list <> list_forall def
R39312:39313 Coccinelle.dickson <> l2 var
R39271:39281 Coccinelle.more_list <> list_exists def
R39308:39309 Coccinelle.dickson <> l1 var
R39294:39299 Coccinelle.dickson <> Make.Mult.R_bool var
R39304:39305 Coccinelle.dickson <> t1 var
R39301:39302 Coccinelle.dickson <> t2 var
R39317:39320 Coq.Init.Datatypes <> true constr
R39215:39218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39232:39235 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39236:39240 Coq.Init.Logic <> False ind
R39219:39221 Coccinelle.more_list <> mem def
R39230:39231 Coccinelle.dickson <> l2 var
R39228:39228 Coccinelle.dickson <> a var
R39223:39226 Coccinelle.dickson Make eq_A defax
R39202:39204 Coccinelle.more_list <> mem def
R39213:39214 Coccinelle.dickson <> l1 var
R39211:39211 Coccinelle.dickson <> a var
R39206:39209 Coccinelle.dickson Make eq_A defax
R39654:39656 Coq.Init.Datatypes <> nil constr
R39658:39658 Coccinelle.dickson Make A defax
R39672:39674 Coq.Init.Datatypes <> nil constr
R39678:39680 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39677:39677 Coccinelle.dickson Make A defax
R39681:39684 Coq.Init.Datatypes <> list ind
R39686:39686 Coccinelle.dickson Make A defax
R39654:39656 Coq.Init.Datatypes <> nil constr
R39658:39658 Coccinelle.dickson Make A defax
R39672:39674 Coq.Init.Datatypes <> nil constr
R39678:39680 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39677:39677 Coccinelle.dickson Make A defax
R39681:39684 Coq.Init.Datatypes <> list ind
R39686:39686 Coccinelle.dickson Make A defax
R39731:39734 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R39749:39751 Coq.Init.Datatypes <> nil constr
R39755:39757 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39754:39754 Coccinelle.dickson Make A defax
R39758:39761 Coq.Init.Datatypes <> list ind
R39763:39763 Coccinelle.dickson Make A defax
R39731:39734 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R39749:39751 Coq.Init.Datatypes <> nil constr
R39755:39757 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39754:39754 Coccinelle.dickson Make A defax
R39758:39761 Coq.Init.Datatypes <> list ind
R39763:39763 Coccinelle.dickson Make A defax
R39818:39837 Coccinelle.more_list <> list_exists_is_sound thm
R39849:39849 Coccinelle.dickson Make A defax
R39854:39859 Coccinelle.dickson <> Make.Mult.R_bool var
R39864:39865 Coccinelle.dickson <> t1 var
R39879:39889 Coccinelle.more_list <> list_exists def
R39901:39901 Coccinelle.dickson Make A defax
R39906:39911 Coccinelle.dickson <> Make.Mult.R_bool var
R39916:39917 Coccinelle.dickson <> t1 var
R39818:39837 Coccinelle.more_list <> list_exists_is_sound thm
R39849:39849 Coccinelle.dickson Make A defax
R39854:39859 Coccinelle.dickson <> Make.Mult.R_bool var
R39864:39865 Coccinelle.dickson <> t1 var
R39879:39889 Coccinelle.more_list <> list_exists def
R39901:39901 Coccinelle.dickson Make A defax
R39906:39911 Coccinelle.dickson <> Make.Mult.R_bool var
R39916:39917 Coccinelle.dickson <> t1 var
R39946:39950 Coq.Init.Logic <> proj1 thm
R39955:39964 Coq.Init.Logic <> refl_equal syndef
R39946:39950 Coq.Init.Logic <> proj1 thm
R39955:39964 Coq.Init.Logic <> refl_equal syndef
R40032:40032 Coccinelle.dickson <> Make.Mult.R var
R40032:40032 Coccinelle.dickson <> Make.Mult.R var
R40054:40062 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40054:40062 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40122:40122 Coccinelle.dickson Make A defax
R40138:40141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40155:40158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40159:40163 Coq.Init.Logic <> False ind
R40142:40144 Coccinelle.more_list <> mem def
R40151:40151 Coccinelle.dickson <> x var
R40146:40149 Coccinelle.dickson Make eq_A defax
R40125:40127 Coccinelle.more_list <> mem def
R40134:40134 Coccinelle.dickson <> x var
R40129:40132 Coccinelle.dickson Make eq_A defax
R40122:40122 Coccinelle.dickson Make A defax
R40138:40141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40155:40158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40159:40163 Coq.Init.Logic <> False ind
R40142:40144 Coccinelle.more_list <> mem def
R40151:40151 Coccinelle.dickson <> x var
R40146:40149 Coccinelle.dickson Make eq_A defax
R40125:40127 Coccinelle.more_list <> mem def
R40134:40134 Coccinelle.dickson <> x var
R40129:40132 Coccinelle.dickson Make eq_A defax
R40284:40294 Coccinelle.more_list <> list_forall def
R40306:40306 Coccinelle.dickson Make A defax
R40311:40321 Coccinelle.more_list <> list_exists def
R40333:40333 Coccinelle.dickson Make A defax
R40338:40343 Coccinelle.dickson <> Make.Mult.R_bool var
R40348:40349 Coccinelle.dickson <> t1 var
R40345:40346 Coccinelle.dickson <> t2 var
R40284:40294 Coccinelle.more_list <> list_forall def
R40306:40306 Coccinelle.dickson Make A defax
R40311:40321 Coccinelle.more_list <> list_exists def
R40333:40333 Coccinelle.dickson Make A defax
R40338:40343 Coccinelle.dickson <> Make.Mult.R_bool var
R40348:40349 Coccinelle.dickson <> t1 var
R40345:40346 Coccinelle.dickson <> t2 var
R40548:40550 Coccinelle.more_list <> mem def
R40569:40572 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40561:40565 Coccinelle.dickson Make consn def
R40552:40555 Coccinelle.dickson Make eq_A defax
R40548:40550 Coccinelle.more_list <> mem def
R40569:40572 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40561:40565 Coccinelle.dickson Make consn def
R40552:40555 Coccinelle.dickson Make eq_A defax
R40591:40604 Coccinelle.dickson Make mem_permut_mem defax
R40620:40630 Coccinelle.more_list <> in_impl_mem thm
R40591:40604 Coccinelle.dickson Make mem_permut_mem defax
R40591:40604 Coccinelle.dickson Make mem_permut_mem defax
R40620:40630 Coccinelle.more_list <> in_impl_mem thm
R40656:40665 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40671:40678 Coccinelle.dickson Make eq_proof defax
R40656:40665 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40671:40678 Coccinelle.dickson Make eq_proof defax
R40693:40702 Coccinelle.more_list <> mem_or_app thm
R40693:40702 Coccinelle.more_list <> mem_or_app thm
R40693:40702 Coccinelle.more_list <> mem_or_app thm
R40801:40805 Coq.Init.Logic <> proj1 thm
R40808:40816 Coccinelle.dickson Make mem_consn thm
R40801:40805 Coq.Init.Logic <> proj1 thm
R40808:40816 Coccinelle.dickson Make mem_consn thm
R40874:40881 Coq.Lists.List <> In_split syndef
R40874:40881 Coq.Lists.List <> In_split syndef
R40954:40957 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40972:40975 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40958:40958 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40961:40962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40971:40971 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40965:40968 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40954:40957 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40972:40975 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40958:40958 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40961:40962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40971:40971 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40965:40968 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40998:41006 Coccinelle.dickson Make consn_app thm
R41024:41032 Coccinelle.dickson Make consn_app thm
R40998:41006 Coccinelle.dickson Make consn_app thm
R40998:41006 Coccinelle.dickson Make consn_app thm
R41024:41032 Coccinelle.dickson Make consn_app thm
R41024:41032 Coccinelle.dickson Make consn_app thm
R41078:41088 Coccinelle.dickson Make appendn_app thm
R41109:41126 Coccinelle.dickson Make permut_cons_inside defax
R41137:41147 Coccinelle.dickson Make appendn_app thm
R41078:41088 Coccinelle.dickson Make appendn_app thm
R41078:41088 Coccinelle.dickson Make appendn_app thm
R41109:41126 Coccinelle.dickson Make permut_cons_inside defax
R41109:41126 Coccinelle.dickson Make permut_cons_inside defax
R41109:41126 Coccinelle.dickson Make permut_cons_inside defax
R41137:41147 Coccinelle.dickson Make appendn_app thm
R41137:41147 Coccinelle.dickson Make appendn_app thm
R41137:41147 Coccinelle.dickson Make appendn_app thm
R41137:41147 Coccinelle.dickson Make appendn_app thm
R41185:41194 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41200:41207 Coccinelle.dickson Make eq_proof defax
R41185:41194 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41200:41207 Coccinelle.dickson Make eq_proof defax
R41250:41258 Coq.Lists.List <> in_app_or thm
R41250:41258 Coq.Lists.List <> in_app_or thm
R41373:41381 Coq.Lists.List <> in_or_app thm
R41373:41381 Coq.Lists.List <> in_or_app thm
R41599:41607 Coq.Lists.List <> in_or_app thm
R41599:41607 Coq.Lists.List <> in_or_app thm
R41644:41656 Coccinelle.more_list <> mem_split_set thm
R41662:41671 Coccinelle.dickson Make eq_bool_ok defax
R41644:41656 Coccinelle.more_list <> mem_split_set thm
R41662:41671 Coccinelle.dickson Make eq_bool_ok defax
R41788:41791 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41822:41825 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41807:41807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41810:41811 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41821:41821 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41814:41817 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41818:41820 Coq.Init.Datatypes <> nil constr
R41788:41791 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41822:41825 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41807:41807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41810:41811 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41821:41821 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41814:41817 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41818:41820 Coq.Init.Datatypes <> nil constr
R41878:41881 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41870:41874 Coccinelle.dickson Make consn def
R41885:41888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41892:41895 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41851:41862 Coccinelle.dickson Make permut_trans defax
R41878:41881 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41870:41874 Coccinelle.dickson Make consn def
R41885:41888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41892:41895 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41851:41862 Coccinelle.dickson Make permut_trans defax
R41923:41929 Coq.Lists.List <> ass_app syndef
R41938:41947 Coccinelle.dickson Make permut_sym defax
R41961:41978 Coccinelle.dickson Make permut_cons_inside defax
R41923:41929 Coq.Lists.List <> ass_app syndef
R41923:41929 Coq.Lists.List <> ass_app syndef
R41938:41947 Coccinelle.dickson Make permut_sym defax
R41961:41978 Coccinelle.dickson Make permut_cons_inside defax
R41961:41978 Coccinelle.dickson Make permut_cons_inside defax
R41961:41978 Coccinelle.dickson Make permut_cons_inside defax
R41998:42004 Coq.Lists.List <> ass_app syndef
R41998:42004 Coq.Lists.List <> ass_app syndef
R41998:42004 Coq.Lists.List <> ass_app syndef
R42038:42048 Coccinelle.dickson Make permut_cons defax
R42038:42048 Coccinelle.dickson Make permut_cons defax
R42038:42048 Coccinelle.dickson Make permut_cons defax
R42038:42048 Coccinelle.dickson Make permut_cons defax
R42067:42076 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42082:42089 Coccinelle.dickson Make eq_proof defax
R42067:42076 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42082:42089 Coccinelle.dickson Make eq_proof defax
R42355:42365 Coccinelle.more_list <> list_forall def
R42383:42383 Coccinelle.dickson Make A defax
R42395:42402 Coq.Bool.Bool <> ifb def
R42434:42444 Coccinelle.more_list <> list_exists def
R42456:42456 Coccinelle.dickson Make A defax
R42461:42466 Coccinelle.dickson <> Make.Mult.R_bool var
R42471:42472 Coccinelle.dickson <> t2 var
R42468:42469 Coccinelle.dickson <> t1 var
R42419:42422 Coq.Init.Datatypes <> true constr
R42405:42410 Coccinelle.dickson <> Make.Mult.R_bool var
R42412:42413 Coccinelle.dickson <> t1 var
R42355:42365 Coccinelle.more_list <> list_forall def
R42383:42383 Coccinelle.dickson Make A defax
R42395:42402 Coq.Bool.Bool <> ifb def
R42434:42444 Coccinelle.more_list <> list_exists def
R42456:42456 Coccinelle.dickson Make A defax
R42461:42466 Coccinelle.dickson <> Make.Mult.R_bool var
R42471:42472 Coccinelle.dickson <> t2 var
R42468:42469 Coccinelle.dickson <> t1 var
R42419:42422 Coq.Init.Datatypes <> true constr
R42405:42410 Coccinelle.dickson <> Make.Mult.R_bool var
R42412:42413 Coccinelle.dickson <> t1 var
R42540:42550 Coccinelle.more_list <> list_forall def
R42571:42571 Coccinelle.dickson Make A defax
R42586:42593 Coq.Bool.Bool <> ifb def
R42628:42638 Coccinelle.more_list <> list_exists def
R42650:42650 Coccinelle.dickson Make A defax
R42655:42660 Coccinelle.dickson <> Make.Mult.R_bool var
R42665:42666 Coccinelle.dickson <> t2 var
R42662:42663 Coccinelle.dickson <> t1 var
R42610:42613 Coq.Init.Datatypes <> true constr
R42596:42601 Coccinelle.dickson <> Make.Mult.R_bool var
R42603:42604 Coccinelle.dickson <> t1 var
R42540:42550 Coccinelle.more_list <> list_forall def
R42571:42571 Coccinelle.dickson Make A defax
R42586:42593 Coq.Bool.Bool <> ifb def
R42628:42638 Coccinelle.more_list <> list_exists def
R42650:42650 Coccinelle.dickson Make A defax
R42655:42660 Coccinelle.dickson <> Make.Mult.R_bool var
R42665:42666 Coccinelle.dickson <> t2 var
R42662:42663 Coccinelle.dickson <> t1 var
R42610:42613 Coq.Init.Datatypes <> true constr
R42596:42601 Coccinelle.dickson <> Make.Mult.R_bool var
R42603:42604 Coccinelle.dickson <> t1 var
prf 42722:42734 Make mult_is_sound
R42761:42764 Coccinelle.dickson Make mult def
R42769:42770 Coccinelle.dickson <> l2 var
R42766:42767 Coccinelle.dickson <> l1 var
R42781:42790 Coccinelle.ordered_set <> Equivalent constr
R42795:42800 Coccinelle.dickson Make permut syndef
R42805:42806 Coccinelle.dickson <> l2 var
R42802:42803 Coccinelle.dickson <> l1 var
R42812:42820 Coccinelle.ordered_set <> Less_than constr
R42825:42834 Coccinelle.TransClosure <> trans_clos ind
R42867:42868 Coccinelle.dickson <> l2 var
R42864:42865 Coccinelle.dickson <> l1 var
R42837:42859 Coccinelle.dickson Make multiset_extension_step ind
R42861:42861 Coccinelle.dickson <> Make.Mult.R var
R42874:42885 Coccinelle.ordered_set <> Greater_than constr
R42890:42899 Coccinelle.TransClosure <> trans_clos ind
R42932:42933 Coccinelle.dickson <> l1 var
R42929:42930 Coccinelle.dickson <> l2 var
R42902:42924 Coccinelle.dickson Make multiset_extension_step ind
R42926:42926 Coccinelle.dickson <> Make.Mult.R var
R42944:42947 Coq.Init.Logic <> True ind
R42984:42987 Coccinelle.dickson Make mult def
R43003:43023 Coccinelle.dickson Make remove_equiv_is_sound defax
R43003:43023 Coccinelle.dickson Make remove_equiv_is_sound defax
R43040:43040 Coccinelle.dickson Make A defax
R43055:43066 Coccinelle.more_list <> remove_equiv def
R43074:43080 Coccinelle.dickson Make eq_bool defax
R43068:43072 Coccinelle.dickson DS1 A defax
R43055:43066 Coccinelle.more_list <> remove_equiv def
R43074:43080 Coccinelle.dickson Make eq_bool defax
R43068:43072 Coccinelle.dickson DS1 A defax
R43251:43254 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43255:43257 Coq.Init.Datatypes <> nil constr
R43231:43242 Coccinelle.dickson Make permut_trans defax
R43251:43254 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43255:43257 Coq.Init.Datatypes <> nil constr
R43231:43242 Coccinelle.dickson Make permut_trans defax
R43279:43288 Coccinelle.dickson Make permut_sym defax
R43279:43288 Coccinelle.dickson Make permut_sym defax
R43321:43331 Coq.Lists.List <> app_nil_end thm
R43347:43367 Coccinelle.dickson Make multiset_closure_aux2 thm
R43439:43441 Coq.Init.Datatypes <> nil constr
R43424:43427 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43369:43369 Coccinelle.dickson <> Make.Mult.R var
R43321:43331 Coq.Lists.List <> app_nil_end thm
R43321:43331 Coq.Lists.List <> app_nil_end thm
R43347:43367 Coccinelle.dickson Make multiset_closure_aux2 thm
R43439:43441 Coq.Init.Datatypes <> nil constr
R43424:43427 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43369:43369 Coccinelle.dickson <> Make.Mult.R var
R43487:43490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43494:43497 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43467:43478 Coccinelle.dickson Make permut_trans defax
R43487:43490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43494:43497 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43467:43478 Coccinelle.dickson Make permut_trans defax
R43524:43536 Coq.Lists.List <> app_comm_cons thm
R43545:43563 Coccinelle.dickson Make list_permut_app_app defax
R43524:43536 Coq.Lists.List <> app_comm_cons thm
R43524:43536 Coq.Lists.List <> app_comm_cons thm
R43545:43563 Coccinelle.dickson Make list_permut_app_app defax
R43628:43638 Coq.Lists.List <> app_nil_end thm
R43654:43674 Coccinelle.dickson Make multiset_closure_aux2 thm
R43746:43748 Coq.Init.Datatypes <> nil constr
R43731:43734 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43676:43676 Coccinelle.dickson <> Make.Mult.R var
R43628:43638 Coq.Lists.List <> app_nil_end thm
R43628:43638 Coq.Lists.List <> app_nil_end thm
R43654:43674 Coccinelle.dickson Make multiset_closure_aux2 thm
R43746:43748 Coq.Init.Datatypes <> nil constr
R43731:43734 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43676:43676 Coccinelle.dickson <> Make.Mult.R var
R43794:43797 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43801:43804 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43774:43785 Coccinelle.dickson Make permut_trans defax
R43794:43797 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43801:43804 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43774:43785 Coccinelle.dickson Make permut_trans defax
R43831:43843 Coq.Lists.List <> app_comm_cons thm
R43852:43870 Coccinelle.dickson Make list_permut_app_app defax
R43831:43843 Coq.Lists.List <> app_comm_cons thm
R43831:43843 Coq.Lists.List <> app_comm_cons thm
R43852:43870 Coccinelle.dickson Make list_permut_app_app defax
R43929:43940 Coccinelle.dickson Make greater_case thm
R43959:43962 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43946:43949 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43979:43979 Coccinelle.dickson Make A defax
R43929:43940 Coccinelle.dickson Make greater_case thm
R43959:43962 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43946:43949 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43993:44003 Coccinelle.more_list <> list_forall def
R44087:44090 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44015:44019 Coccinelle.dickson DS1 A defax
R44024:44034 Coccinelle.more_list <> list_exists def
R44073:44076 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44046:44050 Coccinelle.dickson DS1 A defax
R44055:44060 Coccinelle.dickson <> Make.Mult.R_bool var
R44065:44066 Coccinelle.dickson <> t1 var
R44062:44063 Coccinelle.dickson <> t2 var
R43993:44003 Coccinelle.more_list <> list_forall def
R44087:44090 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44015:44019 Coccinelle.dickson DS1 A defax
R44024:44034 Coccinelle.more_list <> list_exists def
R44073:44076 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44046:44050 Coccinelle.dickson DS1 A defax
R44055:44060 Coccinelle.dickson <> Make.Mult.R_bool var
R44065:44066 Coccinelle.dickson <> t1 var
R44062:44063 Coccinelle.dickson <> t2 var
R44122:44131 Coq.Init.Logic <> refl_equal syndef
R44122:44131 Coq.Init.Logic <> refl_equal syndef
R44195:44215 Coccinelle.dickson Make multiset_closure_aux2 thm
R44217:44217 Coccinelle.dickson <> Make.Mult.R var
R44195:44215 Coccinelle.dickson Make multiset_closure_aux2 thm
R44217:44217 Coccinelle.dickson <> Make.Mult.R var
R44304:44307 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44311:44314 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44284:44295 Coccinelle.dickson Make permut_trans defax
R44304:44307 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44311:44314 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44284:44295 Coccinelle.dickson Make permut_trans defax
R44359:44362 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44363:44369 Coccinelle.dickson Make appendn def
R44339:44350 Coccinelle.dickson Make permut_trans defax
R44359:44362 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44363:44369 Coccinelle.dickson Make appendn def
R44339:44350 Coccinelle.dickson Make permut_trans defax
R44387:44397 Coccinelle.dickson Make permut_app1 defax
R44387:44397 Coccinelle.dickson Make permut_app1 defax
R44387:44397 Coccinelle.dickson Make permut_app1 defax
R44418:44436 Coccinelle.dickson Make list_permut_app_app defax
R44418:44436 Coccinelle.dickson Make list_permut_app_app defax
R44465:44468 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44472:44475 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44445:44456 Coccinelle.dickson Make permut_trans defax
R44465:44468 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44472:44475 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44445:44456 Coccinelle.dickson Make permut_trans defax
R44520:44523 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44532:44535 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44524:44528 Coccinelle.dickson Make consn def
R44500:44511 Coccinelle.dickson Make permut_trans defax
R44520:44523 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44532:44535 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44524:44528 Coccinelle.dickson Make consn def
R44500:44511 Coccinelle.dickson Make permut_trans defax
R44552:44562 Coccinelle.dickson Make permut_app1 defax
R44552:44562 Coccinelle.dickson Make permut_app1 defax
R44552:44562 Coccinelle.dickson Make permut_app1 defax
R44603:44606 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44609:44612 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44613:44617 Coccinelle.dickson Make consn def
R44583:44594 Coccinelle.dickson Make permut_trans defax
R44603:44606 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44609:44612 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44613:44617 Coccinelle.dickson Make consn def
R44583:44594 Coccinelle.dickson Make permut_trans defax
R44635:44645 Coccinelle.dickson Make permut_app1 defax
R44654:44672 Coccinelle.dickson Make list_permut_app_app defax
R44635:44645 Coccinelle.dickson Make permut_app1 defax
R44635:44645 Coccinelle.dickson Make permut_app1 defax
R44654:44672 Coccinelle.dickson Make list_permut_app_app defax
R44684:44690 Coq.Lists.List <> ass_app syndef
R44703:44721 Coccinelle.dickson Make list_permut_app_app defax
R44684:44690 Coq.Lists.List <> ass_app syndef
R44684:44690 Coq.Lists.List <> ass_app syndef
R44703:44721 Coccinelle.dickson Make list_permut_app_app defax
R44793:44805 Coccinelle.list_permut <> permut_length thm
R44850:44852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44836:44836 Coq.Init.Datatypes <> S constr
R44839:44844 Coq.Init.Datatypes <> length def
R44793:44805 Coccinelle.list_permut <> permut_length thm
R44850:44852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44836:44836 Coq.Init.Datatypes <> S constr
R44839:44844 Coq.Init.Datatypes <> length def
R44945:44949 Coccinelle.dickson DS1 A defax
R44975:44978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45002:45005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45006:45010 Coq.Init.Logic <> False ind
R44979:44981 Coccinelle.more_list <> mem def
R44994:44997 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44988:44988 Coccinelle.dickson <> x var
R44983:44986 Coccinelle.dickson Make eq_A defax
R44952:44954 Coccinelle.more_list <> mem def
R44967:44970 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44961:44961 Coccinelle.dickson <> x var
R44956:44959 Coccinelle.dickson Make eq_A defax
R44945:44949 Coccinelle.dickson DS1 A defax
R44975:44978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45002:45005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45006:45010 Coq.Init.Logic <> False ind
R44979:44981 Coccinelle.more_list <> mem def
R44994:44997 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44988:44988 Coccinelle.dickson <> x var
R44983:44986 Coccinelle.dickson Make eq_A defax
R44952:44954 Coccinelle.more_list <> mem def
R44967:44970 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44961:44961 Coccinelle.dickson <> x var
R44956:44959 Coccinelle.dickson Make eq_A defax
R45071:45082 Coccinelle.dickson Make greater_case thm
R45101:45104 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45088:45091 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45122:45122 Coccinelle.dickson Make A defax
R45136:45146 Coccinelle.more_list <> list_forall def
R45230:45233 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45158:45162 Coccinelle.dickson DS1 A defax
R45167:45177 Coccinelle.more_list <> list_exists def
R45216:45219 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45189:45193 Coccinelle.dickson DS1 A defax
R45198:45203 Coccinelle.dickson <> Make.Mult.R_bool var
R45208:45209 Coccinelle.dickson <> t2 var
R45205:45206 Coccinelle.dickson <> t1 var
R45071:45082 Coccinelle.dickson Make greater_case thm
R45101:45104 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45088:45091 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45136:45146 Coccinelle.more_list <> list_forall def
R45230:45233 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45158:45162 Coccinelle.dickson DS1 A defax
R45167:45177 Coccinelle.more_list <> list_exists def
R45216:45219 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45189:45193 Coccinelle.dickson DS1 A defax
R45198:45203 Coccinelle.dickson <> Make.Mult.R_bool var
R45208:45209 Coccinelle.dickson <> t2 var
R45205:45206 Coccinelle.dickson <> t1 var
R45265:45274 Coq.Init.Logic <> refl_equal syndef
R45265:45274 Coq.Init.Logic <> refl_equal syndef
R45338:45358 Coccinelle.dickson Make multiset_closure_aux2 thm
R45360:45360 Coccinelle.dickson <> Make.Mult.R var
R45338:45358 Coccinelle.dickson Make multiset_closure_aux2 thm
R45360:45360 Coccinelle.dickson <> Make.Mult.R var
R45447:45450 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45454:45457 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45427:45438 Coccinelle.dickson Make permut_trans defax
R45447:45450 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45454:45457 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45427:45438 Coccinelle.dickson Make permut_trans defax
R45502:45505 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45506:45512 Coccinelle.dickson Make appendn def
R45482:45493 Coccinelle.dickson Make permut_trans defax
R45502:45505 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45506:45512 Coccinelle.dickson Make appendn def
R45482:45493 Coccinelle.dickson Make permut_trans defax
R45530:45540 Coccinelle.dickson Make permut_app1 defax
R45530:45540 Coccinelle.dickson Make permut_app1 defax
R45530:45540 Coccinelle.dickson Make permut_app1 defax
R45561:45579 Coccinelle.dickson Make list_permut_app_app defax
R45561:45579 Coccinelle.dickson Make list_permut_app_app defax
R45608:45611 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45615:45618 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45588:45599 Coccinelle.dickson Make permut_trans defax
R45608:45611 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45615:45618 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45588:45599 Coccinelle.dickson Make permut_trans defax
R45663:45666 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45675:45678 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45667:45671 Coccinelle.dickson Make consn def
R45643:45654 Coccinelle.dickson Make permut_trans defax
R45663:45666 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45675:45678 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45667:45671 Coccinelle.dickson Make consn def
R45643:45654 Coccinelle.dickson Make permut_trans defax
R45695:45705 Coccinelle.dickson Make permut_app1 defax
R45695:45705 Coccinelle.dickson Make permut_app1 defax
R45695:45705 Coccinelle.dickson Make permut_app1 defax
R45746:45749 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45752:45755 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45756:45760 Coccinelle.dickson Make consn def
R45726:45737 Coccinelle.dickson Make permut_trans defax
R45746:45749 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45752:45755 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45756:45760 Coccinelle.dickson Make consn def
R45726:45737 Coccinelle.dickson Make permut_trans defax
R45778:45788 Coccinelle.dickson Make permut_app1 defax
R45797:45815 Coccinelle.dickson Make list_permut_app_app defax
R45778:45788 Coccinelle.dickson Make permut_app1 defax
R45778:45788 Coccinelle.dickson Make permut_app1 defax
R45797:45815 Coccinelle.dickson Make list_permut_app_app defax
R45827:45833 Coq.Lists.List <> ass_app syndef
R45846:45864 Coccinelle.dickson Make list_permut_app_app defax
R45827:45833 Coq.Lists.List <> ass_app syndef
R45827:45833 Coq.Lists.List <> ass_app syndef
R45846:45864 Coccinelle.dickson Make list_permut_app_app defax
R45936:45948 Coccinelle.list_permut <> permut_length thm
R45993:45995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45979:45979 Coq.Init.Datatypes <> S constr
R45982:45987 Coq.Init.Datatypes <> length def
R45936:45948 Coccinelle.list_permut <> permut_length thm
R45993:45995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45979:45979 Coq.Init.Datatypes <> S constr
R45982:45987 Coq.Init.Datatypes <> length def
prf 46089:46110 Make mult_is_complete_equiv
R46141:46144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46155:46157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46145:46148 Coccinelle.dickson Make mult def
R46153:46154 Coccinelle.dickson <> l2 var
R46150:46151 Coccinelle.dickson <> l1 var
R46158:46167 Coccinelle.ordered_set <> Equivalent constr
R46129:46134 Coccinelle.dickson Make permut syndef
R46139:46140 Coccinelle.dickson <> l2 var
R46136:46137 Coccinelle.dickson <> l1 var
R46207:46212 Coccinelle.dickson Make permut syndef
R46220:46223 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46224:46226 Coq.Init.Datatypes <> nil constr
R46207:46212 Coccinelle.dickson Make permut syndef
R46220:46223 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46224:46226 Coq.Init.Datatypes <> nil constr
R46242:46252 Coq.Lists.List <> app_nil_end thm
R46261:46271 Coccinelle.dickson Make permut_refl defax
R46242:46252 Coq.Lists.List <> app_nil_end thm
R46242:46252 Coq.Lists.List <> app_nil_end thm
R46261:46271 Coccinelle.dickson Make permut_refl defax
R46287:46292 Coccinelle.dickson Make permut syndef
R46300:46303 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46304:46306 Coq.Init.Datatypes <> nil constr
R46287:46292 Coccinelle.dickson Make permut syndef
R46300:46303 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46304:46306 Coq.Init.Datatypes <> nil constr
R46322:46332 Coq.Lists.List <> app_nil_end thm
R46341:46350 Coccinelle.dickson Make permut_sym defax
R46322:46332 Coq.Lists.List <> app_nil_end thm
R46322:46332 Coq.Lists.List <> app_nil_end thm
R46341:46350 Coccinelle.dickson Make permut_sym defax
R46388:46388 Coccinelle.dickson Make A defax
R46405:46408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46423:46426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46427:46431 Coq.Init.Logic <> False ind
R46409:46411 Coccinelle.more_list <> mem def
R46420:46422 Coq.Init.Datatypes <> nil constr
R46418:46418 Coccinelle.dickson <> x var
R46413:46416 Coccinelle.dickson Make eq_A defax
R46391:46393 Coccinelle.more_list <> mem def
R46402:46404 Coq.Init.Datatypes <> nil constr
R46400:46400 Coccinelle.dickson <> x var
R46395:46398 Coccinelle.dickson Make eq_A defax
R46388:46388 Coccinelle.dickson Make A defax
R46405:46408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46423:46426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46427:46431 Coq.Init.Logic <> False ind
R46409:46411 Coccinelle.more_list <> mem def
R46420:46422 Coq.Init.Datatypes <> nil constr
R46418:46418 Coccinelle.dickson <> x var
R46413:46416 Coccinelle.dickson Make eq_A defax
R46391:46393 Coccinelle.more_list <> mem def
R46402:46404 Coq.Init.Datatypes <> nil constr
R46400:46400 Coccinelle.dickson <> x var
R46395:46398 Coccinelle.dickson Make eq_A defax
R46471:46494 Coccinelle.dickson Make remove_equiv_is_complete defax
R46509:46511 Coq.Init.Datatypes <> nil constr
R46505:46507 Coq.Init.Datatypes <> nil constr
R46471:46494 Coccinelle.dickson Make remove_equiv_is_complete defax
R46509:46511 Coq.Init.Datatypes <> nil constr
R46505:46507 Coq.Init.Datatypes <> nil constr
R46530:46533 Coccinelle.dickson Make mult def
R46543:46543 Coccinelle.dickson Make A defax
R46558:46569 Coccinelle.more_list <> remove_equiv def
R46577:46583 Coccinelle.dickson Make eq_bool defax
R46571:46575 Coccinelle.dickson DS1 A defax
R46558:46569 Coccinelle.more_list <> remove_equiv def
R46577:46583 Coccinelle.dickson Make eq_bool defax
R46571:46575 Coccinelle.dickson DS1 A defax
R46637:46646 Coccinelle.list_permut <> permut_nil thm
R46637:46646 Coccinelle.list_permut <> permut_nil thm
R46637:46646 Coccinelle.list_permut <> permut_nil thm
R46675:46684 Coccinelle.list_permut <> permut_nil thm
R46675:46684 Coccinelle.list_permut <> permut_nil thm
R46675:46684 Coccinelle.list_permut <> permut_nil thm
R46697:46706 Coq.Init.Logic <> refl_equal syndef
R46697:46706 Coq.Init.Logic <> refl_equal syndef
prf 46725:46752 Make mult_is_complete_greater_aux
R46771:46774 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46775:46775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46793:46798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46815:46815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46865:46872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46931:46936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46937:46937 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47004:47007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46938:46948 Coccinelle.more_list <> list_forall def
R47002:47003 Coccinelle.dickson <> l2 var
R46961:46971 Coccinelle.more_list <> list_exists def
R46998:46999 Coccinelle.dickson <> l1 var
R46984:46989 Coccinelle.dickson <> Make.Mult.R_bool var
R46994:46995 Coccinelle.dickson <> t1 var
R46991:46992 Coccinelle.dickson <> t2 var
R47008:47011 Coq.Init.Datatypes <> true constr
R46873:46882 Coccinelle.TransClosure <> trans_clos ind
R46924:46927 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46923:46923 Coccinelle.dickson <> l var
R46928:46929 Coccinelle.dickson <> l1 var
R46914:46917 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46913:46913 Coccinelle.dickson <> l var
R46918:46919 Coccinelle.dickson <> l2 var
R46885:46907 Coccinelle.dickson Make multiset_extension_step ind
R46909:46909 Coccinelle.dickson <> Make.Mult.R var
R46839:46842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46856:46859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46860:46864 Coq.Init.Logic <> False ind
R46843:46845 Coccinelle.more_list <> mem def
R46854:46855 Coccinelle.dickson <> l2 var
R46852:46852 Coccinelle.dickson <> a var
R46847:46850 Coccinelle.dickson Make eq_A defax
R46826:46828 Coccinelle.more_list <> mem def
R46837:46838 Coccinelle.dickson <> l1 var
R46835:46835 Coccinelle.dickson <> a var
R46830:46833 Coccinelle.dickson Make eq_A defax
R46786:46787 Coq.Init.Logic <> ::type_scope:'~'_x not
R46788:46788 Coccinelle.dickson <> Make.Mult.R var
R46792:46792 Coccinelle.dickson <> a var
R46790:46790 Coccinelle.dickson <> a var
R46757:46766 Coq.Relations.Relation_Definitions <> transitive def
R46770:46770 Coccinelle.dickson <> Make.Mult.R var
R47096:47149 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47096:47149 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47221:47236 Coccinelle.dickson Make multiset_closure thm
R47221:47236 Coccinelle.dickson Make multiset_closure thm
R47423:47425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47426:47428 Coq.Init.Datatypes <> nil constr
R47423:47425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47426:47428 Coq.Init.Datatypes <> nil constr
R47499:47508 Coq.Init.Logic <> refl_equal syndef
R47499:47508 Coq.Init.Logic <> refl_equal syndef
R47551:47559 Coq.Init.Logic <> False_rec scheme
R47551:47559 Coq.Init.Logic <> False_rec scheme
R47593:47606 Coccinelle.dickson Make mem_permut_mem defax
R47626:47635 Coccinelle.more_list <> mem_or_app thm
R47658:47667 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47673:47680 Coccinelle.dickson Make eq_proof defax
R47593:47606 Coccinelle.dickson Make mem_permut_mem defax
R47593:47606 Coccinelle.dickson Make mem_permut_mem defax
R47626:47635 Coccinelle.more_list <> mem_or_app thm
R47626:47635 Coccinelle.more_list <> mem_or_app thm
R47658:47667 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47673:47680 Coccinelle.dickson Make eq_proof defax
R47693:47706 Coccinelle.dickson Make mem_permut_mem defax
R47726:47735 Coccinelle.more_list <> mem_or_app thm
R47758:47767 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47773:47780 Coccinelle.dickson Make eq_proof defax
R47693:47706 Coccinelle.dickson Make mem_permut_mem defax
R47693:47706 Coccinelle.dickson Make mem_permut_mem defax
R47726:47735 Coccinelle.more_list <> mem_or_app thm
R47726:47735 Coccinelle.more_list <> mem_or_app thm
R47758:47767 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47773:47780 Coccinelle.dickson Make eq_proof defax
R47805:47815 Coq.Lists.List <> app_nil_end thm
R47835:47845 Coq.Lists.List <> app_nil_end thm
R47805:47815 Coq.Lists.List <> app_nil_end thm
R47805:47815 Coq.Lists.List <> app_nil_end thm
R47835:47845 Coq.Lists.List <> app_nil_end thm
R47835:47845 Coq.Lists.List <> app_nil_end thm
R47894:47894 Coccinelle.dickson Make A defax
R47907:47910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47923:47926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47940:47942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47927:47932 Coccinelle.dickson <> Make.Mult.R_bool var
R47937:47939 Coccinelle.dickson <> ta' var
R47934:47935 Coccinelle.dickson <> ta var
R47943:47948 Coccinelle.dickson <> Make.Mult.R_bool var
R47953:47955 Coccinelle.dickson <> tb' var
R47950:47951 Coccinelle.dickson <> tb var
R47911:47914 Coccinelle.dickson Make eq_A defax
R47920:47922 Coccinelle.dickson <> tb' var
R47916:47918 Coccinelle.dickson <> ta' var
R47897:47900 Coccinelle.dickson Make eq_A defax
R47905:47906 Coccinelle.dickson <> tb var
R47902:47903 Coccinelle.dickson <> ta var
R47894:47894 Coccinelle.dickson Make A defax
R47907:47910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47923:47926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47940:47942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47927:47932 Coccinelle.dickson <> Make.Mult.R_bool var
R47937:47939 Coccinelle.dickson <> ta' var
R47934:47935 Coccinelle.dickson <> ta var
R47943:47948 Coccinelle.dickson <> Make.Mult.R_bool var
R47953:47955 Coccinelle.dickson <> tb' var
R47950:47951 Coccinelle.dickson <> tb var
R47911:47914 Coccinelle.dickson Make eq_A defax
R47920:47922 Coccinelle.dickson <> tb' var
R47916:47918 Coccinelle.dickson <> ta' var
R47897:47900 Coccinelle.dickson Make eq_A defax
R47905:47906 Coccinelle.dickson <> tb var
R47902:47903 Coccinelle.dickson <> ta var
R47966:47969 Coccinelle.dickson Make eq_A defax
R48019:48028 Coq.Init.Logic <> refl_equal syndef
R48019:48028 Coq.Init.Logic <> refl_equal syndef
R48040:48064 Coccinelle.list_permut <> permut_list_forall_exists thm
R48073:48078 Coccinelle.dickson <> Make.Mult.R_bool var
R48066:48071 Coccinelle.dickson <> Make.Mult.R_bool var
R48040:48064 Coccinelle.list_permut <> permut_list_forall_exists thm
R48073:48078 Coccinelle.dickson <> Make.Mult.R_bool var
R48066:48071 Coccinelle.dickson <> Make.Mult.R_bool var
R48040:48064 Coccinelle.list_permut <> permut_list_forall_exists thm
R48073:48078 Coccinelle.dickson <> Make.Mult.R_bool var
R48066:48071 Coccinelle.dickson <> Make.Mult.R_bool var
R48197:48211 Coccinelle.more_list <> list_forall_app thm
R48222:48239 Coq.Bool.Bool <> andb_true_iff thm
R48197:48211 Coccinelle.more_list <> list_forall_app thm
R48197:48211 Coccinelle.more_list <> list_forall_app thm
R48222:48239 Coq.Bool.Bool <> andb_true_iff thm
R48222:48239 Coq.Bool.Bool <> andb_true_iff thm
R48281:48289 Coq.Init.Logic <> or_introl constr
R48294:48303 Coq.Init.Logic <> refl_equal syndef
R48281:48289 Coq.Init.Logic <> or_introl constr
R48294:48303 Coq.Init.Logic <> refl_equal syndef
R48406:48414 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48428:48433 Coccinelle.dickson <> Make.Mult.R_bool var
R48406:48414 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48428:48433 Coccinelle.dickson <> Make.Mult.R_bool var
R48541:48549 Coq.Init.Logic <> False_rec scheme
R48597:48606 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48612:48619 Coccinelle.dickson Make eq_proof defax
R48541:48549 Coq.Init.Logic <> False_rec scheme
R48597:48606 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48612:48619 Coccinelle.dickson Make eq_proof defax
R48632:48647 Coccinelle.more_list <> list_forall_impl thm
R48974:48980 Coccinelle.dickson Make appendn def
R48767:48767 Coccinelle.dickson Make A defax
R48773:48780 Coq.Bool.Bool <> ifb def
R48879:48889 Coccinelle.more_list <> list_exists def
R48921:48925 Coccinelle.dickson Make consn def
R48901:48901 Coccinelle.dickson Make A defax
R48906:48911 Coccinelle.dickson <> Make.Mult.R_bool var
R48916:48917 Coccinelle.dickson <> t2 var
R48913:48914 Coccinelle.dickson <> t1 var
R48796:48799 Coq.Init.Datatypes <> true constr
R48783:48788 Coccinelle.dickson <> Make.Mult.R_bool var
R48790:48791 Coccinelle.dickson <> t1 var
R48659:48659 Coccinelle.dickson Make A defax
R48664:48674 Coccinelle.more_list <> list_exists def
R48706:48710 Coccinelle.dickson Make consn def
R48686:48686 Coccinelle.dickson Make A defax
R48691:48696 Coccinelle.dickson <> Make.Mult.R_bool var
R48701:48702 Coccinelle.dickson <> t2 var
R48698:48699 Coccinelle.dickson <> t1 var
R48632:48647 Coccinelle.more_list <> list_forall_impl thm
R48974:48980 Coccinelle.dickson Make appendn def
R48767:48767 Coccinelle.dickson Make A defax
R48773:48780 Coq.Bool.Bool <> ifb def
R48879:48889 Coccinelle.more_list <> list_exists def
R48921:48925 Coccinelle.dickson Make consn def
R48901:48901 Coccinelle.dickson Make A defax
R48906:48911 Coccinelle.dickson <> Make.Mult.R_bool var
R48916:48917 Coccinelle.dickson <> t2 var
R48913:48914 Coccinelle.dickson <> t1 var
R48796:48799 Coq.Init.Datatypes <> true constr
R48783:48788 Coccinelle.dickson <> Make.Mult.R_bool var
R48790:48791 Coccinelle.dickson <> t1 var
R48659:48659 Coccinelle.dickson Make A defax
R48664:48674 Coccinelle.more_list <> list_exists def
R48706:48710 Coccinelle.dickson Make consn def
R48686:48686 Coccinelle.dickson Make A defax
R48691:48696 Coccinelle.dickson <> Make.Mult.R_bool var
R48701:48702 Coccinelle.dickson <> t2 var
R48698:48699 Coccinelle.dickson <> t1 var
R48632:48647 Coccinelle.more_list <> list_forall_impl thm
R48974:48980 Coccinelle.dickson Make appendn def
R48767:48767 Coccinelle.dickson Make A defax
R48773:48780 Coq.Bool.Bool <> ifb def
R48879:48889 Coccinelle.more_list <> list_exists def
R48921:48925 Coccinelle.dickson Make consn def
R48901:48901 Coccinelle.dickson Make A defax
R48906:48911 Coccinelle.dickson <> Make.Mult.R_bool var
R48916:48917 Coccinelle.dickson <> t2 var
R48913:48914 Coccinelle.dickson <> t1 var
R48796:48799 Coq.Init.Datatypes <> true constr
R48783:48788 Coccinelle.dickson <> Make.Mult.R_bool var
R48790:48791 Coccinelle.dickson <> t1 var
R48659:48659 Coccinelle.dickson Make A defax
R48664:48674 Coccinelle.more_list <> list_exists def
R48706:48710 Coccinelle.dickson Make consn def
R48686:48686 Coccinelle.dickson Make A defax
R48691:48696 Coccinelle.dickson <> Make.Mult.R_bool var
R48701:48702 Coccinelle.dickson <> t2 var
R48698:48699 Coccinelle.dickson <> t1 var
R48632:48647 Coccinelle.more_list <> list_forall_impl thm
R48974:48980 Coccinelle.dickson Make appendn def
R48767:48767 Coccinelle.dickson Make A defax
R48773:48780 Coq.Bool.Bool <> ifb def
R48879:48889 Coccinelle.more_list <> list_exists def
R48921:48925 Coccinelle.dickson Make consn def
R48901:48901 Coccinelle.dickson Make A defax
R48906:48911 Coccinelle.dickson <> Make.Mult.R_bool var
R48916:48917 Coccinelle.dickson <> t2 var
R48913:48914 Coccinelle.dickson <> t1 var
R48796:48799 Coq.Init.Datatypes <> true constr
R48783:48788 Coccinelle.dickson <> Make.Mult.R_bool var
R48790:48791 Coccinelle.dickson <> t1 var
R48659:48659 Coccinelle.dickson Make A defax
R48664:48674 Coccinelle.more_list <> list_exists def
R48706:48710 Coccinelle.dickson Make consn def
R48686:48686 Coccinelle.dickson Make A defax
R48691:48696 Coccinelle.dickson <> Make.Mult.R_bool var
R48701:48702 Coccinelle.dickson <> t2 var
R48698:48699 Coccinelle.dickson <> t1 var
R48632:48647 Coccinelle.more_list <> list_forall_impl thm
R48974:48980 Coccinelle.dickson Make appendn def
R48767:48767 Coccinelle.dickson Make A defax
R48773:48780 Coq.Bool.Bool <> ifb def
R48879:48889 Coccinelle.more_list <> list_exists def
R48921:48925 Coccinelle.dickson Make consn def
R48901:48901 Coccinelle.dickson Make A defax
R48906:48911 Coccinelle.dickson <> Make.Mult.R_bool var
R48916:48917 Coccinelle.dickson <> t2 var
R48913:48914 Coccinelle.dickson <> t1 var
R48796:48799 Coq.Init.Datatypes <> true constr
R48783:48788 Coccinelle.dickson <> Make.Mult.R_bool var
R48790:48791 Coccinelle.dickson <> t1 var
R48659:48659 Coccinelle.dickson Make A defax
R48664:48674 Coccinelle.more_list <> list_exists def
R48706:48710 Coccinelle.dickson Make consn def
R48686:48686 Coccinelle.dickson Make A defax
R48691:48696 Coccinelle.dickson <> Make.Mult.R_bool var
R48701:48702 Coccinelle.dickson <> t2 var
R48698:48699 Coccinelle.dickson <> t1 var
R48994:49003 Coq.Init.Logic <> refl_equal syndef
R48994:49003 Coq.Init.Logic <> refl_equal syndef
R49033:49038 Coccinelle.dickson <> Make.Mult.R_bool var
R49060:49069 Coq.Init.Logic <> refl_equal syndef
R49033:49038 Coccinelle.dickson <> Make.Mult.R_bool var
R49060:49069 Coq.Init.Logic <> refl_equal syndef
prf 49170:49180 Make mult_irrefl
R49199:49202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49203:49203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49221:49225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49278:49281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49282:49286 Coq.Init.Logic <> False ind
R49236:49245 Coccinelle.TransClosure <> trans_clos ind
R49277:49277 Coccinelle.dickson <> l var
R49275:49275 Coccinelle.dickson <> l var
R49248:49270 Coccinelle.dickson Make multiset_extension_step ind
R49272:49272 Coccinelle.dickson <> Make.Mult.R var
R49214:49215 Coq.Init.Logic <> ::type_scope:'~'_x not
R49216:49216 Coccinelle.dickson <> Make.Mult.R var
R49220:49220 Coccinelle.dickson <> a var
R49218:49218 Coccinelle.dickson <> a var
R49185:49194 Coq.Relations.Relation_Definitions <> transitive def
R49198:49198 Coccinelle.dickson <> Make.Mult.R var
R49339:49349 Coq.Lists.List <> app_nil_end thm
R49339:49349 Coq.Lists.List <> app_nil_end thm
R49339:49349 Coq.Lists.List <> app_nil_end thm
R49387:49440 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49463:49465 Coq.Init.Datatypes <> nil constr
R49459:49461 Coq.Init.Datatypes <> nil constr
R49387:49440 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49463:49465 Coq.Init.Datatypes <> nil constr
R49459:49461 Coq.Init.Datatypes <> nil constr
R49564:49567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49576:49579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49580:49584 Coq.Init.Logic <> False ind
R49570:49572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49568:49569 Coccinelle.dickson <> l2 var
R49573:49575 Coq.Init.Datatypes <> nil constr
R49520:49529 Coccinelle.TransClosure <> trans_clos ind
R49562:49563 Coccinelle.dickson <> l2 var
R49559:49560 Coccinelle.dickson <> l1 var
R49532:49554 Coccinelle.dickson Make multiset_extension_step ind
R49556:49556 Coccinelle.dickson <> Make.Mult.R var
R49564:49567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49576:49579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49580:49584 Coq.Init.Logic <> False ind
R49570:49572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49568:49569 Coccinelle.dickson <> l2 var
R49573:49575 Coq.Init.Datatypes <> nil constr
R49520:49529 Coccinelle.TransClosure <> trans_clos ind
R49562:49563 Coccinelle.dickson <> l2 var
R49559:49560 Coccinelle.dickson <> l1 var
R49532:49554 Coccinelle.dickson Make multiset_extension_step ind
R49556:49556 Coccinelle.dickson <> Make.Mult.R var
R49726:49738 Coccinelle.list_permut <> permut_length thm
R49726:49738 Coccinelle.list_permut <> permut_length thm
R49784:49793 Coq.Init.Logic <> refl_equal syndef
R49784:49793 Coq.Init.Logic <> refl_equal syndef
R49828:49837 Coq.Init.Logic <> refl_equal syndef
R49828:49837 Coq.Init.Logic <> refl_equal syndef
prf 49852:49875 Make mult_is_complete_greater
R49894:49897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49898:49898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49916:49923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49982:49985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49996:49998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49986:49989 Coccinelle.dickson Make mult def
R49994:49995 Coccinelle.dickson <> l2 var
R49991:49992 Coccinelle.dickson <> l1 var
R49999:50010 Coccinelle.ordered_set <> Greater_than constr
R49938:49947 Coccinelle.TransClosure <> trans_clos ind
R49980:49981 Coccinelle.dickson <> l1 var
R49977:49978 Coccinelle.dickson <> l2 var
R49950:49972 Coccinelle.dickson Make multiset_extension_step ind
R49974:49974 Coccinelle.dickson <> Make.Mult.R var
R49909:49910 Coq.Init.Logic <> ::type_scope:'~'_x not
R49911:49911 Coccinelle.dickson <> Make.Mult.R var
R49915:49915 Coccinelle.dickson <> a var
R49913:49913 Coccinelle.dickson <> a var
R49880:49889 Coq.Relations.Relation_Definitions <> transitive def
R49893:49893 Coccinelle.dickson <> Make.Mult.R var
R50072:50092 Coccinelle.dickson Make remove_equiv_is_sound defax
R50109:50112 Coccinelle.dickson Make mult def
R50122:50122 Coccinelle.dickson Make A defax
R50139:50150 Coccinelle.more_list <> remove_equiv def
R50152:50158 Coccinelle.dickson Make eq_bool defax
R50072:50092 Coccinelle.dickson Make remove_equiv_is_sound defax
R50139:50150 Coccinelle.more_list <> remove_equiv def
R50152:50158 Coccinelle.dickson Make eq_bool defax
R50231:50240 Coccinelle.TransClosure <> trans_clos ind
R50282:50285 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50272:50275 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50243:50265 Coccinelle.dickson Make multiset_extension_step ind
R50267:50267 Coccinelle.dickson <> Make.Mult.R var
R50231:50240 Coccinelle.TransClosure <> trans_clos ind
R50282:50285 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50272:50275 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50243:50265 Coccinelle.dickson Make multiset_extension_step ind
R50267:50267 Coccinelle.dickson <> Make.Mult.R var
R50298:50345 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50298:50345 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50384:50431 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50384:50431 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50472:50499 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50472:50499 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50555:50555 Coccinelle.dickson Make A defax
R50652:50661 Coq.Init.Logic <> refl_equal syndef
R50652:50661 Coq.Init.Logic <> refl_equal syndef
R50703:50712 Coq.Init.Logic <> refl_equal syndef
R50703:50712 Coq.Init.Logic <> refl_equal syndef
R50731:50739 Coq.Init.Logic <> False_rec scheme
R50731:50739 Coq.Init.Logic <> False_rec scheme
R50749:50759 Coccinelle.dickson Make mult_irrefl thm
R50749:50759 Coccinelle.dickson Make mult_irrefl thm
prf 50794:50819 Make mult_is_complete_less_than
R50838:50841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50842:50842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50860:50867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50926:50929 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50940:50942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50930:50933 Coccinelle.dickson Make mult def
R50938:50939 Coccinelle.dickson <> l2 var
R50935:50936 Coccinelle.dickson <> l1 var
R50943:50951 Coccinelle.ordered_set <> Less_than constr
R50882:50891 Coccinelle.TransClosure <> trans_clos ind
R50924:50925 Coccinelle.dickson <> l2 var
R50921:50922 Coccinelle.dickson <> l1 var
R50894:50916 Coccinelle.dickson Make multiset_extension_step ind
R50918:50918 Coccinelle.dickson <> Make.Mult.R var
R50853:50854 Coq.Init.Logic <> ::type_scope:'~'_x not
R50855:50855 Coccinelle.dickson <> Make.Mult.R var
R50859:50859 Coccinelle.dickson <> a var
R50857:50857 Coccinelle.dickson <> a var
R50824:50833 Coq.Relations.Relation_Definitions <> transitive def
R50837:50837 Coccinelle.dickson <> Make.Mult.R var
R51013:51028 Coccinelle.dickson Make multiset_closure thm
R51013:51028 Coccinelle.dickson Make multiset_closure thm
R51174:51179 Coccinelle.dickson Make permut syndef
R51187:51190 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51191:51197 Coccinelle.dickson Make appendn def
R51174:51179 Coccinelle.dickson Make permut syndef
R51187:51190 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51191:51197 Coccinelle.dickson Make appendn def
R51240:51243 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51230:51236 Coccinelle.dickson Make appendn def
R51211:51222 Coccinelle.dickson Make permut_trans defax
R51240:51243 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51230:51236 Coccinelle.dickson Make appendn def
R51211:51222 Coccinelle.dickson Make permut_trans defax
R51267:51278 Coccinelle.list_permut <> permut_swapp thm
R51287:51297 Coccinelle.dickson Make permut_refl defax
R51267:51278 Coccinelle.list_permut <> permut_swapp thm
R51287:51297 Coccinelle.dickson Make permut_refl defax
R51287:51297 Coccinelle.dickson Make permut_refl defax
R51313:51318 Coccinelle.dickson Make permut syndef
R51326:51329 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51330:51334 Coccinelle.dickson Make consn def
R51313:51318 Coccinelle.dickson Make permut syndef
R51326:51329 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51330:51334 Coccinelle.dickson Make consn def
R51375:51378 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51367:51371 Coccinelle.dickson Make consn def
R51348:51359 Coccinelle.dickson Make permut_trans defax
R51375:51378 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51367:51371 Coccinelle.dickson Make consn def
R51348:51359 Coccinelle.dickson Make permut_trans defax
R51402:51413 Coccinelle.list_permut <> permut_swapp thm
R51422:51432 Coccinelle.dickson Make permut_refl defax
R51402:51413 Coccinelle.list_permut <> permut_swapp thm
R51422:51432 Coccinelle.dickson Make permut_refl defax
R51422:51432 Coccinelle.dickson Make permut_refl defax
R51469:51469 Coccinelle.dickson Make A defax
R51495:51498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51520:51523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51524:51528 Coq.Init.Logic <> False ind
R51499:51501 Coccinelle.more_list <> mem def
R51511:51515 Coccinelle.dickson Make consn def
R51508:51508 Coccinelle.dickson <> x var
R51503:51506 Coccinelle.dickson Make eq_A defax
R51472:51474 Coccinelle.more_list <> mem def
R51484:51490 Coccinelle.dickson Make appendn def
R51481:51481 Coccinelle.dickson <> x var
R51476:51479 Coccinelle.dickson Make eq_A defax
R51469:51469 Coccinelle.dickson Make A defax
R51495:51498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51520:51523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51524:51528 Coq.Init.Logic <> False ind
R51499:51501 Coccinelle.more_list <> mem def
R51511:51515 Coccinelle.dickson Make consn def
R51508:51508 Coccinelle.dickson <> x var
R51503:51506 Coccinelle.dickson Make eq_A defax
R51472:51474 Coccinelle.more_list <> mem def
R51484:51490 Coccinelle.dickson Make appendn def
R51481:51481 Coccinelle.dickson <> x var
R51476:51479 Coccinelle.dickson Make eq_A defax
R51608:51631 Coccinelle.dickson Make remove_equiv_is_complete defax
R51660:51672 Coccinelle.dickson Make mult_is_sound thm
R51608:51631 Coccinelle.dickson Make remove_equiv_is_complete defax
R51660:51672 Coccinelle.dickson Make mult_is_sound thm
R51689:51692 Coccinelle.dickson Make mult def
R51702:51702 Coccinelle.dickson Make A defax
R51717:51728 Coccinelle.more_list <> remove_equiv def
R51736:51742 Coccinelle.dickson Make eq_bool defax
R51730:51734 Coccinelle.dickson DS1 A defax
R51717:51728 Coccinelle.more_list <> remove_equiv def
R51736:51742 Coccinelle.dickson Make eq_bool defax
R51730:51734 Coccinelle.dickson DS1 A defax
R51800:51827 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51800:51827 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51864:51864 Coccinelle.dickson Make A defax
R51984:51992 Coq.Init.Logic <> False_rec scheme
R52020:52029 Coq.Init.Logic <> refl_equal syndef
R51984:51992 Coq.Init.Logic <> False_rec scheme
R52020:52029 Coq.Init.Logic <> refl_equal syndef
R52065:52073 Coq.Init.Logic <> False_rec scheme
R52065:52073 Coq.Init.Logic <> False_rec scheme
R52089:52101 Coccinelle.list_permut <> permut_length thm
R52089:52101 Coccinelle.list_permut <> permut_length thm
R52137:52146 Coq.Init.Logic <> refl_equal syndef
R52137:52146 Coq.Init.Logic <> refl_equal syndef
R52199:52209 Coccinelle.more_list <> list_forall def
R52221:52225 Coccinelle.dickson DS1 A defax
R52230:52240 Coccinelle.more_list <> list_exists def
R52278:52281 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R52252:52256 Coccinelle.dickson DS1 A defax
R52261:52266 Coccinelle.dickson <> Make.Mult.R_bool var
R52271:52272 Coccinelle.dickson <> t1 var
R52268:52269 Coccinelle.dickson <> t2 var
R52199:52209 Coccinelle.more_list <> list_forall def
R52221:52225 Coccinelle.dickson DS1 A defax
R52230:52240 Coccinelle.more_list <> list_exists def
R52278:52281 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R52252:52256 Coccinelle.dickson DS1 A defax
R52261:52266 Coccinelle.dickson <> Make.Mult.R_bool var
R52271:52272 Coccinelle.dickson <> t1 var
R52268:52269 Coccinelle.dickson <> t2 var
R52314:52322 Coq.Init.Logic <> False_rec scheme
R52314:52322 Coq.Init.Logic <> False_rec scheme
R52333:52343 Coccinelle.dickson Make mult_irrefl thm
R52333:52343 Coccinelle.dickson Make mult_irrefl thm
R52373:52391 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52373:52391 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52428:52437 Coq.Init.Logic <> refl_equal syndef
R52428:52437 Coq.Init.Logic <> refl_equal syndef
R52503:52516 Coccinelle.dickson Make mem_permut_mem defax
R52503:52516 Coccinelle.dickson Make mem_permut_mem defax
R52503:52516 Coccinelle.dickson Make mem_permut_mem defax
R52550:52563 Coccinelle.dickson Make mem_permut_mem defax
R52550:52563 Coccinelle.dickson Make mem_permut_mem defax
R52550:52563 Coccinelle.dickson Make mem_permut_mem defax
R52591:52638 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52591:52638 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52676:52679 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52655:52666 Coccinelle.dickson Make permut_trans defax
R52676:52679 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52655:52666 Coccinelle.dickson Make permut_trans defax
R52720:52723 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52710:52716 Coccinelle.dickson Make appendn def
R52691:52702 Coccinelle.dickson Make permut_trans defax
R52720:52723 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52710:52716 Coccinelle.dickson Make appendn def
R52691:52702 Coccinelle.dickson Make permut_trans defax
R52752:52762 Coccinelle.dickson Make permut_app2 defax
R52771:52780 Coccinelle.dickson Make permut_sym defax
R52752:52762 Coccinelle.dickson Make permut_app2 defax
R52752:52762 Coccinelle.dickson Make permut_app2 defax
R52771:52780 Coccinelle.dickson Make permut_sym defax
R52801:52812 Coccinelle.list_permut <> permut_swapp thm
R52821:52831 Coccinelle.dickson Make permut_refl defax
R52801:52812 Coccinelle.list_permut <> permut_swapp thm
R52821:52831 Coccinelle.dickson Make permut_refl defax
R52821:52831 Coccinelle.dickson Make permut_refl defax
R52840:52887 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52840:52887 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52925:52928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52904:52915 Coccinelle.dickson Make permut_trans defax
R52925:52928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52904:52915 Coccinelle.dickson Make permut_trans defax
R52967:52970 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52959:52963 Coccinelle.dickson Make consn def
R52940:52951 Coccinelle.dickson Make permut_trans defax
R52967:52970 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52959:52963 Coccinelle.dickson Make consn def
R52940:52951 Coccinelle.dickson Make permut_trans defax
R52999:53009 Coccinelle.dickson Make permut_app2 defax
R53018:53027 Coccinelle.dickson Make permut_sym defax
R52999:53009 Coccinelle.dickson Make permut_app2 defax
R52999:53009 Coccinelle.dickson Make permut_app2 defax
R53018:53027 Coccinelle.dickson Make permut_sym defax
R53048:53059 Coccinelle.list_permut <> permut_swapp thm
R53068:53078 Coccinelle.dickson Make permut_refl defax
R53048:53059 Coccinelle.list_permut <> permut_swapp thm
R53068:53078 Coccinelle.dickson Make permut_refl defax
R53068:53078 Coccinelle.dickson Make permut_refl defax
prf 53109:53124 Make mult_is_complete
R53144:53147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53148:53148 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53166:53171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53194:53197 Coccinelle.dickson Make mult def
R53202:53203 Coccinelle.dickson <> l2 var
R53199:53200 Coccinelle.dickson <> l1 var
R53214:53225 Coccinelle.ordered_set <> Uncomparable constr
R53244:53285 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53230:53231 Coq.Init.Logic <> ::type_scope:'~'_x not
R53232:53237 Coccinelle.dickson Make permut syndef
R53242:53243 Coccinelle.dickson <> l2 var
R53239:53240 Coccinelle.dickson <> l1 var
R53331:53373 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53286:53286 Coq.Init.Logic <> ::type_scope:'~'_x not
R53287:53296 Coccinelle.TransClosure <> trans_clos ind
R53329:53330 Coccinelle.dickson <> l2 var
R53326:53327 Coccinelle.dickson <> l1 var
R53299:53321 Coccinelle.dickson Make multiset_extension_step ind
R53323:53323 Coccinelle.dickson <> Make.Mult.R var
R53374:53374 Coq.Init.Logic <> ::type_scope:'~'_x not
R53375:53384 Coccinelle.TransClosure <> trans_clos ind
R53417:53418 Coccinelle.dickson <> l1 var
R53414:53415 Coccinelle.dickson <> l2 var
R53387:53409 Coccinelle.dickson Make multiset_extension_step ind
R53411:53411 Coccinelle.dickson <> Make.Mult.R var
R53429:53432 Coq.Init.Logic <> True ind
R53159:53160 Coq.Init.Logic <> ::type_scope:'~'_x not
R53161:53161 Coccinelle.dickson <> Make.Mult.R var
R53165:53165 Coccinelle.dickson <> a var
R53163:53163 Coccinelle.dickson <> a var
R53130:53139 Coq.Relations.Relation_Definitions <> transitive def
R53143:53143 Coccinelle.dickson <> Make.Mult.R var
R53491:53503 Coccinelle.dickson Make mult_is_sound thm
R53514:53535 Coccinelle.dickson Make mult_is_complete_equiv thm
R53567:53590 Coccinelle.dickson Make mult_is_complete_greater thm
R53618:53643 Coccinelle.dickson Make mult_is_complete_less_than thm
R53491:53503 Coccinelle.dickson Make mult_is_sound thm
R53514:53535 Coccinelle.dickson Make mult_is_complete_equiv thm
R53567:53590 Coccinelle.dickson Make mult_is_complete_greater thm
R53618:53643 Coccinelle.dickson Make mult_is_complete_less_than thm
R53676:53679 Coccinelle.dickson Make mult def
R53676:53679 Coccinelle.dickson Make mult def
R53849:53852 Coccinelle.dickson Make.Mult <> sec
R53860:53863 Coccinelle.dickson Make <> mod
R53884:53887 Coccinelle.dickson Make <> modtype
R53890:53904 Coccinelle.ordered_set Nat <> modtype
mod 53874:53879 <> NatMul
