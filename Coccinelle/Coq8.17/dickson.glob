DIGEST 53e3c03576c9b686c6223034f2f1d0e4
FCoccinelle.dickson
R905:910 Coq.Setoids.Setoid <> <> lib
R928:936 Coq.Relations.Relations <> <> lib
R954:957 Coq.Lists.List <> <> lib
R975:983 Coccinelle.more_list <> <> lib
R1001:1008 Coq.Sets.Multiset <> <> lib
R1026:1036 Coccinelle.list_permut <> <> lib
R1054:1064 Coccinelle.ordered_set <> <> lib
R1082:1086 Coq.Arith.Arith <> <> lib
R1104:1110 Coccinelle.closure <> <> lib
R1128:1133 Coq.funind.FunInd <> <> lib
R1179:1181 Coq.Init.Logic <> ::type_scope:x_'='_x not
modtype 1256:1256 <> D
R1289:1303 Coccinelle.decidable_set S <> mod
mod 1284:1285 <> D.DS
R1335:1347 Coccinelle.list_permut S <> mod
R1374:1377 Coccinelle.dickson D A defax
R1476:1477 Coq.Init.Logic <> eq ind
R1479:1482 Coccinelle.dickson D A defax
mod 1330:1331 <> D.LP
ind 1559:1581 D multiset_extension_step
constr 1634:1641 D rmv_case
R1588:1595 Coq.Relations.Relation_Definitions <> relation def
R1597:1597 Coccinelle.dickson D A defax
binder 1584:1584 <> R:1
R1608:1611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1602:1605 Coq.Init.Datatypes <> list ind
R1607:1607 Coccinelle.dickson D A defax
R1618:1621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1612:1615 Coq.Init.Datatypes <> list ind
R1617:1617 Coccinelle.dickson D A defax
binder 1658:1659 <> l1:4
binder 1661:1662 <> l2:5
binder 1664:1664 <> l:6
binder 1666:1667 <> la:7
binder 1669:1669 <> a:8
R1672:1672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1709:1720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 1680:1680 <> b:9
R1700:1703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1683:1685 Coccinelle.more_list <> mem def
R1698:1699 Coccinelle.dickson <> la:7 var
R1696:1696 Coccinelle.dickson <> b:9 var
R1687:1694 Coccinelle.dickson D eq_A defax
R1704:1704 Coccinelle.dickson <> R:1 var
R1706:1706 Coccinelle.dickson <> b:9 var
R1708:1708 Coccinelle.dickson <> a:8 var
R1740:1743 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1721:1726 Coccinelle.dickson D permut abbrev
R1734:1737 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1732:1733 Coccinelle.dickson <> la:7 var
R1738:1738 Coccinelle.dickson <> l:6 var
R1728:1729 Coccinelle.dickson <> l1:4 var
R1762:1771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1744:1749 Coccinelle.dickson D permut abbrev
R1756:1759 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1755:1755 Coccinelle.dickson <> a:8 var
R1760:1760 Coccinelle.dickson <> l:6 var
R1751:1752 Coccinelle.dickson <> l2:5 var
R1772:1794 Coccinelle.dickson <> multiset_extension_step:2 ind
R1801:1802 Coccinelle.dickson <> l2:5 var
R1798:1799 Coccinelle.dickson <> l1:4 var
R1796:1796 Coccinelle.dickson <> R:1 var
ax 1881:1917 D list_permut_multiset_extension_step_1
binder 1930:1930 <> R:10
binder 1932:1933 <> l1:11
binder 1935:1936 <> l2:12
binder 1938:1938 <> l:13
R1953:1959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1941:1946 Coccinelle.dickson D permut abbrev
R1951:1952 Coccinelle.dickson <> l2:12 var
R1948:1949 Coccinelle.dickson <> l1:11 var
R1990:1993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1960:1982 Coccinelle.dickson D multiset_extension_step ind
R1989:1989 Coccinelle.dickson <> l:13 var
R1986:1987 Coccinelle.dickson <> l1:11 var
R1984:1984 Coccinelle.dickson <> R:10 var
R1994:2016 Coccinelle.dickson D multiset_extension_step ind
R2023:2023 Coccinelle.dickson <> l:13 var
R2020:2021 Coccinelle.dickson <> l2:12 var
R2018:2018 Coccinelle.dickson <> R:10 var
ax 2037:2073 D list_permut_multiset_extension_step_2
binder 2086:2086 <> R:15
binder 2088:2089 <> l1:16
binder 2091:2092 <> l2:17
binder 2094:2094 <> l:18
R2109:2115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2097:2102 Coccinelle.dickson D permut abbrev
R2107:2108 Coccinelle.dickson <> l2:17 var
R2104:2105 Coccinelle.dickson <> l1:16 var
R2146:2149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2116:2138 Coccinelle.dickson D multiset_extension_step ind
R2144:2145 Coccinelle.dickson <> l1:16 var
R2142:2142 Coccinelle.dickson <> l:18 var
R2140:2140 Coccinelle.dickson <> R:15 var
R2150:2172 Coccinelle.dickson D multiset_extension_step ind
R2178:2179 Coccinelle.dickson <> l2:17 var
R2176:2176 Coccinelle.dickson <> l:18 var
R2174:2174 Coccinelle.dickson <> R:15 var
R2212:2219 Coq.Relations.Relation_Definitions <> relation def
R2221:2221 Coccinelle.dickson D A defax
binder 2208:2208 <> R:20
R2278:2282 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R2272:2277 Coccinelle.dickson D permut abbrev
R2289:2293 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R2283:2288 Coccinelle.dickson D permut abbrev
R2294:2296 Coq.Init.Logic <> iff def
R2227:2249 Coccinelle.dickson D multiset_extension_step ind
R2251:2251 Coccinelle.dickson <> R:20 var
ax 2370:2384 D list_permut_acc
binder 2397:2397 <> R:21
binder 2399:2400 <> l1:22
binder 2402:2403 <> l2:23
R2418:2424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2406:2411 Coccinelle.dickson D permut abbrev
R2416:2417 Coccinelle.dickson <> l1:22 var
R2413:2414 Coccinelle.dickson <> l2:23 var
R2459:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2425:2427 Coq.Init.Wf <> Acc ind
R2457:2458 Coccinelle.dickson <> l1:22 var
R2430:2452 Coccinelle.dickson D multiset_extension_step ind
R2454:2454 Coccinelle.dickson <> R:21 var
R2463:2465 Coq.Init.Wf <> Acc ind
R2495:2496 Coccinelle.dickson <> l2:23 var
R2468:2490 Coccinelle.dickson D multiset_extension_step ind
R2492:2492 Coccinelle.dickson <> R:21 var
ax 2529:2535 D dickson
binder 2549:2549 <> R:25
R2566:2569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2552:2563 Coq.Init.Wf <> well_founded def
R2565:2565 Coccinelle.dickson <> R:25 var
R2570:2581 Coq.Init.Wf <> well_founded def
R2584:2606 Coccinelle.dickson D multiset_extension_step ind
R2608:2608 Coccinelle.dickson <> R:25 var
ax 2623:2636 D dickson_strong
binder 2650:2650 <> R:27
binder 2652:2652 <> l:28
R2655:2655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2683:2687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2663:2663 <> a:29
R2672:2675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2666:2667 Coq.Lists.List <> In def
R2671:2671 Coccinelle.dickson <> l:28 var
R2669:2669 Coccinelle.dickson <> a:29 var
R2676:2678 Coq.Init.Wf <> Acc ind
R2682:2682 Coccinelle.dickson <> a:29 var
R2680:2680 Coccinelle.dickson <> R:27 var
R2688:2690 Coq.Init.Wf <> Acc ind
R2720:2720 Coccinelle.dickson <> l:28 var
R2693:2715 Coccinelle.dickson D multiset_extension_step ind
R2717:2717 Coccinelle.dickson <> R:27 var
ax 2734:2780 D context_trans_clos_multiset_extension_step_app1
binder 2793:2793 <> R:31
binder 2795:2796 <> l1:32
binder 2798:2799 <> l2:33
binder 2801:2801 <> l:34
R2848:2876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2804:2813 Coccinelle.TransClosure <> trans_clos ind
R2846:2847 Coccinelle.dickson <> l2:33 var
R2843:2844 Coccinelle.dickson <> l1:32 var
R2816:2838 Coccinelle.dickson D multiset_extension_step ind
R2840:2840 Coccinelle.dickson <> R:31 var
R2877:2886 Coccinelle.TransClosure <> trans_clos ind
R2928:2931 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2927:2927 Coccinelle.dickson <> l:34 var
R2932:2933 Coccinelle.dickson <> l2:33 var
R2918:2921 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2917:2917 Coccinelle.dickson <> l:34 var
R2922:2923 Coccinelle.dickson <> l1:32 var
R2889:2911 Coccinelle.dickson D multiset_extension_step ind
R2913:2913 Coccinelle.dickson <> R:31 var
R2959:2962 Coq.Init.Datatypes <> list ind
R2966:2968 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2965:2965 Coccinelle.dickson D A defax
R2969:2972 Coq.Init.Datatypes <> list ind
R2974:2974 Coccinelle.dickson D A defax
binder 2954:2955 <> ll:36
R2980:2983 Coq.Init.Datatypes <> list ind
R2985:2985 Coccinelle.dickson D A defax
R2998:2999 Coccinelle.dickson <> ll:36 var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn:37 def
R3052:3053 Coccinelle.dickson <> ll:36 var
binder 2954:2955 <> ll:39
binder 2954:2955 <> ll:40
binder 2954:2955 <> ll:42
R2998:2999 Coccinelle.dickson <> ll:42 var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn:41 def
R3052:3053 Coccinelle.dickson <> ll:42 var
binder 2954:2955 <> ll:44
R2998:2999 Coccinelle.dickson <> ll:44 var
R3011:3013 Coq.Init.Datatypes <> nil constr
R3018:3020 Coq.Init.Datatypes <> nil constr
R3031:3034 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3026:3026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3028:3028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3030:3030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3042:3045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3054:3054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3046:3050 Coccinelle.dickson <> consn:45 def
R3052:3053 Coccinelle.dickson <> ll:44 var
R3087:3090 Coq.Init.Datatypes <> list ind
R3094:3096 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3093:3093 Coccinelle.dickson D A defax
R3097:3100 Coq.Init.Datatypes <> list ind
R3102:3102 Coccinelle.dickson D A defax
binder 3082:3083 <> ll:57
R3108:3111 Coq.Init.Datatypes <> list ind
R3113:3113 Coccinelle.dickson D A defax
R3126:3127 Coccinelle.dickson <> ll:57 var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn:58 def
R3183:3184 Coccinelle.dickson <> ll:57 var
binder 3082:3083 <> ll:60
binder 3082:3083 <> ll:61
binder 3082:3083 <> ll:63
R3126:3127 Coccinelle.dickson <> ll:63 var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn:62 def
R3183:3184 Coccinelle.dickson <> ll:63 var
binder 3082:3083 <> ll:65
R3126:3127 Coccinelle.dickson <> ll:65 var
R3139:3141 Coq.Init.Datatypes <> nil constr
R3146:3148 Coq.Init.Datatypes <> nil constr
R3159:3162 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3154:3154 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3156:3156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3174 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3185:3185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3175:3181 Coccinelle.dickson <> appendn:66 def
R3183:3184 Coccinelle.dickson <> ll:65 var
ax 3205:3220 D multiset_closure
binder 3233:3233 <> R:78
R3236:3236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3265:3269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 3244:3244 <> x:79
binder 3246:3246 <> y:80
R3249:3249 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3255:3257 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3264:3264 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3250:3250 Coccinelle.dickson <> R:78 var
R3252:3252 Coccinelle.dickson <> x:79 var
R3254:3254 Coccinelle.dickson <> y:80 var
R3258:3258 Coq.Init.Logic <> ::type_scope:'~'_x not
R3259:3259 Coccinelle.dickson <> R:78 var
R3261:3261 Coccinelle.dickson <> x:79 var
R3263:3263 Coccinelle.dickson <> y:80 var
R3284:3289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3270:3279 Coq.Relations.Relation_Definitions <> transitive def
R3283:3283 Coccinelle.dickson <> R:78 var
binder 3297:3297 <> p:81
binder 3299:3299 <> q:82
R3344:3349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3302:3311 Coccinelle.TransClosure <> trans_clos ind
R3343:3343 Coccinelle.dickson <> q:82 var
R3341:3341 Coccinelle.dickson <> p:81 var
R3314:3336 Coccinelle.dickson D multiset_extension_step ind
R3338:3338 Coccinelle.dickson <> R:78 var
R3350:3356 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3358:3359 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3357:3357 <> l:83
R3360:3366 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3369:3372 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3367:3368 <> pq:84
R3401:3406 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3373:3378 Coccinelle.dickson D permut abbrev
R3383:3383 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3393:3397 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3384:3390 Coccinelle.dickson D appendn def
R3392:3392 Coccinelle.dickson <> l:83 var
R3398:3399 Coccinelle.dickson <> pq:84 var
R3380:3380 Coccinelle.dickson <> p:81 var
R3433:3438 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3407:3412 Coccinelle.dickson D permut abbrev
R3417:3417 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3425:3429 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3418:3422 Coccinelle.dickson D consn def
R3424:3424 Coccinelle.dickson <> l:83 var
R3430:3431 Coccinelle.dickson <> pq:84 var
R3414:3414 Coccinelle.dickson <> q:82 var
R3447:3452 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3440:3443 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3439:3439 Coccinelle.dickson <> l:83 var
R3444:3446 Coq.Init.Datatypes <> nil constr
R3453:3453 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3526:3533 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3629:3629 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
binder 3461:3461 <> a:85
binder 3471:3472 <> la:86
R3486:3489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3475:3476 Coq.Lists.List <> In def
R3485:3485 Coccinelle.dickson <> l:83 var
R3478:3478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3480:3480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3483:3483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3479:3479 Coccinelle.dickson <> a:85 var
R3481:3482 Coccinelle.dickson <> la:86 var
binder 3497:3497 <> b:87
R3517:3520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3500:3502 Coccinelle.more_list <> mem def
R3515:3516 Coccinelle.dickson <> la:86 var
R3513:3513 Coccinelle.dickson <> b:87 var
R3504:3511 Coccinelle.dickson D eq_A defax
R3521:3521 Coccinelle.dickson <> R:78 var
R3523:3523 Coccinelle.dickson <> b:87 var
R3525:3525 Coccinelle.dickson <> a:85 var
R3534:3534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3551:3555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 3542:3542 <> a:88
R3545:3545 Coq.Init.Logic <> ::type_scope:'~'_x not
R3546:3546 Coccinelle.dickson <> R:78 var
R3548:3548 Coccinelle.dickson <> a:88 var
R3550:3550 Coccinelle.dickson <> a:88 var
binder 3563:3563 <> a:89
R3590:3593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3566:3568 Coccinelle.more_list <> mem def
R3582:3586 Coccinelle.dickson D consn def
R3588:3588 Coccinelle.dickson <> l:83 var
R3579:3579 Coccinelle.dickson <> a:89 var
R3570:3577 Coccinelle.dickson D eq_A defax
R3620:3623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3594:3596 Coccinelle.more_list <> mem def
R3610:3616 Coccinelle.dickson D appendn def
R3618:3618 Coccinelle.dickson <> l:83 var
R3607:3607 Coccinelle.dickson <> a:89 var
R3598:3605 Coccinelle.dickson D eq_A defax
R3624:3628 Coq.Init.Logic <> False ind
R3637:3637 Coccinelle.dickson D <> modtype
R3660:3674 Coccinelle.decidable_set S <> mod
mod 3648:3651 <> Make
R3699:3719 Coccinelle.decidable_set Convert <> modtype
R3722:3724 Coccinelle.dickson DS1 <> modtype
mod 3693:3694 <> Make.DS
R3748:3763 Coccinelle.list_permut Make <> modtype
R3766:3767 Coccinelle.dickson Make.DS <> modtype
mod 3742:3743 <> Make.LP
ind 3847:3869 Make multiset_extension_step
constr 3922:3929 Make rmv_case
R3876:3883 Coq.Relations.Relation_Definitions <> relation def
R3885:3885 Coccinelle.dickson Make A defax
binder 3872:3872 <> R:91
R3896:3899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3890:3893 Coq.Init.Datatypes <> list ind
R3895:3895 Coccinelle.dickson Make A defax
R3906:3909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3900:3903 Coq.Init.Datatypes <> list ind
R3905:3905 Coccinelle.dickson Make A defax
binder 3946:3947 <> l1:94
binder 3949:3950 <> l2:95
binder 3952:3952 <> l:96
binder 3954:3955 <> la:97
binder 3957:3957 <> a:98
R3960:3960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3997:4008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 3968:3968 <> b:99
R3988:3991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3971:3973 Coccinelle.more_list <> mem def
R3986:3987 Coccinelle.dickson <> la:97 var
R3984:3984 Coccinelle.dickson <> b:99 var
R3975:3982 Coccinelle.dickson Make eq_A defax
R3992:3992 Coccinelle.dickson <> R:91 var
R3994:3994 Coccinelle.dickson <> b:99 var
R3996:3996 Coccinelle.dickson <> a:98 var
R4028:4031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4009:4014 Coccinelle.dickson Make permut abbrev
R4022:4025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R4020:4021 Coccinelle.dickson <> la:97 var
R4026:4026 Coccinelle.dickson <> l:96 var
R4016:4017 Coccinelle.dickson <> l1:94 var
R4050:4059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4032:4037 Coccinelle.dickson Make permut abbrev
R4044:4047 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4043:4043 Coccinelle.dickson <> a:98 var
R4048:4048 Coccinelle.dickson <> l:96 var
R4039:4040 Coccinelle.dickson <> l2:95 var
R4060:4082 Coccinelle.dickson <> multiset_extension_step:92 ind
R4089:4090 Coccinelle.dickson <> l2:95 var
R4086:4087 Coccinelle.dickson <> l1:94 var
R4084:4084 Coccinelle.dickson <> R:91 var
prf 4165:4201 Make list_permut_multiset_extension_step_1
binder 4214:4214 <> R:100
binder 4216:4217 <> l1:101
binder 4219:4220 <> l2:102
binder 4222:4222 <> l:103
R4237:4243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4225:4230 Coccinelle.dickson Make permut abbrev
R4235:4236 Coccinelle.dickson <> l2:102 var
R4232:4233 Coccinelle.dickson <> l1:101 var
R4274:4277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4244:4266 Coccinelle.dickson Make multiset_extension_step ind
R4273:4273 Coccinelle.dickson <> l:103 var
R4270:4271 Coccinelle.dickson <> l1:101 var
R4268:4268 Coccinelle.dickson <> R:100 var
R4278:4300 Coccinelle.dickson Make multiset_extension_step ind
R4307:4307 Coccinelle.dickson <> l:103 var
R4304:4305 Coccinelle.dickson <> l2:102 var
R4302:4302 Coccinelle.dickson <> R:100 var
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4401:4408 Coccinelle.dickson Make rmv_case constr
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4465:4476 Coccinelle.dickson Make permut_trans defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
R4493:4502 Coccinelle.dickson Make permut_sym defax
prf 4541:4577 Make list_permut_multiset_extension_step_2
binder 4590:4590 <> R:104
binder 4592:4593 <> l1:105
binder 4595:4596 <> l2:106
binder 4598:4598 <> l:107
R4613:4619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4601:4606 Coccinelle.dickson Make permut abbrev
R4611:4612 Coccinelle.dickson <> l2:106 var
R4608:4609 Coccinelle.dickson <> l1:105 var
R4650:4653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4620:4642 Coccinelle.dickson Make multiset_extension_step ind
R4648:4649 Coccinelle.dickson <> l1:105 var
R4646:4646 Coccinelle.dickson <> l:107 var
R4644:4644 Coccinelle.dickson <> R:104 var
R4654:4676 Coccinelle.dickson Make multiset_extension_step ind
R4682:4683 Coccinelle.dickson <> l2:106 var
R4680:4680 Coccinelle.dickson <> l:107 var
R4678:4678 Coccinelle.dickson <> R:104 var
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4777:4784 Coccinelle.dickson Make rmv_case constr
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4841:4852 Coccinelle.dickson Make permut_trans defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4869:4878 Coccinelle.dickson Make permut_sym defax
R4944:4951 Coq.Relations.Relation_Definitions <> relation def
R4953:4953 Coccinelle.dickson Make A defax
binder 4940:4940 <> R:108
R5010:5014 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5004:5009 Coccinelle.dickson Make permut abbrev
R5021:5025 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5015:5020 Coccinelle.dickson Make permut abbrev
R5026:5028 Coq.Init.Logic <> iff def
R4959:4981 Coccinelle.dickson Make multiset_extension_step ind
R4983:4983 Coccinelle.dickson <> R:108 var
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5121:5157 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5183:5219 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R5245:5281 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R5304:5340 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 5526:5534 Make two_cases
binder 5546:5546 <> R:109
binder 5548:5548 <> a:110
binder 5550:5550 <> m:111
binder 5552:5552 <> n:112
R5593:5597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5557:5579 Coccinelle.dickson Make multiset_extension_step ind
R5587:5590 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5586:5586 Coccinelle.dickson <> a:110 var
R5591:5591 Coccinelle.dickson <> m:111 var
R5583:5583 Coccinelle.dickson <> n:112 var
R5581:5581 Coccinelle.dickson <> R:109 var
R5598:5598 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5676:5682 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5764:5764 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5599:5605 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5608:5609 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 5606:5607 <> n':113
R5628:5645 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5610:5615 Coccinelle.dickson Make permut abbrev
R5621:5624 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5620:5620 Coccinelle.dickson <> a:110 var
R5625:5626 Coccinelle.dickson <> n':113 var
R5617:5617 Coccinelle.dickson <> n:112 var
R5646:5668 Coccinelle.dickson Make multiset_extension_step ind
R5675:5675 Coccinelle.dickson <> m:111 var
R5672:5673 Coccinelle.dickson <> n':113 var
R5670:5670 Coccinelle.dickson <> R:109 var
R5683:5689 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5691:5692 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 5690:5690 <> k:114
R5693:5693 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5729:5746 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
binder 5701:5701 <> b:115
R5720:5723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5704:5706 Coccinelle.more_list <> mem def
R5719:5719 Coccinelle.dickson <> k:114 var
R5717:5717 Coccinelle.dickson <> b:115 var
R5708:5715 Coccinelle.dickson Make eq_A defax
R5724:5724 Coccinelle.dickson <> R:109 var
R5726:5726 Coccinelle.dickson <> b:115 var
R5728:5728 Coccinelle.dickson <> a:110 var
R5747:5752 Coccinelle.dickson Make permut abbrev
R5758:5761 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5757:5757 Coccinelle.dickson <> k:114 var
R5762:5762 Coccinelle.dickson <> m:111 var
R5754:5754 Coccinelle.dickson <> n:112 var
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5849:5858 Coccinelle.dickson Make eq_bool_ok defax
R5872:5882 Coccinelle.dickson DS1 eq_bool defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5943:5953 Coccinelle.dickson Make permut_cons defax
R5978:5987 Coq.Relations.Relation_Definitions <> equiv_refl proj
R5993:6000 Coccinelle.dickson Make eq_proof defax
R6066:6069 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6066:6069 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6045:6056 Coccinelle.dickson Make permut_trans defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6097:6107 Coccinelle.dickson Make permut_app1 defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6171:6171 Coccinelle.dickson Make A defax
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6135:6149 Coccinelle.dickson Make remove_is_sound defax
R6164:6169 Coccinelle.more_list <> remove def
R6171:6171 Coccinelle.dickson Make A defax
R6173:6179 Coccinelle.dickson Make eq_bool defax
R6210:6213 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6210:6213 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6234:6245 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6281:6284 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6286:6289 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6260:6271 Coccinelle.dickson Make permut_trans defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6303:6307 Coq.Init.Logic <> proj1 thm
R6310:6320 Coccinelle.dickson Make permut_app1 defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6339:6348 Coccinelle.dickson Make permut_sym defax
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6361:6371 Coccinelle.dickson Make permut_cons defax
R6379:6382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6417:6420 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6417:6420 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6397:6408 Coccinelle.dickson Make permut_trans defax
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6431:6440 Coccinelle.dickson Make permut_sym defax
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6455:6472 Coccinelle.dickson Make permut_cons_inside defax
R6498:6501 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6502:6504 Coq.Init.Datatypes <> nil constr
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6531:6540 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6546:6553 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6576:6585 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6591:6598 Coccinelle.dickson Make eq_proof defax
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6608:6617 Coccinelle.dickson Make permut_sym defax
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6632:6649 Coccinelle.dickson Make permut_cons_inside defax
R6674:6677 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6696:6706 Coccinelle.dickson Make permut_refl defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6716:6725 Coq.Relations.Relation_Definitions <> equiv_refl proj
R6731:6738 Coccinelle.dickson Make eq_proof defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6813:6822 Coccinelle.dickson Make permut_sym defax
R6836:6853 Coccinelle.dickson Make permut_cons_inside defax
R6749:6756 Coccinelle.dickson Make rmv_case constr
R6765:6768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6887:6895 Coq.Init.Logic <> False_rec scheme
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6917:6919 Coccinelle.more_list <> mem def
R6934:6937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6921:6928 Coccinelle.dickson Make eq_A defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6952:6965 Coccinelle.dickson Make mem_permut_mem defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R6987:6996 Coq.Relations.Relation_Definitions <> equiv_refl proj
R7002:7009 Coccinelle.dickson Make eq_proof defax
R7092:7097 Coq.Init.Logic <> sym_eq abbrev
R7092:7097 Coq.Init.Logic <> sym_eq abbrev
prf 7178:7192 Make list_permut_acc
binder 7205:7205 <> R:116
binder 7207:7208 <> l1:117
binder 7210:7211 <> l2:118
R7226:7232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7214:7219 Coccinelle.dickson Make permut abbrev
R7224:7225 Coccinelle.dickson <> l1:117 var
R7221:7222 Coccinelle.dickson <> l2:118 var
R7267:7270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7233:7235 Coq.Init.Wf <> Acc ind
R7265:7266 Coccinelle.dickson <> l1:117 var
R7238:7260 Coccinelle.dickson Make multiset_extension_step ind
R7262:7262 Coccinelle.dickson <> R:116 var
R7271:7273 Coq.Init.Wf <> Acc ind
R7303:7304 Coccinelle.dickson <> l2:118 var
R7276:7298 Coccinelle.dickson Make multiset_extension_step ind
R7300:7300 Coccinelle.dickson <> R:116 var
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7343:7351 Coq.Init.Wf <> Acc_intro constr
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R7403:7439 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
prf 7748:7759 Make dickson_aux1
R7775:7782 Coq.Relations.Relation_Definitions <> relation def
R7784:7784 Coccinelle.dickson Make A defax
binder 7771:7771 <> R:119
binder 7787:7787 <> a:120
R7791:7791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7914:7919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 7799:7799 <> b:121
R7807:7813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7802:7802 Coccinelle.dickson <> R:119 var
R7804:7804 Coccinelle.dickson <> b:121 var
R7806:7806 Coccinelle.dickson <> a:120 var
binder 7821:7821 <> m:122
R7857:7873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7824:7826 Coq.Init.Wf <> Acc ind
R7856:7856 Coccinelle.dickson <> m:122 var
R7829:7851 Coccinelle.dickson Make multiset_extension_step ind
R7853:7853 Coccinelle.dickson <> R:119 var
R7874:7876 Coq.Init.Wf <> Acc ind
R7908:7911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7907:7907 Coccinelle.dickson <> b:121 var
R7912:7912 Coccinelle.dickson <> m:122 var
R7879:7901 Coccinelle.dickson Make multiset_extension_step ind
R7903:7903 Coccinelle.dickson <> R:119 var
binder 7927:7927 <> m:123
R7963:7968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7930:7932 Coq.Init.Wf <> Acc ind
R7962:7962 Coccinelle.dickson <> m:123 var
R7935:7957 Coccinelle.dickson Make multiset_extension_step ind
R7959:7959 Coccinelle.dickson <> R:119 var
R7969:7969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8072:8077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 7977:7978 <> m':124
R8013:8030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7982:8004 Coccinelle.dickson Make multiset_extension_step ind
R8006:8006 Coccinelle.dickson <> R:119 var
R8009:8010 Coccinelle.dickson <> m':124 var
R8012:8012 Coccinelle.dickson <> m:123 var
R8031:8033 Coq.Init.Wf <> Acc ind
R8065:8068 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8064:8064 Coccinelle.dickson <> a:120 var
R8069:8070 Coccinelle.dickson <> m':124 var
R8036:8058 Coccinelle.dickson Make multiset_extension_step ind
R8060:8060 Coccinelle.dickson <> R:119 var
R8078:8080 Coq.Init.Wf <> Acc ind
R8112:8115 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8111:8111 Coccinelle.dickson <> a:120 var
R8116:8116 Coccinelle.dickson <> m:123 var
R8083:8105 Coccinelle.dickson Make multiset_extension_step ind
R8107:8107 Coccinelle.dickson <> R:119 var
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8166:8174 Coq.Init.Wf <> Acc_intro constr
R8195:8203 Coccinelle.dickson Make two_cases thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8245:8259 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8315:8329 Coccinelle.dickson Make list_permut_acc thm
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
R8410:8419 Coq.Relations.Relation_Definitions <> equiv_refl proj
R8425:8432 Coccinelle.dickson Make eq_proof defax
prf 8496:8507 Make dickson_aux2
binder 8518:8518 <> R:125
binder 8520:8520 <> m:126
R8558:8563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8525:8527 Coq.Init.Wf <> Acc ind
R8557:8557 Coccinelle.dickson <> m:126 var
R8530:8552 Coccinelle.dickson Make multiset_extension_step ind
R8554:8554 Coccinelle.dickson <> R:125 var
binder 8571:8571 <> a:127
R8574:8574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8719:8726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 8582:8582 <> b:128
R8590:8607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8585:8585 Coccinelle.dickson <> R:125 var
R8587:8587 Coccinelle.dickson <> b:128 var
R8589:8589 Coccinelle.dickson <> a:127 var
binder 8615:8615 <> m:129
R8651:8678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8618:8620 Coq.Init.Wf <> Acc ind
R8650:8650 Coccinelle.dickson <> m:129 var
R8623:8645 Coccinelle.dickson Make multiset_extension_step ind
R8647:8647 Coccinelle.dickson <> R:125 var
R8679:8681 Coq.Init.Wf <> Acc ind
R8713:8716 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8712:8712 Coccinelle.dickson <> b:128 var
R8717:8717 Coccinelle.dickson <> m:129 var
R8684:8706 Coccinelle.dickson Make multiset_extension_step ind
R8708:8708 Coccinelle.dickson <> R:125 var
R8727:8729 Coq.Init.Wf <> Acc ind
R8761:8764 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8760:8760 Coccinelle.dickson <> a:127 var
R8765:8765 Coccinelle.dickson <> m:126 var
R8732:8754 Coccinelle.dickson Make multiset_extension_step ind
R8756:8756 Coccinelle.dickson <> R:125 var
R8810:8817 Coq.Init.Wf <> Acc_iter abbrev
binder 8857:8857 <> m:130
R8895:8899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m:130 var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m:130 var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
R8810:8817 Coq.Init.Wf <> Acc_iter abbrev
binder 8857:8857 <> m:131
R8895:8899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8862:8864 Coq.Init.Wf <> Acc ind
R8894:8894 Coccinelle.dickson <> m:131 var
R8867:8889 Coccinelle.dickson Make multiset_extension_step ind
R8900:8902 Coq.Init.Wf <> Acc ind
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8938:8938 Coccinelle.dickson <> m:131 var
R8905:8927 Coccinelle.dickson Make multiset_extension_step ind
R8825:8847 Coccinelle.dickson Make multiset_extension_step ind
R8992:9003 Coccinelle.dickson Make dickson_aux1 thm
R9047:9053 Coq.Init.Wf <> Acc_inv thm
prf 9088:9099 Make dickson_aux3
binder 9110:9110 <> R:132
binder 9112:9112 <> a:133
R9122:9125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9115:9117 Coq.Init.Wf <> Acc ind
R9121:9121 Coccinelle.dickson <> a:133 var
R9119:9119 Coccinelle.dickson <> R:132 var
binder 9133:9133 <> m:134
R9169:9172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9136:9138 Coq.Init.Wf <> Acc ind
R9168:9168 Coccinelle.dickson <> m:134 var
R9141:9163 Coccinelle.dickson Make multiset_extension_step ind
R9165:9165 Coccinelle.dickson <> R:132 var
R9173:9175 Coq.Init.Wf <> Acc ind
R9207:9210 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9206:9206 Coccinelle.dickson <> a:133 var
R9211:9211 Coccinelle.dickson <> m:134 var
R9178:9200 Coccinelle.dickson Make multiset_extension_step ind
R9202:9202 Coccinelle.dickson <> R:132 var
R9247:9254 Coq.Init.Wf <> Acc_iter abbrev
binder 9270:9270 <> a:135
R9282:9285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a:135 var
binder 9293:9293 <> m:136
R9329:9333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m:136 var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a:135 var
R9372:9372 Coccinelle.dickson <> m:136 var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
R9247:9254 Coq.Init.Wf <> Acc_iter abbrev
binder 9270:9270 <> a:137
R9282:9285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9275:9277 Coq.Init.Wf <> Acc ind
R9281:9281 Coccinelle.dickson <> a:137 var
binder 9293:9293 <> m:138
R9329:9333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9296:9298 Coq.Init.Wf <> Acc ind
R9328:9328 Coccinelle.dickson <> m:138 var
R9301:9323 Coccinelle.dickson Make multiset_extension_step ind
R9334:9336 Coq.Init.Wf <> Acc ind
R9368:9371 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9367:9367 Coccinelle.dickson <> a:137 var
R9372:9372 Coccinelle.dickson <> m:138 var
R9339:9361 Coccinelle.dickson Make multiset_extension_step ind
R9434:9445 Coccinelle.dickson Make dickson_aux2 thm
R9489:9495 Coq.Init.Wf <> Acc_inv thm
prf 9549:9555 Make dickson
binder 9569:9569 <> R:139
R9586:9589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9572:9583 Coq.Init.Wf <> well_founded def
R9585:9585 Coccinelle.dickson <> R:139 var
R9590:9601 Coq.Init.Wf <> well_founded def
R9604:9626 Coccinelle.dickson Make multiset_extension_step ind
R9628:9628 Coccinelle.dickson <> R:139 var
R9661:9672 Coq.Init.Wf <> well_founded def
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9721:9729 Coq.Init.Wf <> Acc_intro constr
R9777:9779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9772:9775 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9780:9782 Coq.Init.Datatypes <> nil constr
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9807:9816 Coccinelle.list_permut <> permut_nil thm
R9824:9827 Coccinelle.dickson Make eq_A defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9838:9847 Coccinelle.dickson Make permut_sym defax
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
R9865:9876 Coccinelle.dickson Make dickson_aux3 thm
prf 9904:9917 Make dickson_strong
binder 9931:9931 <> R:140
binder 9933:9933 <> l:141
R9936:9936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9964:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 9944:9944 <> a:142
R9953:9956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9947:9948 Coq.Lists.List <> In def
R9952:9952 Coccinelle.dickson <> l:141 var
R9950:9950 Coccinelle.dickson <> a:142 var
R9957:9959 Coq.Init.Wf <> Acc ind
R9963:9963 Coccinelle.dickson <> a:142 var
R9961:9961 Coccinelle.dickson <> R:140 var
R9969:9971 Coq.Init.Wf <> Acc ind
R10001:10001 Coccinelle.dickson <> l:141 var
R9974:9996 Coccinelle.dickson Make multiset_extension_step ind
R9998:9998 Coccinelle.dickson <> R:140 var
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10064:10072 Coq.Init.Wf <> Acc_intro constr
R10120:10122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10115:10118 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10123:10125 Coq.Init.Datatypes <> nil constr
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10150:10159 Coccinelle.list_permut <> permut_nil thm
R10167:10170 Coccinelle.dickson Make eq_A defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10181:10190 Coccinelle.dickson Make permut_sym defax
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
R10216:10227 Coccinelle.dickson Make dickson_aux3 thm
prf 10369:10416 Make list_permut_trans_clos_multiset_extension_step_1
binder 10429:10429 <> R:143
binder 10431:10432 <> l1:144
binder 10434:10435 <> l2:145
binder 10437:10437 <> l:146
R10452:10458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10440:10445 Coccinelle.dickson Make permut abbrev
R10450:10451 Coccinelle.dickson <> l2:145 var
R10447:10448 Coccinelle.dickson <> l1:144 var
R10504:10510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10460:10469 Coccinelle.TransClosure <> trans_clos ind
R10472:10494 Coccinelle.dickson Make multiset_extension_step ind
R10496:10496 Coccinelle.dickson <> R:143 var
R10500:10501 Coccinelle.dickson <> l1:144 var
R10503:10503 Coccinelle.dickson <> l:146 var
R10512:10521 Coccinelle.TransClosure <> trans_clos ind
R10524:10546 Coccinelle.dickson Make multiset_extension_step ind
R10548:10548 Coccinelle.dickson <> R:143 var
R10552:10553 Coccinelle.dickson <> l2:145 var
R10555:10555 Coccinelle.dickson <> l:146 var
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10641:10646 Coccinelle.TransClosure <> t_step constr
R10655:10691 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R10717:10723 Coccinelle.TransClosure <> t_trans constr
R10749:10785 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
prf 10817:10864 Make list_permut_trans_clos_multiset_extension_step_2
binder 10877:10877 <> R:147
binder 10879:10880 <> l1:148
binder 10882:10883 <> l2:149
binder 10885:10885 <> l:150
R10900:10906 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10888:10893 Coccinelle.dickson Make permut abbrev
R10898:10899 Coccinelle.dickson <> l2:149 var
R10895:10896 Coccinelle.dickson <> l1:148 var
R10952:10958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10908:10917 Coccinelle.TransClosure <> trans_clos ind
R10920:10942 Coccinelle.dickson Make multiset_extension_step ind
R10944:10944 Coccinelle.dickson <> R:147 var
R10948:10948 Coccinelle.dickson <> l:150 var
R10950:10951 Coccinelle.dickson <> l1:148 var
R10960:10969 Coccinelle.TransClosure <> trans_clos ind
R10972:10994 Coccinelle.dickson Make multiset_extension_step ind
R10996:10996 Coccinelle.dickson <> R:147 var
R11000:11000 Coccinelle.dickson <> l:150 var
R11002:11003 Coccinelle.dickson <> l2:149 var
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11089:11094 Coccinelle.TransClosure <> t_step constr
R11103:11139 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R11165:11171 Coccinelle.TransClosure <> t_trans constr
R11165:11171 Coccinelle.TransClosure <> t_trans constr
prf 11222:11257 Make context_multiset_extension_step_app1
binder 11270:11270 <> R:151
binder 11272:11273 <> l1:152
binder 11275:11276 <> l2:153
binder 11278:11278 <> l:154
R11312:11340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11281:11303 Coccinelle.dickson Make multiset_extension_step ind
R11310:11311 Coccinelle.dickson <> l2:153 var
R11307:11308 Coccinelle.dickson <> l1:152 var
R11305:11305 Coccinelle.dickson <> R:151 var
R11341:11363 Coccinelle.dickson Make multiset_extension_step ind
R11379:11382 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11378:11378 Coccinelle.dickson <> l:154 var
R11383:11384 Coccinelle.dickson <> l2:153 var
R11369:11372 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11368:11368 Coccinelle.dickson <> l:154 var
R11373:11374 Coccinelle.dickson <> l1:152 var
R11365:11365 Coccinelle.dickson <> R:151 var
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11476:11477 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11492:11493 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11463:11470 Coccinelle.dickson Make rmv_case constr
R11476:11477 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11484:11485 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11492:11493 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11541:11544 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11541:11544 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11547:11550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11521:11532 Coccinelle.dickson Make permut_trans defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11568:11578 Coccinelle.dickson Make permut_app1 defax
R11606:11612 Coq.Lists.List <> app_ass abbrev
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11606:11612 Coq.Lists.List <> app_ass abbrev
R11606:11612 Coq.Lists.List <> app_ass abbrev
R11606:11612 Coq.Lists.List <> app_ass abbrev
R11606:11612 Coq.Lists.List <> app_ass abbrev
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11626:11636 Coccinelle.dickson Make permut_app2 defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11654:11672 Coccinelle.dickson Make list_permut_app_app defax
R11701:11704 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11701:11704 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11706:11709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11681:11692 Coccinelle.dickson Make permut_trans defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11727:11737 Coccinelle.dickson Make permut_app1 defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11755:11764 Coccinelle.dickson Make permut_sym defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11778:11795 Coccinelle.dickson Make permut_cons_inside defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11804:11814 Coccinelle.dickson Make permut_refl defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
R11824:11833 Coq.Relations.Relation_Definitions <> equiv_refl proj
R11839:11846 Coccinelle.dickson Make eq_proof defax
prf 11862:11908 Make context_trans_clos_multiset_extension_step_app1
binder 11921:11921 <> R:155
binder 11923:11924 <> l1:156
binder 11926:11927 <> l2:157
binder 11929:11929 <> l:158
R11976:12004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11932:11941 Coccinelle.TransClosure <> trans_clos ind
R11974:11975 Coccinelle.dickson <> l2:157 var
R11971:11972 Coccinelle.dickson <> l1:156 var
R11944:11966 Coccinelle.dickson Make multiset_extension_step ind
R11968:11968 Coccinelle.dickson <> R:155 var
R12005:12014 Coccinelle.TransClosure <> trans_clos ind
R12056:12059 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12055:12055 Coccinelle.dickson <> l:158 var
R12060:12061 Coccinelle.dickson <> l2:157 var
R12046:12049 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12045:12045 Coccinelle.dickson <> l:158 var
R12050:12051 Coccinelle.dickson <> l1:156 var
R12017:12039 Coccinelle.dickson Make multiset_extension_step ind
R12041:12041 Coccinelle.dickson <> R:155 var
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12111:12116 Coccinelle.TransClosure <> t_step constr
R12125:12160 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12193:12196 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12193:12196 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12178:12184 Coccinelle.TransClosure <> t_trans constr
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
R12216:12251 Coccinelle.dickson Make context_multiset_extension_step_app1 thm
prf 12275:12310 Make context_multiset_extension_step_cons
binder 12323:12323 <> R:159
R12326:12326 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12343:12350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 12334:12334 <> a:160
R12337:12337 Coq.Init.Logic <> ::type_scope:'~'_x not
R12338:12338 Coccinelle.dickson <> R:159 var
R12340:12340 Coccinelle.dickson <> a:160 var
R12342:12342 Coccinelle.dickson <> a:160 var
binder 12358:12358 <> a:161
binder 12360:12361 <> l1:162
binder 12363:12364 <> l2:163
R12412:12440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12367:12389 Coccinelle.dickson Make multiset_extension_step ind
R12405:12408 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12404:12404 Coccinelle.dickson <> a:161 var
R12409:12410 Coccinelle.dickson <> l2:163 var
R12395:12398 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12394:12394 Coccinelle.dickson <> a:161 var
R12399:12400 Coccinelle.dickson <> l1:162 var
R12391:12391 Coccinelle.dickson <> R:159 var
R12441:12463 Coccinelle.dickson Make multiset_extension_step ind
R12470:12471 Coccinelle.dickson <> l2:163 var
R12467:12468 Coccinelle.dickson <> l1:162 var
R12465:12465 Coccinelle.dickson <> R:159 var
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12588:12590 Coccinelle.more_list <> mem def
R12605:12608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12592:12599 Coccinelle.dickson Make eq_A defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12621:12635 Coccinelle.dickson Make cons_permut_mem defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12664:12673 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12679:12686 Coccinelle.dickson Make eq_proof defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12802:12804 Coccinelle.more_list <> mem def
R12820:12823 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12806:12813 Coccinelle.dickson Make eq_A defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12836:12850 Coccinelle.dickson Make cons_permut_mem defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12879:12888 Coq.Relations.Relation_Definitions <> equiv_refl proj
R12894:12901 Coccinelle.dickson Make eq_proof defax
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R12916:12925 Coccinelle.more_list <> mem_or_app thm
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13060:13072 Coccinelle.more_list <> mem_split_set thm
R13078:13087 Coccinelle.dickson Make eq_bool_ok defax
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13189:13196 Coccinelle.dickson Make rmv_case constr
R13226:13229 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13268:13274 Coq.Lists.List <> app_ass abbrev
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13268:13274 Coq.Lists.List <> app_ass abbrev
R13268:13274 Coq.Lists.List <> app_ass abbrev
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13295:13312 Coccinelle.dickson Make permut_cons_inside defax
R13333:13339 Coq.Lists.List <> ass_app abbrev
R13333:13339 Coq.Lists.List <> ass_app abbrev
R13333:13339 Coq.Lists.List <> ass_app abbrev
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13364:13373 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13379:13386 Coccinelle.dickson Make eq_proof defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13398:13410 Coq.Lists.List <> app_comm_cons thm
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13431:13448 Coccinelle.dickson Make permut_cons_inside defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13474:13483 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13489:13496 Coccinelle.dickson Make eq_proof defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13513:13525 Coccinelle.more_list <> mem_split_set thm
R13531:13540 Coccinelle.dickson Make eq_bool_ok defax
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13642:13649 Coccinelle.dickson Make rmv_case constr
R13679:13682 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13721:13727 Coq.Lists.List <> app_ass abbrev
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13721:13727 Coq.Lists.List <> app_ass abbrev
R13721:13727 Coq.Lists.List <> app_ass abbrev
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13748:13765 Coccinelle.dickson Make permut_cons_inside defax
R13786:13792 Coq.Lists.List <> ass_app abbrev
R13786:13792 Coq.Lists.List <> ass_app abbrev
R13786:13792 Coq.Lists.List <> ass_app abbrev
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13817:13826 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13832:13839 Coccinelle.dickson Make eq_proof defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13851:13863 Coq.Lists.List <> app_comm_cons thm
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13884:13901 Coccinelle.dickson Make permut_cons_inside defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
R13941:13950 Coq.Relations.Relation_Definitions <> equiv_refl proj
R13956:13963 Coccinelle.dickson Make eq_proof defax
prf 13979:14021 Make remove_context_multiset_extension_step_app1
binder 14034:14034 <> R:164
R14038:14038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14055:14062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 14046:14046 <> a:165
R14049:14049 Coq.Init.Logic <> ::type_scope:'~'_x not
R14050:14050 Coccinelle.dickson <> R:164 var
R14052:14052 Coccinelle.dickson <> a:165 var
R14054:14054 Coccinelle.dickson <> a:165 var
binder 14070:14071 <> l1:166
binder 14073:14074 <> l2:167
binder 14076:14076 <> l:168
R14124:14152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14079:14101 Coccinelle.dickson Make multiset_extension_step ind
R14117:14120 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14116:14116 Coccinelle.dickson <> l:168 var
R14121:14122 Coccinelle.dickson <> l2:167 var
R14107:14110 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14106:14106 Coccinelle.dickson <> l:168 var
R14111:14112 Coccinelle.dickson <> l1:166 var
R14103:14103 Coccinelle.dickson <> R:164 var
R14153:14175 Coccinelle.dickson Make multiset_extension_step ind
R14182:14183 Coccinelle.dickson <> l2:167 var
R14179:14180 Coccinelle.dickson <> l1:166 var
R14177:14177 Coccinelle.dickson <> R:164 var
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14316:14338 Coccinelle.dickson Make multiset_extension_step ind
R14354:14357 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14344:14347 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14425:14425 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14425:14425 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14432:14436 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14427:14430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14381:14417 Coccinelle.dickson Make list_permut_multiset_extension_step_2 thm
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14460:14477 Coccinelle.dickson Make permut_cons_inside defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14493:14502 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14508:14515 Coccinelle.dickson Make eq_proof defax
R14569:14569 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14569:14569 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14576:14580 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14571:14574 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14525:14561 Coccinelle.dickson Make list_permut_multiset_extension_step_1 thm
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14613:14630 Coccinelle.dickson Make permut_cons_inside defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14646:14655 Coq.Relations.Relation_Definitions <> equiv_refl proj
R14661:14668 Coccinelle.dickson Make eq_proof defax
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
R14678:14713 Coccinelle.dickson Make context_multiset_extension_step_cons thm
prf 14744:14779 Make context_multiset_extension_step_app2
binder 14792:14792 <> R:169
binder 14794:14795 <> l1:170
binder 14797:14798 <> l2:171
binder 14800:14800 <> l:172
R14834:14862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14803:14825 Coccinelle.dickson Make multiset_extension_step ind
R14832:14833 Coccinelle.dickson <> l2:171 var
R14829:14830 Coccinelle.dickson <> l1:170 var
R14827:14827 Coccinelle.dickson <> R:169 var
R14863:14885 Coccinelle.dickson Make multiset_extension_step ind
R14902:14905 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14900:14901 Coccinelle.dickson <> l2:171 var
R14906:14906 Coccinelle.dickson <> l:172 var
R14892:14895 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14890:14891 Coccinelle.dickson <> l1:170 var
R14896:14896 Coccinelle.dickson <> l:172 var
R14887:14887 Coccinelle.dickson <> R:169 var
R14985:14992 Coccinelle.dickson Make rmv_case constr
R14999:15000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15016:15017 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14985:14992 Coccinelle.dickson Make rmv_case constr
R14999:15000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15007:15008 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15016:15017 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15048:15054 Coq.Lists.List <> app_ass abbrev
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15048:15054 Coq.Lists.List <> app_ass abbrev
R15048:15054 Coq.Lists.List <> app_ass abbrev
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15068:15078 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15098:15110 Coq.Lists.List <> app_comm_cons thm
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15124:15134 Coccinelle.dickson Make permut_app2 defax
R15173:15176 Coq.Init.Datatypes <> list ind
R15180:15182 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15179:15179 Coccinelle.dickson Make A defax
R15183:15186 Coq.Init.Datatypes <> list ind
R15188:15188 Coccinelle.dickson Make A defax
binder 15168:15169 <> ll:173
R15194:15197 Coq.Init.Datatypes <> list ind
R15199:15199 Coccinelle.dickson Make A defax
R15212:15213 Coccinelle.dickson <> ll:173 var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn:174 def
R15266:15267 Coccinelle.dickson <> ll:173 var
binder 15168:15169 <> ll:176
binder 15168:15169 <> ll:177
binder 15168:15169 <> ll:179
R15212:15213 Coccinelle.dickson <> ll:179 var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn:178 def
R15266:15267 Coccinelle.dickson <> ll:179 var
binder 15168:15169 <> ll:181
R15212:15213 Coccinelle.dickson <> ll:181 var
R15225:15227 Coq.Init.Datatypes <> nil constr
R15232:15234 Coq.Init.Datatypes <> nil constr
R15245:15248 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15240:15240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15242:15242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15244:15244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15256:15259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15268:15268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15260:15264 Coccinelle.dickson <> consn:182 def
R15266:15267 Coccinelle.dickson <> ll:181 var
prf 15284:15292 Make mem_consn
binder 15306:15306 <> a:194
binder 15308:15309 <> ll:195
R15337:15341 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15312:15314 Coccinelle.more_list <> mem def
R15328:15332 Coccinelle.dickson Make consn def
R15334:15335 Coccinelle.dickson <> ll:195 var
R15325:15325 Coccinelle.dickson <> a:194 var
R15316:15323 Coccinelle.dickson Make eq_A defax
R15342:15348 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R15351:15352 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 15349:15350 <> la:196
R15353:15354 Coq.Lists.List <> In def
R15363:15364 Coccinelle.dickson <> ll:195 var
R15356:15356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15358:15358 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15361:15361 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15357:15357 Coccinelle.dickson <> a:194 var
R15359:15360 Coccinelle.dickson <> la:196 var
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15425:15429 Coccinelle.dickson Make consn def
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
R15763:15772 Coq.Relations.Relation_Definitions <> equiv_refl proj
R15778:15785 Coccinelle.dickson Make eq_proof defax
prf 15847:15855 Make consn_app
binder 15867:15869 <> ll1:197
binder 15871:15873 <> ll2:198
R15894:15896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15876:15880 Coccinelle.dickson Make consn def
R15886:15889 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15883:15885 Coccinelle.dickson <> ll1:197 var
R15890:15892 Coccinelle.dickson <> ll2:198 var
R15906:15909 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15897:15901 Coccinelle.dickson Make consn def
R15903:15905 Coccinelle.dickson <> ll1:197 var
R15910:15914 Coccinelle.dickson Make consn def
R15916:15918 Coccinelle.dickson <> ll2:198 var
R16059:16062 Coq.Init.Datatypes <> list ind
R16066:16068 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16065:16065 Coccinelle.dickson Make A defax
R16069:16072 Coq.Init.Datatypes <> list ind
R16074:16074 Coccinelle.dickson Make A defax
binder 16054:16055 <> ll:199
R16080:16083 Coq.Init.Datatypes <> list ind
R16085:16085 Coccinelle.dickson Make A defax
R16098:16099 Coccinelle.dickson <> ll:199 var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn:200 def
R16155:16156 Coccinelle.dickson <> ll:199 var
binder 16054:16055 <> ll:202
binder 16054:16055 <> ll:203
binder 16054:16055 <> ll:205
R16098:16099 Coccinelle.dickson <> ll:205 var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn:204 def
R16155:16156 Coccinelle.dickson <> ll:205 var
binder 16054:16055 <> ll:207
R16098:16099 Coccinelle.dickson <> ll:207 var
R16111:16113 Coq.Init.Datatypes <> nil constr
R16118:16120 Coq.Init.Datatypes <> nil constr
R16131:16134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16126:16126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16142:16146 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16157:16157 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16147:16153 Coccinelle.dickson <> appendn:208 def
R16155:16156 Coccinelle.dickson <> ll:207 var
prf 16173:16183 Make appendn_app
binder 16195:16197 <> ll1:220
binder 16199:16201 <> ll2:221
R16224:16226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16204:16210 Coccinelle.dickson Make appendn def
R16216:16219 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16213:16215 Coccinelle.dickson <> ll1:220 var
R16220:16222 Coccinelle.dickson <> ll2:221 var
R16238:16241 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16227:16233 Coccinelle.dickson Make appendn def
R16235:16237 Coccinelle.dickson <> ll1:220 var
R16242:16248 Coccinelle.dickson Make appendn def
R16250:16252 Coccinelle.dickson <> ll2:221 var
R16363:16369 Coq.Lists.List <> ass_app abbrev
R16363:16369 Coq.Lists.List <> ass_app abbrev
R16363:16369 Coq.Lists.List <> ass_app abbrev
prf 16393:16402 Make in_appendn
binder 16416:16416 <> a:222
binder 16418:16419 <> ll:223
R16449:16452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16422:16424 Coccinelle.more_list <> mem def
R16438:16444 Coccinelle.dickson Make appendn def
R16446:16447 Coccinelle.dickson <> ll:223 var
R16435:16435 Coccinelle.dickson <> a:222 var
R16426:16433 Coccinelle.dickson Make eq_A defax
R16453:16459 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16461:16462 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 16460:16460 <> b:224
R16463:16469 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16472:16473 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 16470:16471 <> lb:225
R16486:16489 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16474:16475 Coq.Lists.List <> In def
R16484:16485 Coccinelle.dickson <> ll:223 var
R16477:16477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16479:16479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16482:16482 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16478:16478 Coccinelle.dickson <> b:224 var
R16480:16481 Coccinelle.dickson <> lb:225 var
R16490:16492 Coccinelle.more_list <> mem def
R16505:16506 Coccinelle.dickson <> lb:225 var
R16503:16503 Coccinelle.dickson <> a:222 var
R16494:16501 Coccinelle.dickson Make eq_A defax
R16554:16560 Coccinelle.dickson Make appendn def
R16554:16560 Coccinelle.dickson Make appendn def
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
R16622:16631 Coccinelle.more_list <> mem_or_app thm
prf 16842:16861 Make multiset_closure_aux
R16879:16886 Coq.Relations.Relation_Definitions <> relation def
R16888:16888 Coccinelle.dickson Make A defax
binder 16875:16875 <> R:226
binder 16891:16891 <> p:227
binder 16893:16893 <> q:228
binder 16895:16895 <> l:229
binder 16897:16898 <> pq:230
R16932:16937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16904:16909 Coccinelle.dickson Make permut abbrev
R16914:16914 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16924:16928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16915:16921 Coccinelle.dickson Make appendn def
R16923:16923 Coccinelle.dickson <> l:229 var
R16929:16930 Coccinelle.dickson <> pq:230 var
R16911:16911 Coccinelle.dickson <> p:227 var
R16964:16969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16938:16943 Coccinelle.dickson Make permut abbrev
R16948:16948 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16956:16960 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16949:16953 Coccinelle.dickson Make consn def
R16955:16955 Coccinelle.dickson <> l:229 var
R16961:16962 Coccinelle.dickson <> pq:230 var
R16945:16945 Coccinelle.dickson <> q:228 var
R16978:16983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16971:16974 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16970:16970 Coccinelle.dickson <> l:229 var
R16975:16977 Coq.Init.Datatypes <> nil constr
R16984:16984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17057:17063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 16992:16992 <> a:231
binder 17002:17003 <> la:232
R17017:17020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17006:17007 Coq.Lists.List <> In def
R17016:17016 Coccinelle.dickson <> l:229 var
R17009:17009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17011:17011 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17014:17014 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17010:17010 Coccinelle.dickson <> a:231 var
R17012:17013 Coccinelle.dickson <> la:232 var
binder 17028:17028 <> b:233
R17048:17051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17031:17033 Coccinelle.more_list <> mem def
R17046:17047 Coccinelle.dickson <> la:232 var
R17044:17044 Coccinelle.dickson <> b:233 var
R17035:17042 Coccinelle.dickson Make eq_A defax
R17052:17052 Coccinelle.dickson <> R:226 var
R17054:17054 Coccinelle.dickson <> b:233 var
R17056:17056 Coccinelle.dickson <> a:231 var
R17064:17073 Coccinelle.TransClosure <> trans_clos ind
R17105:17105 Coccinelle.dickson <> q:228 var
R17103:17103 Coccinelle.dickson <> p:227 var
R17076:17098 Coccinelle.dickson Make multiset_extension_step ind
R17100:17100 Coccinelle.dickson <> R:226 var
R17243:17245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
R17243:17245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17227:17229 Coq.Init.Datatypes <> nil constr
R17233:17235 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17232:17232 Coccinelle.dickson Make A defax
R17236:17239 Coq.Init.Datatypes <> list ind
R17241:17241 Coccinelle.dickson Make A defax
R17246:17248 Coq.Init.Datatypes <> nil constr
binder 17318:17318 <> b:234
R17338:17341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b:234 var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17344:17344 Coccinelle.dickson <> b:234 var
binder 17318:17318 <> b:235
R17338:17341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17321:17323 Coccinelle.more_list <> mem def
R17334:17334 Coccinelle.dickson <> b:235 var
R17325:17332 Coccinelle.dickson Make eq_A defax
R17344:17344 Coccinelle.dickson <> b:235 var
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17426:17436 Coq.Lists.List <> app_nil_end thm
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17464:17469 Coccinelle.TransClosure <> t_step constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17480:17487 Coccinelle.dickson Make rmv_case constr
R17531:17534 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17531:17534 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17537:17540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17541:17541 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17551:17555 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17542:17548 Coccinelle.dickson Make appendn def
R17516:17522 Coccinelle.TransClosure <> t_trans constr
R17574:17580 Coq.Lists.List <> app_ass abbrev
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17574:17580 Coq.Lists.List <> app_ass abbrev
R17574:17580 Coq.Lists.List <> app_ass abbrev
R17574:17580 Coq.Lists.List <> app_ass abbrev
R17574:17580 Coq.Lists.List <> app_ass abbrev
R17597:17604 Coccinelle.dickson Make rmv_case constr
R17623:17633 Coccinelle.dickson Make permut_refl defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17648:17695 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R17722:17731 Coccinelle.dickson Make permut_sym defax
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17814:17817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17837:17840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17858:17861 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17885:17888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17749:17795 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_app1 thm
R17814:17817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17827:17830 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17818:17824 Coccinelle.dickson Make appendn def
R17837:17840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17848:17851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17841:17845 Coccinelle.dickson Make consn def
R17858:17861 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17862:17864 Coq.Init.Datatypes <> nil constr
R17885:17888 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17898:17901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17889:17895 Coccinelle.dickson Make appendn def
R17908:17911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R17919:17922 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17912:17916 Coccinelle.dickson Make consn def
R17946:17952 Coq.Lists.List <> ass_app abbrev
R17946:17952 Coq.Lists.List <> ass_app abbrev
R17946:17952 Coq.Lists.List <> ass_app abbrev
prf 18054:18074 Make multiset_closure_aux2
R18092:18099 Coq.Relations.Relation_Definitions <> relation def
R18101:18101 Coccinelle.dickson Make A defax
binder 18088:18088 <> R:236
binder 18104:18104 <> p:237
binder 18106:18106 <> q:238
binder 18108:18109 <> le:239
binder 18111:18111 <> l:240
binder 18113:18114 <> pq:241
R18148:18153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18120:18125 Coccinelle.dickson Make permut abbrev
R18130:18130 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18140:18144 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18131:18137 Coccinelle.dickson Make appendn def
R18139:18139 Coccinelle.dickson <> l:240 var
R18145:18146 Coccinelle.dickson <> pq:241 var
R18127:18127 Coccinelle.dickson <> p:237 var
R18186:18191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18154:18159 Coccinelle.dickson Make permut abbrev
R18166:18169 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18164:18165 Coccinelle.dickson <> le:239 var
R18170:18170 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18178:18182 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18171:18175 Coccinelle.dickson Make consn def
R18177:18177 Coccinelle.dickson <> l:240 var
R18183:18184 Coccinelle.dickson <> pq:241 var
R18161:18161 Coccinelle.dickson <> q:238 var
R18213:18218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18200:18203 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18193:18196 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18192:18192 Coccinelle.dickson <> l:240 var
R18197:18199 Coq.Init.Datatypes <> nil constr
R18206:18209 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18204:18205 Coccinelle.dickson <> le:239 var
R18210:18212 Coq.Init.Datatypes <> nil constr
R18219:18219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18292:18298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 18227:18227 <> a:242
binder 18237:18238 <> la:243
R18252:18255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18241:18242 Coq.Lists.List <> In def
R18251:18251 Coccinelle.dickson <> l:240 var
R18244:18244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18246:18246 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18249:18249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18245:18245 Coccinelle.dickson <> a:242 var
R18247:18248 Coccinelle.dickson <> la:243 var
binder 18263:18263 <> b:244
R18283:18286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18266:18268 Coccinelle.more_list <> mem def
R18281:18282 Coccinelle.dickson <> la:243 var
R18279:18279 Coccinelle.dickson <> b:244 var
R18270:18277 Coccinelle.dickson Make eq_A defax
R18287:18287 Coccinelle.dickson <> R:236 var
R18289:18289 Coccinelle.dickson <> b:244 var
R18291:18291 Coccinelle.dickson <> a:242 var
R18299:18308 Coccinelle.TransClosure <> trans_clos ind
R18340:18340 Coccinelle.dickson <> q:238 var
R18338:18338 Coccinelle.dickson <> p:237 var
R18311:18333 Coccinelle.dickson Make multiset_extension_step ind
R18335:18335 Coccinelle.dickson <> R:236 var
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
binder 18429:18429 <> x:245
R18434:18434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x:245 var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18391:18410 Coccinelle.dickson Make multiset_closure_aux thm
R18419:18419 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18449:18453 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18420:18422 Coq.Lists.List <> map def
binder 18429:18429 <> x:246
R18434:18434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18436:18437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18444:18444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18435:18435 Coccinelle.dickson <> x:246 var
R18439:18441 Coq.Init.Datatypes <> nil constr
R18443:18443 Coccinelle.dickson Make A defax
R18496:18499 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18496:18499 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18487:18493 Coccinelle.dickson Make appendn def
R18468:18479 Coccinelle.dickson Make permut_trans defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18528:18538 Coccinelle.dickson Make permut_app2 defax
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18549:18559 Coccinelle.dickson Make appendn_app thm
R18641:18644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18641:18644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18652:18655 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18645:18649 Coccinelle.dickson Make consn def
R18620:18631 Coccinelle.dickson Make permut_trans defax
R18681:18687 Coq.Lists.List <> ass_app abbrev
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18681:18687 Coq.Lists.List <> ass_app abbrev
R18681:18687 Coq.Lists.List <> ass_app abbrev
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18701:18711 Coccinelle.dickson Make permut_app2 defax
R18722:18730 Coccinelle.dickson Make consn_app thm
R18722:18730 Coccinelle.dickson Make consn_app thm
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18796:18806 Coccinelle.dickson Make permut_cons defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18825:18834 Coq.Relations.Relation_Definitions <> equiv_refl proj
R18840:18847 Coccinelle.dickson Make eq_proof defax
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18872:18881 Coq.Lists.List <> app_eq_nil thm
R18969:18971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R18969:18971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18972:18974 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
R19027:19029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19022:19024 Coq.Init.Datatypes <> nil constr
R19026:19026 Coccinelle.dickson Make A defax
R19030:19032 Coq.Init.Datatypes <> nil constr
mod 19234:19236 <> Make.LDS
def 19251:19251 Make.LDS A
R19258:19261 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19268:19268 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19257:19257 Coccinelle.dickson Make.DS A defax
R19262:19265 Coq.Init.Datatypes <> list ind
R19267:19267 Coccinelle.dickson Make.DS A defax
def 19288:19291 Make.LDS eq_A
R19297:19298 Coq.Init.Logic <> eq ind
R19300:19300 Coccinelle.dickson Make.LDS A def
prf 19310:19317 Make.LDS eq_proof
R19321:19331 Coq.Relations.Relation_Definitions <> equivalence rec
R19335:19338 Coccinelle.dickson Make.LDS eq_A def
R19333:19333 Coccinelle.dickson Make.LDS A def
R19348:19351 Coccinelle.dickson Make.LDS eq_A def
R19376:19385 Coq.Init.Logic <> refl_equal abbrev
R19376:19385 Coq.Init.Logic <> refl_equal abbrev
R19468:19477 Coq.Init.Logic <> refl_equal abbrev
R19468:19477 Coq.Init.Logic <> refl_equal abbrev
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
R19501:19501 Coccinelle.dickson Make.LDS A def
R19503:19506 Coccinelle.dickson Make.LDS eq_A def
R19534:19564 Coq.Relations.Relation_Definitions <> equiv_refl proj
R19570:19577 Coccinelle.dickson Make.LDS eq_proof thm
R19604:19633 Coq.Relations.Relation_Definitions <> equiv_sym proj
R19639:19646 Coccinelle.dickson Make.LDS eq_proof thm
R19679:19710 Coq.Relations.Relation_Definitions <> equiv_trans proj
R19716:19723 Coccinelle.dickson Make.LDS eq_proof thm
def 19744:19755 Make.LDS eq_bool_list
binder 19757:19758 <> l1:247
binder 19760:19761 <> l2:248
R19764:19767 Coq.Init.Datatypes <> bool ind
R19787:19788 Coccinelle.dickson <> l2:248 var
R19783:19784 Coccinelle.dickson <> l1:247 var
R19802:19804 Coq.Init.Datatypes <> nil constr
R19807:19809 Coq.Init.Datatypes <> nil constr
R19814:19817 Coq.Init.Datatypes <> true constr
R19826:19828 Coq.Init.Datatypes <> nil constr
R19833:19836 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19843:19847 Coq.Init.Datatypes <> false constr
R19859:19862 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19868:19870 Coq.Init.Datatypes <> nil constr
R19875:19879 Coq.Init.Datatypes <> false constr
R19891:19894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19903:19906 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19917:19927 Coccinelle.dickson DS1 eq_bool defax
R19964:19968 Coq.Init.Datatypes <> false constr
R19940:19951 Coccinelle.dickson <> eq_bool_list:249 def
R19956:19957 Coccinelle.dickson <> l2:248 var
R19953:19954 Coccinelle.dickson <> l1:247 var
def 19992:19998 Make.LDS eq_bool
binder 20000:20002 <> al1:252
binder 20004:20006 <> al2:253
R20010:20013 Coq.Init.Datatypes <> bool ind
R20033:20035 Coccinelle.dickson <> al2:253 var
R20028:20030 Coccinelle.dickson <> al1:252 var
R20046:20046 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20049:20049 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20052:20052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20055:20055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20058:20058 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20061:20061 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20069:20079 Coccinelle.dickson DS1 eq_bool defax
R20116:20120 Coq.Init.Datatypes <> false constr
R20092:20103 Coccinelle.dickson Make.LDS eq_bool_list def
prf 20136:20145 Make.LDS eq_bool_ok
binder 20156:20158 <> al1:256
binder 20160:20162 <> al2:257
R20171:20177 Coccinelle.dickson Make.LDS eq_bool def
R20183:20185 Coccinelle.dickson <> al2:257 var
R20179:20181 Coccinelle.dickson <> al1:256 var
R20192:20195 Coq.Init.Datatypes <> true constr
R20203:20205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20200:20202 Coccinelle.dickson <> al1:256 var
R20206:20208 Coccinelle.dickson <> al2:257 var
R20212:20216 Coq.Init.Datatypes <> false constr
R20221:20221 Coq.Init.Logic <> ::type_scope:'~'_x not
R20225:20227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20222:20224 Coccinelle.dickson <> al1:256 var
R20228:20230 Coccinelle.dickson <> al2:257 var
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
R20287:20300 Coccinelle.dickson DS1 eq_bool_ok defax
R20316:20326 Coccinelle.dickson DS1 eq_bool defax
binder 20409:20410 <> l1:258
binder 20412:20413 <> l2:259
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2:259 var
R20435:20436 Coccinelle.dickson <> l1:258 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1:258 var
R20459:20460 Coccinelle.dickson <> l2:259 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> ::type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1:258 var
R20479:20480 Coccinelle.dickson <> l2:259 var
binder 20409:20410 <> l1:260
binder 20412:20413 <> l2:261
R20422:20433 Coccinelle.dickson Make.LDS eq_bool_list def
R20438:20439 Coccinelle.dickson <> l2:261 var
R20435:20436 Coccinelle.dickson <> l1:260 var
R20446:20449 Coq.Init.Datatypes <> true constr
R20456:20458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20454:20455 Coccinelle.dickson <> l1:260 var
R20459:20460 Coccinelle.dickson <> l2:261 var
R20464:20468 Coq.Init.Datatypes <> false constr
R20473:20473 Coq.Init.Logic <> ::type_scope:'~'_x not
R20476:20478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20474:20475 Coccinelle.dickson <> l1:260 var
R20479:20480 Coccinelle.dickson <> l2:261 var
R20550:20559 Coq.Init.Logic <> refl_equal abbrev
R20550:20559 Coq.Init.Logic <> refl_equal abbrev
R20602:20615 Coccinelle.dickson DS1 eq_bool_ok defax
R20631:20641 Coccinelle.dickson DS1 eq_bool defax
R20602:20615 Coccinelle.dickson DS1 eq_bool_ok defax
R20631:20641 Coccinelle.dickson DS1 eq_bool defax
R20728:20739 Coccinelle.dickson Make.LDS eq_bool_list def
R20728:20739 Coccinelle.dickson Make.LDS eq_bool_list def
R20799:20808 Coq.Init.Logic <> refl_equal abbrev
R20799:20808 Coq.Init.Logic <> refl_equal abbrev
R20872:20881 Coq.Init.Logic <> refl_equal abbrev
R20872:20881 Coq.Init.Logic <> refl_equal abbrev
R20945:20954 Coq.Init.Logic <> refl_equal abbrev
R20945:20954 Coq.Init.Logic <> refl_equal abbrev
R20999:21010 Coccinelle.dickson Make.LDS eq_bool_list def
R20999:21010 Coccinelle.dickson Make.LDS eq_bool_list def
R21071:21080 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21086:21093 Coccinelle.dickson Make.LDS eq_proof thm
R21071:21080 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21086:21093 Coccinelle.dickson Make.LDS eq_proof thm
R21158:21167 Coq.Init.Logic <> refl_equal abbrev
R21158:21167 Coq.Init.Logic <> refl_equal abbrev
R21231:21240 Coq.Init.Logic <> refl_equal abbrev
R21231:21240 Coq.Init.Logic <> refl_equal abbrev
R21257:21259 Coccinelle.dickson Make.LDS <> mod
R21278:21298 Coccinelle.decidable_set Convert <> modtype
R21300:21302 Coccinelle.dickson Make.LDS <> modtype
mod 21270:21273 <> Make.LEDS
R21320:21335 Coccinelle.list_permut Make <> modtype
R21338:21341 Coccinelle.dickson Make.LEDS <> modtype
mod 21313:21315 <> Make.LLP
prf 21352:21363 Make permut_consn
binder 21375:21377 <> ll1:262
binder 21379:21381 <> ll2:263
R21402:21405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21384:21393 Coccinelle.dickson Make permut abbrev
R21399:21401 Coccinelle.dickson <> ll2:263 var
R21395:21397 Coccinelle.dickson <> ll1:262 var
R21406:21411 Coccinelle.dickson Make permut abbrev
R21426:21430 Coccinelle.dickson Make consn def
R21432:21434 Coccinelle.dickson <> ll2:263 var
R21414:21418 Coccinelle.dickson Make consn def
R21420:21422 Coccinelle.dickson <> ll1:262 var
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21521:21530 Coccinelle.list_permut <> permut_nil thm
R21533:21546 Coccinelle.dickson Make permut_sym defax
R21587:21588 Coq.Lists.List <> In def
R21590:21590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21592:21592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21595:21595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21587:21588 Coq.Lists.List <> In def
R21590:21590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21592:21592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21595:21595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21615:21626 Coccinelle.list_permut <> in_permut_in thm
R21657:21664 Coq.Lists.List <> In_split abbrev
R21657:21664 Coq.Lists.List <> In_split abbrev
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21721:21742 Coccinelle.dickson Make permut_cons_inside defax
R21758:21766 Coccinelle.dickson Make consn_app thm
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21758:21766 Coccinelle.dickson Make consn_app thm
R21758:21766 Coccinelle.dickson Make consn_app thm
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21787:21804 Coccinelle.dickson Make permut_cons_inside defax
R21818:21826 Coccinelle.dickson Make consn_app thm
R21818:21826 Coccinelle.dickson Make consn_app thm
R21818:21826 Coccinelle.dickson Make consn_app thm
R21858:21867 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21873:21880 Coccinelle.dickson Make eq_proof defax
R21858:21867 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21873:21880 Coccinelle.dickson Make eq_proof defax
R21891:21900 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21906:21918 Coccinelle.dickson Make eq_proof defax
R21891:21900 Coq.Relations.Relation_Definitions <> equiv_refl proj
R21906:21918 Coccinelle.dickson Make eq_proof defax
prf 21934:21947 Make permut_appendn
binder 21959:21961 <> ll1:264
binder 21963:21965 <> ll2:265
R21986:21989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21968:21977 Coccinelle.dickson Make permut abbrev
R21983:21985 Coccinelle.dickson <> ll2:265 var
R21979:21981 Coccinelle.dickson <> ll1:264 var
R21990:21995 Coccinelle.dickson Make permut abbrev
R22012:22018 Coccinelle.dickson Make appendn def
R22020:22022 Coccinelle.dickson <> ll2:265 var
R21998:22004 Coccinelle.dickson Make appendn def
R22006:22008 Coccinelle.dickson <> ll1:264 var
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22109:22118 Coccinelle.list_permut <> permut_nil thm
R22121:22134 Coccinelle.dickson Make permut_sym defax
R22175:22176 Coq.Lists.List <> In def
R22178:22178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22180:22180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22183:22183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22175:22176 Coq.Lists.List <> In def
R22178:22178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22180:22180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22183:22183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22203:22214 Coccinelle.list_permut <> in_permut_in thm
R22245:22252 Coq.Lists.List <> In_split abbrev
R22245:22252 Coq.Lists.List <> In_split abbrev
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22306:22316 Coccinelle.dickson Make appendn_app thm
R22334:22345 Coccinelle.dickson Make permut_trans defax
R22350:22368 Coccinelle.dickson Make list_permut_app_app defax
R22334:22345 Coccinelle.dickson Make permut_trans defax
R22350:22368 Coccinelle.dickson Make list_permut_app_app defax
R22388:22394 Coq.Lists.List <> ass_app abbrev
R22388:22394 Coq.Lists.List <> ass_app abbrev
R22388:22394 Coq.Lists.List <> ass_app abbrev
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22408:22418 Coccinelle.dickson Make permut_app1 defax
R22429:22440 Coccinelle.dickson Make permut_trans defax
R22445:22463 Coccinelle.dickson Make list_permut_app_app defax
R22429:22440 Coccinelle.dickson Make permut_trans defax
R22445:22463 Coccinelle.dickson Make list_permut_app_app defax
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22483:22493 Coccinelle.dickson Make appendn_app thm
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22529:22550 Coccinelle.dickson Make permut_cons_inside defax
R22574:22583 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22589:22601 Coccinelle.dickson Make eq_proof defax
R22574:22583 Coq.Relations.Relation_Definitions <> equiv_refl proj
R22589:22601 Coccinelle.dickson Make eq_proof defax
prf 22617:22637 Make multiset_closure_aux3
binder 22650:22650 <> l:266
binder 22652:22653 <> lc:267
binder 22655:22657 <> cns:268
R22688:22706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22660:22665 Coccinelle.dickson Make permut abbrev
R22680:22683 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22678:22679 Coccinelle.dickson <> lc:267 var
R22684:22686 Coccinelle.dickson <> cns:268 var
R22668:22672 Coccinelle.dickson Make consn def
R22674:22674 Coccinelle.dickson <> l:266 var
R22707:22713 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22716:22717 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22714:22715 <> ll:269
R22718:22724 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22728:22730 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22725:22727 <> ll':270
R22755:22802 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22731:22740 Coccinelle.dickson Make permut abbrev
R22747:22750 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22745:22746 Coccinelle.dickson <> ll:269 var
R22751:22753 Coccinelle.dickson <> ll':270 var
R22742:22742 Coccinelle.dickson <> l:266 var
R22824:22871 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22803:22808 Coccinelle.dickson Make permut abbrev
R22822:22823 Coccinelle.dickson <> lc:267 var
R22811:22815 Coccinelle.dickson Make consn def
R22817:22818 Coccinelle.dickson <> ll:269 var
R22872:22877 Coccinelle.dickson Make permut abbrev
R22891:22893 Coccinelle.dickson <> cns:268 var
R22880:22884 Coccinelle.dickson Make consn def
R22886:22888 Coccinelle.dickson <> ll':270 var
binder 22922:22927 <> consnl:271
binder 22929:22933 <> lccns:272
R22955:22974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22936:22941 Coccinelle.dickson Make permut abbrev
R22950:22954 Coccinelle.dickson <> lccns:272 var
R22943:22948 Coccinelle.dickson <> consnl:271 var
binder 22982:22982 <> l:273
binder 22984:22985 <> lc:274
binder 22987:22989 <> cns:275
R23010:23013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23000:23002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22994:22999 Coccinelle.dickson <> consnl:271 var
R23003:23007 Coccinelle.dickson Make consn def
R23009:23009 Coccinelle.dickson <> l:273 var
R23031:23049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23019:23021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23014:23018 Coccinelle.dickson <> lccns:272 var
R23024:23027 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23022:23023 Coccinelle.dickson <> lc:274 var
R23028:23030 Coccinelle.dickson <> cns:275 var
R23050:23056 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23059:23060 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23057:23058 <> ll:276
R23061:23067 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23071:23073 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23068:23070 <> ll':277
R23098:23145 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23074:23083 Coccinelle.dickson Make permut abbrev
R23090:23093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23088:23089 Coccinelle.dickson <> ll:276 var
R23094:23096 Coccinelle.dickson <> ll':277 var
R23085:23085 Coccinelle.dickson <> l:273 var
R23167:23214 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23146:23151 Coccinelle.dickson Make permut abbrev
R23165:23166 Coccinelle.dickson <> lc:274 var
R23154:23158 Coccinelle.dickson Make consn def
R23160:23161 Coccinelle.dickson <> ll:276 var
R23215:23220 Coccinelle.dickson Make permut abbrev
R23234:23236 Coccinelle.dickson <> cns:275 var
R23223:23227 Coccinelle.dickson Make consn def
R23229:23231 Coccinelle.dickson <> ll':277 var
binder 22922:22927 <> consnl:278
binder 22929:22933 <> lccns:279
R22955:22974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22936:22941 Coccinelle.dickson Make permut abbrev
R22950:22954 Coccinelle.dickson <> lccns:279 var
R22943:22948 Coccinelle.dickson <> consnl:278 var
binder 22982:22982 <> l:280
binder 22984:22985 <> lc:281
binder 22987:22989 <> cns:282
R23010:23013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23000:23002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22994:22999 Coccinelle.dickson <> consnl:278 var
R23003:23007 Coccinelle.dickson Make consn def
R23009:23009 Coccinelle.dickson <> l:280 var
R23031:23049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23019:23021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23014:23018 Coccinelle.dickson <> lccns:279 var
R23024:23027 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23022:23023 Coccinelle.dickson <> lc:281 var
R23028:23030 Coccinelle.dickson <> cns:282 var
R23050:23056 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23059:23060 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23057:23058 <> ll:283
R23061:23067 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23071:23073 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23068:23070 <> ll':284
R23098:23145 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23074:23083 Coccinelle.dickson Make permut abbrev
R23090:23093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23088:23089 Coccinelle.dickson <> ll:283 var
R23094:23096 Coccinelle.dickson <> ll':284 var
R23085:23085 Coccinelle.dickson <> l:280 var
R23167:23214 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23146:23151 Coccinelle.dickson Make permut abbrev
R23165:23166 Coccinelle.dickson <> lc:281 var
R23154:23158 Coccinelle.dickson Make consn def
R23160:23161 Coccinelle.dickson <> ll:283 var
R23215:23220 Coccinelle.dickson Make permut abbrev
R23234:23236 Coccinelle.dickson <> cns:282 var
R23223:23227 Coccinelle.dickson Make consn def
R23229:23231 Coccinelle.dickson <> ll':284 var
R23384:23386 Coq.Init.Datatypes <> nil constr
R23390:23392 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23389:23389 Coccinelle.dickson Make A defax
R23393:23396 Coq.Init.Datatypes <> list ind
R23398:23398 Coccinelle.dickson Make A defax
R23412:23414 Coq.Init.Datatypes <> nil constr
R23418:23420 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23417:23417 Coccinelle.dickson Make A defax
R23421:23424 Coq.Init.Datatypes <> list ind
R23426:23426 Coccinelle.dickson Make A defax
R23384:23386 Coq.Init.Datatypes <> nil constr
R23390:23392 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23389:23389 Coccinelle.dickson Make A defax
R23393:23396 Coq.Init.Datatypes <> list ind
R23398:23398 Coccinelle.dickson Make A defax
R23412:23414 Coq.Init.Datatypes <> nil constr
R23418:23420 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23417:23417 Coccinelle.dickson Make A defax
R23421:23424 Coq.Init.Datatypes <> list ind
R23426:23426 Coccinelle.dickson Make A defax
R23464:23467 Coccinelle.list_permut <> Pnil constr
R23464:23467 Coccinelle.list_permut <> Pnil constr
R23648:23657 Coccinelle.more_list <> split_list thm
R23648:23657 Coccinelle.more_list <> split_list thm
R23748:23751 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23757:23766 Coq.Init.Logic <> refl_equal abbrev
R23781:23787 Coq.Lists.List <> ass_app abbrev
R23748:23751 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R23757:23766 Coq.Init.Logic <> refl_equal abbrev
R23781:23787 Coq.Lists.List <> ass_app abbrev
R23781:23787 Coq.Lists.List <> ass_app abbrev
R23816:23825 Coq.Init.Logic <> refl_equal abbrev
R23816:23825 Coq.Init.Logic <> refl_equal abbrev
R23900:23903 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R23893:23893 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23896:23896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23899:23899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23900:23903 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R23893:23893 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23896:23896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23899:23899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23951:23972 Coccinelle.dickson Make permut_cons_inside defax
R23995:24004 Coq.Init.Logic <> refl_equal abbrev
R23951:23972 Coccinelle.dickson Make permut_cons_inside defax
R23951:23972 Coccinelle.dickson Make permut_cons_inside defax
R23951:23972 Coccinelle.dickson Make permut_cons_inside defax
R23995:24004 Coq.Init.Logic <> refl_equal abbrev
R24019:24036 Coccinelle.dickson Make permut_cons_inside defax
R24019:24036 Coccinelle.dickson Make permut_cons_inside defax
R24019:24036 Coccinelle.dickson Make permut_cons_inside defax
R24019:24036 Coccinelle.dickson Make permut_cons_inside defax
R24148:24157 Coq.Init.Logic <> refl_equal abbrev
R24163:24172 Coq.Init.Logic <> refl_equal abbrev
R24148:24157 Coq.Init.Logic <> refl_equal abbrev
R24163:24172 Coq.Init.Logic <> refl_equal abbrev
R24237:24240 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24230:24230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24233:24233 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24236:24236 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24237:24240 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24230:24230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24233:24233 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24236:24236 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24272:24293 Coccinelle.dickson Make permut_cons_inside defax
R24316:24325 Coq.Init.Logic <> refl_equal abbrev
R24272:24293 Coccinelle.dickson Make permut_cons_inside defax
R24272:24293 Coccinelle.dickson Make permut_cons_inside defax
R24272:24293 Coccinelle.dickson Make permut_cons_inside defax
R24316:24325 Coq.Init.Logic <> refl_equal abbrev
R24340:24350 Coq.Lists.List <> app_nil_end thm
R24340:24350 Coq.Lists.List <> app_nil_end thm
R24340:24350 Coq.Lists.List <> app_nil_end thm
R24383:24393 Coccinelle.dickson Make permut_cons defax
R24383:24393 Coccinelle.dickson Make permut_cons defax
R24383:24393 Coccinelle.dickson Make permut_cons defax
R24383:24393 Coccinelle.dickson Make permut_cons defax
R24475:24478 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24488:24497 Coq.Init.Logic <> refl_equal abbrev
R24475:24478 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24488:24497 Coq.Init.Logic <> refl_equal abbrev
R24512:24518 Coq.Lists.List <> ass_app abbrev
R24512:24518 Coq.Lists.List <> ass_app abbrev
R24512:24518 Coq.Lists.List <> ass_app abbrev
R24543:24552 Coq.Init.Logic <> refl_equal abbrev
R24543:24552 Coq.Init.Logic <> refl_equal abbrev
R24617:24620 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24609:24609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24612:24613 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24616:24616 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24617:24620 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24609:24609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24612:24613 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24616:24616 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24670:24684 Coccinelle.dickson Make permut_cons defax
R24707:24716 Coq.Init.Logic <> refl_equal abbrev
R24670:24684 Coccinelle.dickson Make permut_cons defax
R24670:24684 Coccinelle.dickson Make permut_cons defax
R24670:24684 Coccinelle.dickson Make permut_cons defax
R24707:24716 Coq.Init.Logic <> refl_equal abbrev
R24738:24755 Coccinelle.dickson Make permut_cons_inside defax
R24738:24755 Coccinelle.dickson Make permut_cons_inside defax
R24738:24755 Coccinelle.dickson Make permut_cons_inside defax
R24738:24755 Coccinelle.dickson Make permut_cons_inside defax
R24811:24815 Coccinelle.dickson Make consn def
R24823:24826 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24841:24850 Coq.Init.Logic <> refl_equal abbrev
R24856:24865 Coq.Init.Logic <> refl_equal abbrev
R24811:24815 Coccinelle.dickson Make consn def
R24823:24826 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24841:24850 Coq.Init.Logic <> refl_equal abbrev
R24856:24865 Coq.Init.Logic <> refl_equal abbrev
prf 24884:24899 Make multiset_closure
binder 24912:24912 <> R:285
R24929:24934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24915:24924 Coq.Relations.Relation_Definitions <> transitive def
R24928:24928 Coccinelle.dickson <> R:285 var
binder 24942:24942 <> p:286
binder 24944:24944 <> q:287
R24989:24994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24947:24956 Coccinelle.TransClosure <> trans_clos ind
R24988:24988 Coccinelle.dickson <> q:287 var
R24986:24986 Coccinelle.dickson <> p:286 var
R24959:24981 Coccinelle.dickson Make multiset_extension_step ind
R24983:24983 Coccinelle.dickson <> R:285 var
R24995:25001 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25003:25004 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25002:25002 <> l:288
R25005:25011 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25014:25017 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25012:25013 <> pq:289
R25046:25051 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25018:25023 Coccinelle.dickson Make permut abbrev
R25028:25028 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25038:25042 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25029:25035 Coccinelle.dickson Make appendn def
R25037:25037 Coccinelle.dickson <> l:288 var
R25043:25044 Coccinelle.dickson <> pq:289 var
R25025:25025 Coccinelle.dickson <> p:286 var
R25078:25083 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25052:25057 Coccinelle.dickson Make permut abbrev
R25062:25062 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25070:25074 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25063:25067 Coccinelle.dickson Make consn def
R25069:25069 Coccinelle.dickson <> l:288 var
R25075:25076 Coccinelle.dickson <> pq:289 var
R25059:25059 Coccinelle.dickson <> q:287 var
R25092:25097 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25085:25088 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R25084:25084 Coccinelle.dickson <> l:288 var
R25089:25091 Coq.Init.Datatypes <> nil constr
R25098:25098 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25171:25178 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25274:25274 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
binder 25106:25106 <> a:290
binder 25116:25117 <> la:291
R25131:25134 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25120:25121 Coq.Lists.List <> In def
R25130:25130 Coccinelle.dickson <> l:288 var
R25123:25123 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25125:25125 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25128:25128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25124:25124 Coccinelle.dickson <> a:290 var
R25126:25127 Coccinelle.dickson <> la:291 var
binder 25142:25142 <> b:292
R25162:25165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25145:25147 Coccinelle.more_list <> mem def
R25160:25161 Coccinelle.dickson <> la:291 var
R25158:25158 Coccinelle.dickson <> b:292 var
R25149:25156 Coccinelle.dickson Make eq_A defax
R25166:25166 Coccinelle.dickson <> R:285 var
R25168:25168 Coccinelle.dickson <> b:292 var
R25170:25170 Coccinelle.dickson <> a:290 var
R25179:25179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25196:25200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 25187:25187 <> a:293
R25190:25190 Coq.Init.Logic <> ::type_scope:'~'_x not
R25191:25191 Coccinelle.dickson <> R:285 var
R25193:25193 Coccinelle.dickson <> a:293 var
R25195:25195 Coccinelle.dickson <> a:293 var
binder 25208:25208 <> a:294
R25235:25238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25211:25213 Coccinelle.more_list <> mem def
R25227:25231 Coccinelle.dickson Make consn def
R25233:25233 Coccinelle.dickson <> l:288 var
R25224:25224 Coccinelle.dickson <> a:294 var
R25215:25222 Coccinelle.dickson Make eq_A defax
R25265:25268 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25239:25241 Coccinelle.more_list <> mem def
R25255:25261 Coccinelle.dickson Make appendn def
R25263:25263 Coccinelle.dickson <> l:288 var
R25252:25252 Coccinelle.dickson <> a:294 var
R25243:25250 Coccinelle.dickson Make eq_A defax
R25269:25273 Coq.Init.Logic <> False ind
R25444:25447 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25438:25438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25440:25440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25443:25443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25448:25450 Coq.Init.Datatypes <> nil constr
R25444:25447 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25438:25438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25440:25440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25443:25443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25448:25450 Coq.Init.Datatypes <> nil constr
R25503:25513 Coq.Lists.List <> app_nil_end thm
R25503:25513 Coq.Lists.List <> app_nil_end thm
R25503:25513 Coq.Lists.List <> app_nil_end thm
R25649:25659 Coq.Lists.List <> app_nil_end thm
R25649:25659 Coq.Lists.List <> app_nil_end thm
R25649:25659 Coq.Lists.List <> app_nil_end thm
R25965:25967 Coccinelle.more_list <> mem def
R25981:25981 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25991:25995 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25982:25988 Coccinelle.dickson Make appendn def
R25969:25976 Coccinelle.dickson Make eq_A defax
R25965:25967 Coccinelle.more_list <> mem def
R25981:25981 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25991:25995 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25982:25988 Coccinelle.dickson Make appendn def
R25969:25976 Coccinelle.dickson Make eq_A defax
R26009:26013 Coq.Init.Logic <> proj1 thm
R26016:26029 Coccinelle.dickson Make mem_permut_mem defax
R26009:26013 Coq.Init.Logic <> proj1 thm
R26016:26029 Coccinelle.dickson Make mem_permut_mem defax
R26047:26051 Coq.Init.Logic <> proj1 thm
R26054:26067 Coccinelle.dickson Make mem_permut_mem defax
R26072:26081 Coccinelle.dickson Make permut_sym defax
R26047:26051 Coq.Init.Logic <> proj1 thm
R26054:26067 Coccinelle.dickson Make mem_permut_mem defax
R26072:26081 Coccinelle.dickson Make permut_sym defax
R26103:26112 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26118:26125 Coccinelle.dickson Make eq_proof defax
R26103:26112 Coq.Relations.Relation_Definitions <> equiv_refl proj
R26118:26125 Coccinelle.dickson Make eq_proof defax
R26140:26149 Coccinelle.more_list <> mem_or_app thm
R26140:26149 Coccinelle.more_list <> mem_or_app thm
R26140:26149 Coccinelle.more_list <> mem_or_app thm
R26180:26190 Coccinelle.more_list <> mem_bool_ok thm
R26214:26220 Coccinelle.dickson Make appendn def
R26196:26209 Coccinelle.dickson Make eq_bool_ok defax
R26180:26190 Coccinelle.more_list <> mem_bool_ok thm
R26214:26220 Coccinelle.dickson Make appendn def
R26196:26209 Coccinelle.dickson Make eq_bool_ok defax
R26233:26240 Coccinelle.more_list <> mem_bool def
R26257:26263 Coccinelle.dickson Make appendn def
R26242:26252 Coccinelle.dickson Make eq_bool defax
R26233:26240 Coccinelle.more_list <> mem_bool def
R26257:26263 Coccinelle.dickson Make appendn def
R26242:26252 Coccinelle.dickson Make eq_bool defax
R26321:26330 Coccinelle.dickson Make in_appendn thm
R26321:26330 Coccinelle.dickson Make in_appendn thm
R26389:26401 Coccinelle.more_list <> mem_split_set thm
R26407:26416 Coccinelle.dickson Make eq_bool_ok defax
R26389:26401 Coccinelle.more_list <> mem_split_set thm
R26407:26416 Coccinelle.dickson Make eq_bool_ok defax
R26519:26526 Coq.Lists.List <> In_split abbrev
R26519:26526 Coq.Lists.List <> In_split abbrev
R26577:26587 Coccinelle.dickson Make appendn_app thm
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26577:26587 Coccinelle.dickson Make appendn_app thm
R26577:26587 Coccinelle.dickson Make appendn_app thm
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26628:26634 Coq.Lists.List <> ass_app abbrev
R26666:26672 Coq.Lists.List <> ass_app abbrev
R26666:26672 Coq.Lists.List <> ass_app abbrev
R26666:26672 Coq.Lists.List <> ass_app abbrev
R26694:26705 Coccinelle.dickson Make permut_trans defax
R26708:26717 Coccinelle.dickson Make permut_sym defax
R26694:26705 Coccinelle.dickson Make permut_trans defax
R26708:26717 Coccinelle.dickson Make permut_sym defax
R26762:26779 Coccinelle.dickson Make permut_cons_inside defax
R26762:26779 Coccinelle.dickson Make permut_cons_inside defax
R26762:26779 Coccinelle.dickson Make permut_cons_inside defax
R26762:26779 Coccinelle.dickson Make permut_cons_inside defax
R26800:26806 Coq.Lists.List <> ass_app abbrev
R26800:26806 Coq.Lists.List <> ass_app abbrev
R26800:26806 Coq.Lists.List <> ass_app abbrev
R26828:26848 Coccinelle.dickson Make remove_equiv_is_sound defax
R26851:26855 Coccinelle.dickson Make consn def
R26860:26863 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26828:26848 Coccinelle.dickson Make remove_equiv_is_sound defax
R26851:26855 Coccinelle.dickson Make consn def
R26860:26863 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26886:26897 Coccinelle.more_list <> remove_equiv def
R26899:26899 Coccinelle.dickson Make A defax
R26901:26907 Coccinelle.dickson Make eq_bool defax
R26911:26915 Coccinelle.dickson Make consn def
R26920:26923 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26886:26897 Coccinelle.more_list <> remove_equiv def
R26899:26899 Coccinelle.dickson Make A defax
R26901:26907 Coccinelle.dickson Make eq_bool defax
R26911:26915 Coccinelle.dickson Make consn def
R26920:26923 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26997:27017 Coccinelle.dickson Make multiset_closure_aux3 thm
R27022:27025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27119:27122 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27080:27080 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27082:27083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27118:27118 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27087:27090 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27095:27098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27102:27106 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27117:27117 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27107:27113 Coccinelle.dickson Make appendn def
R27139:27142 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26997:27017 Coccinelle.dickson Make multiset_closure_aux3 thm
R27022:27025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27119:27122 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27080:27080 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27082:27083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27118:27118 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27087:27090 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27095:27098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27102:27106 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27117:27117 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27107:27113 Coccinelle.dickson Make appendn def
R27139:27142 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27182:27185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27161:27172 Coccinelle.dickson Make permut_trans defax
R27182:27185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27161:27172 Coccinelle.dickson Make permut_trans defax
R27228:27228 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27238:27242 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27231:27234 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27209:27220 Coccinelle.dickson Make permut_trans defax
R27228:27228 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27238:27242 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27231:27234 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27209:27220 Coccinelle.dickson Make permut_trans defax
R27259:27269 Coccinelle.dickson Make permut_app2 defax
R27259:27269 Coccinelle.dickson Make permut_app2 defax
R27259:27269 Coccinelle.dickson Make permut_app2 defax
R27306:27306 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27316:27321 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27368:27368 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27309:27312 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27332:27335 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27322:27328 Coccinelle.dickson Make appendn def
R27339:27342 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27347:27350 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27362:27365 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27351:27357 Coccinelle.dickson Make appendn def
R27287:27298 Coccinelle.dickson Make permut_trans defax
R27306:27306 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27316:27321 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27368:27368 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27309:27312 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27332:27335 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27322:27328 Coccinelle.dickson Make appendn def
R27339:27342 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27347:27350 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27362:27365 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27351:27357 Coccinelle.dickson Make appendn def
R27287:27298 Coccinelle.dickson Make permut_trans defax
R27383:27393 Coccinelle.dickson Make permut_app1 defax
R27383:27393 Coccinelle.dickson Make permut_app1 defax
R27383:27393 Coccinelle.dickson Make permut_app1 defax
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27445:27455 Coccinelle.dickson Make permut_app2 defax
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27425:27431 Coq.Lists.List <> ass_app abbrev
R27445:27455 Coccinelle.dickson Make permut_app2 defax
R27445:27455 Coccinelle.dickson Make permut_app2 defax
R27466:27477 Coccinelle.dickson Make permut_trans defax
R27482:27500 Coccinelle.dickson Make list_permut_app_app defax
R27466:27477 Coccinelle.dickson Make permut_trans defax
R27482:27500 Coccinelle.dickson Make list_permut_app_app defax
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27545:27555 Coccinelle.dickson Make permut_app1 defax
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27525:27531 Coq.Lists.List <> ass_app abbrev
R27545:27555 Coccinelle.dickson Make permut_app1 defax
R27545:27555 Coccinelle.dickson Make permut_app1 defax
R27566:27572 Coq.Lists.List <> ass_app abbrev
R27566:27572 Coq.Lists.List <> ass_app abbrev
R27566:27572 Coq.Lists.List <> ass_app abbrev
R27583:27594 Coccinelle.dickson Make permut_trans defax
R27597:27615 Coccinelle.dickson Make list_permut_app_app defax
R27583:27594 Coccinelle.dickson Make permut_trans defax
R27597:27615 Coccinelle.dickson Make list_permut_app_app defax
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27667:27677 Coccinelle.dickson Make permut_app1 defax
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27642:27648 Coq.Lists.List <> ass_app abbrev
R27667:27677 Coccinelle.dickson Make permut_app1 defax
R27667:27677 Coccinelle.dickson Make permut_app1 defax
R27667:27677 Coccinelle.dickson Make permut_app1 defax
R27667:27677 Coccinelle.dickson Make permut_app1 defax
R27688:27699 Coccinelle.dickson Make permut_trans defax
R27702:27720 Coccinelle.dickson Make list_permut_app_app defax
R27688:27699 Coccinelle.dickson Make permut_trans defax
R27702:27720 Coccinelle.dickson Make list_permut_app_app defax
R27747:27753 Coq.Lists.List <> ass_app abbrev
R27767:27777 Coccinelle.dickson Make permut_app1 defax
R27747:27753 Coq.Lists.List <> ass_app abbrev
R27747:27753 Coq.Lists.List <> ass_app abbrev
R27747:27753 Coq.Lists.List <> ass_app abbrev
R27747:27753 Coq.Lists.List <> ass_app abbrev
R27767:27777 Coccinelle.dickson Make permut_app1 defax
R27767:27777 Coccinelle.dickson Make permut_app1 defax
R27796:27806 Coccinelle.dickson Make appendn_app thm
R27815:27828 Coccinelle.dickson Make permut_appendn thm
R27796:27806 Coccinelle.dickson Make appendn_app thm
R27796:27806 Coccinelle.dickson Make appendn_app thm
R27796:27806 Coccinelle.dickson Make appendn_app thm
R27796:27806 Coccinelle.dickson Make appendn_app thm
R27815:27828 Coccinelle.dickson Make permut_appendn thm
R27855:27861 Coq.Lists.List <> ass_app abbrev
R27855:27861 Coq.Lists.List <> ass_app abbrev
R27855:27861 Coq.Lists.List <> ass_app abbrev
R27932:27935 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27889:27893 Coccinelle.dickson Make consn def
R27898:27901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27924:27927 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27902:27902 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27904:27905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27923:27923 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27909:27912 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27915:27918 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27870:27881 Coccinelle.dickson Make permut_trans defax
R27932:27935 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27889:27893 Coccinelle.dickson Make consn def
R27898:27901 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27924:27927 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27902:27902 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27904:27905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27923:27923 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27909:27912 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27915:27918 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27870:27881 Coccinelle.dickson Make permut_trans defax
R27964:27974 Coccinelle.dickson Make permut_app2 defax
R27985:27993 Coccinelle.dickson Make consn_app thm
R28009:28018 Coccinelle.dickson Make permut_sym defax
R28033:28050 Coccinelle.dickson Make permut_cons_inside defax
R27964:27974 Coccinelle.dickson Make permut_app2 defax
R27964:27974 Coccinelle.dickson Make permut_app2 defax
R27985:27993 Coccinelle.dickson Make consn_app thm
R27985:27993 Coccinelle.dickson Make consn_app thm
R28009:28018 Coccinelle.dickson Make permut_sym defax
R28033:28050 Coccinelle.dickson Make permut_cons_inside defax
R28033:28050 Coccinelle.dickson Make permut_cons_inside defax
R28033:28050 Coccinelle.dickson Make permut_cons_inside defax
R28081:28084 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28059:28070 Coccinelle.dickson Make permut_trans defax
R28081:28084 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28059:28070 Coccinelle.dickson Make permut_trans defax
R28101:28111 Coccinelle.dickson Make permut_app2 defax
R28101:28111 Coccinelle.dickson Make permut_app2 defax
R28101:28111 Coccinelle.dickson Make permut_app2 defax
R28134:28145 Coccinelle.dickson Make permut_trans defax
R28148:28166 Coccinelle.dickson Make list_permut_app_app defax
R28134:28145 Coccinelle.dickson Make permut_trans defax
R28148:28166 Coccinelle.dickson Make list_permut_app_app defax
R28203:28207 Coccinelle.dickson Make consn def
R28212:28215 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28183:28194 Coccinelle.dickson Make permut_trans defax
R28203:28207 Coccinelle.dickson Make consn def
R28212:28215 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28183:28194 Coccinelle.dickson Make permut_trans defax
R28229:28238 Coccinelle.dickson Make permut_sym defax
R28229:28238 Coccinelle.dickson Make permut_sym defax
R28261:28269 Coccinelle.dickson Make consn_app thm
R28261:28269 Coccinelle.dickson Make consn_app thm
R28261:28269 Coccinelle.dickson Make consn_app thm
R28285:28294 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28300:28307 Coccinelle.dickson Make eq_proof defax
R28285:28294 Coq.Relations.Relation_Definitions <> equiv_refl proj
R28300:28307 Coccinelle.dickson Make eq_proof defax
R28464:28470 Coq.Lists.List <> ass_app abbrev
R28495:28504 Coccinelle.more_list <> mem_or_app thm
R28464:28470 Coq.Lists.List <> ass_app abbrev
R28464:28470 Coq.Lists.List <> ass_app abbrev
R28495:28504 Coccinelle.more_list <> mem_or_app thm
R28495:28504 Coccinelle.more_list <> mem_or_app thm
R28587:28590 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28593:28596 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28587:28590 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28593:28596 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28620:28629 Coccinelle.more_list <> mem_insert thm
R28620:28629 Coccinelle.more_list <> mem_insert thm
R28652:28661 Coccinelle.more_list <> mem_or_app thm
R28652:28661 Coccinelle.more_list <> mem_or_app thm
R28652:28661 Coccinelle.more_list <> mem_or_app thm
R28771:28784 Coccinelle.dickson Make mem_permut_mem defax
R28805:28814 Coccinelle.more_list <> mem_or_app thm
R28771:28784 Coccinelle.dickson Make mem_permut_mem defax
R28771:28784 Coccinelle.dickson Make mem_permut_mem defax
R28805:28814 Coccinelle.more_list <> mem_or_app thm
R28805:28814 Coccinelle.more_list <> mem_or_app thm
R28857:28860 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28863:28866 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28857:28860 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28863:28866 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28894:28903 Coccinelle.dickson Make in_appendn thm
R28894:28903 Coccinelle.dickson Make in_appendn thm
R29014:29022 Coccinelle.more_list <> in_insert thm
R29014:29022 Coccinelle.more_list <> in_insert thm
R29034:29057 Coccinelle.list_permut <> in_permut_in thm
R29070:29078 Coq.Lists.List <> in_or_app thm
R29034:29057 Coccinelle.list_permut <> in_permut_in thm
R29034:29057 Coccinelle.list_permut <> in_permut_in thm
R29070:29078 Coq.Lists.List <> in_or_app thm
R29114:29116 Coccinelle.more_list <> mem def
R29118:29121 Coccinelle.dickson Make eq_A defax
R29114:29116 Coccinelle.more_list <> mem def
R29118:29121 Coccinelle.dickson Make eq_A defax
R29142:29155 Coccinelle.dickson Make mem_permut_mem defax
R29142:29155 Coccinelle.dickson Make mem_permut_mem defax
R29142:29155 Coccinelle.dickson Make mem_permut_mem defax
R29172:29180 Coccinelle.dickson Make mem_consn thm
R29172:29180 Coccinelle.dickson Make mem_consn thm
R29172:29180 Coccinelle.dickson Make mem_consn thm
R29249:29262 Coccinelle.dickson Make mem_permut_mem defax
R29283:29292 Coccinelle.more_list <> mem_or_app thm
R29249:29262 Coccinelle.dickson Make mem_permut_mem defax
R29249:29262 Coccinelle.dickson Make mem_permut_mem defax
R29283:29292 Coccinelle.more_list <> mem_or_app thm
R29283:29292 Coccinelle.more_list <> mem_or_app thm
R29334:29337 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29340:29343 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29334:29337 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29340:29343 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29358:29366 Coq.Lists.List <> in_or_app thm
R29388:29397 Coq.Init.Logic <> refl_equal abbrev
R29358:29366 Coq.Lists.List <> in_or_app thm
R29388:29397 Coq.Init.Logic <> refl_equal abbrev
R29411:29420 Coccinelle.more_list <> mem_or_app thm
R29411:29420 Coccinelle.more_list <> mem_or_app thm
R29411:29420 Coccinelle.more_list <> mem_or_app thm
R29485:29493 Coccinelle.more_list <> in_insert thm
R29485:29493 Coccinelle.more_list <> in_insert thm
R29514:29537 Coccinelle.list_permut <> in_permut_in thm
R29514:29537 Coccinelle.list_permut <> in_permut_in thm
R29514:29537 Coccinelle.list_permut <> in_permut_in thm
R29550:29558 Coq.Lists.List <> in_or_app thm
R29550:29558 Coq.Lists.List <> in_or_app thm
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29654:29660 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29694:29700 Coq.Lists.List <> ass_app abbrev
R29759:29768 Coccinelle.more_list <> mem_or_app thm
R29759:29768 Coccinelle.more_list <> mem_or_app thm
R29759:29768 Coccinelle.more_list <> mem_or_app thm
R29852:29861 Coccinelle.more_list <> mem_or_app thm
R29852:29861 Coccinelle.more_list <> mem_or_app thm
R29852:29861 Coccinelle.more_list <> mem_or_app thm
R29966:29969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29972:29975 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29966:29969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29972:29975 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29990:29998 Coq.Lists.List <> in_or_app thm
R30020:30029 Coq.Init.Logic <> refl_equal abbrev
R29990:29998 Coq.Lists.List <> in_or_app thm
R30020:30029 Coq.Init.Logic <> refl_equal abbrev
R30038:30047 Coccinelle.more_list <> mem_insert thm
R30038:30047 Coccinelle.more_list <> mem_insert thm
R30125:30138 Coccinelle.dickson Make mem_permut_mem defax
R30159:30168 Coccinelle.more_list <> mem_or_app thm
R30125:30138 Coccinelle.dickson Make mem_permut_mem defax
R30125:30138 Coccinelle.dickson Make mem_permut_mem defax
R30159:30168 Coccinelle.more_list <> mem_or_app thm
R30159:30168 Coccinelle.more_list <> mem_or_app thm
R30211:30214 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30217:30220 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30211:30214 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30217:30220 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30235:30243 Coq.Lists.List <> in_or_app thm
R30265:30274 Coq.Init.Logic <> refl_equal abbrev
R30235:30243 Coq.Lists.List <> in_or_app thm
R30265:30274 Coq.Init.Logic <> refl_equal abbrev
R30288:30297 Coccinelle.more_list <> mem_or_app thm
R30288:30297 Coccinelle.more_list <> mem_or_app thm
R30288:30297 Coccinelle.more_list <> mem_or_app thm
R30363:30371 Coccinelle.dickson Make consn_app thm
R30385:30394 Coccinelle.more_list <> mem_or_app thm
R30363:30371 Coccinelle.dickson Make consn_app thm
R30363:30371 Coccinelle.dickson Make consn_app thm
R30385:30394 Coccinelle.more_list <> mem_or_app thm
R30385:30394 Coccinelle.more_list <> mem_or_app thm
R30417:30426 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30432:30439 Coccinelle.dickson Make eq_proof defax
R30417:30426 Coq.Relations.Relation_Definitions <> equiv_refl proj
R30432:30439 Coccinelle.dickson Make eq_proof defax
R30454:30464 Coccinelle.dickson Make appendn_app thm
R30454:30464 Coccinelle.dickson Make appendn_app thm
R30454:30464 Coccinelle.dickson Make appendn_app thm
R30491:30504 Coccinelle.dickson Make mem_permut_mem defax
R30509:30522 Coccinelle.dickson Make permut_appendn thm
R30491:30504 Coccinelle.dickson Make mem_permut_mem defax
R30509:30522 Coccinelle.dickson Make permut_appendn thm
R30491:30504 Coccinelle.dickson Make mem_permut_mem defax
R30509:30522 Coccinelle.dickson Make permut_appendn thm
R30550:30560 Coccinelle.dickson Make appendn_app thm
R30574:30583 Coccinelle.more_list <> mem_or_app thm
R30550:30560 Coccinelle.dickson Make appendn_app thm
R30550:30560 Coccinelle.dickson Make appendn_app thm
R30574:30583 Coccinelle.more_list <> mem_or_app thm
R30574:30583 Coccinelle.more_list <> mem_or_app thm
R30594:30604 Coccinelle.dickson Make appendn_app thm
R30630:30639 Coccinelle.more_list <> mem_or_app thm
R30594:30604 Coccinelle.dickson Make appendn_app thm
R30594:30604 Coccinelle.dickson Make appendn_app thm
R30630:30639 Coccinelle.more_list <> mem_or_app thm
R30630:30639 Coccinelle.more_list <> mem_or_app thm
R30738:30747 Coccinelle.more_list <> mem_or_app thm
R30738:30747 Coccinelle.more_list <> mem_or_app thm
R30738:30747 Coccinelle.more_list <> mem_or_app thm
R30784:30793 Coccinelle.more_list <> mem_or_app thm
R30784:30793 Coccinelle.more_list <> mem_or_app thm
R30784:30793 Coccinelle.more_list <> mem_or_app thm
R30884:30893 Coccinelle.more_list <> mem_or_app thm
R30884:30893 Coccinelle.more_list <> mem_or_app thm
R30884:30893 Coccinelle.more_list <> mem_or_app thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R31019:31028 Coccinelle.more_list <> mem_insert thm
R31042:31050 Coccinelle.dickson Make consn_app thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R30995:31003 Coccinelle.dickson Make consn_app thm
R31019:31028 Coccinelle.more_list <> mem_insert thm
R31042:31050 Coccinelle.dickson Make consn_app thm
R31042:31050 Coccinelle.dickson Make consn_app thm
R31063:31076 Coccinelle.dickson Make mem_permut_mem defax
R31081:31092 Coccinelle.dickson Make permut_consn thm
R31108:31116 Coccinelle.dickson Make consn_app thm
R31130:31139 Coccinelle.more_list <> mem_or_app thm
R31063:31076 Coccinelle.dickson Make mem_permut_mem defax
R31081:31092 Coccinelle.dickson Make permut_consn thm
R31063:31076 Coccinelle.dickson Make mem_permut_mem defax
R31081:31092 Coccinelle.dickson Make permut_consn thm
R31108:31116 Coccinelle.dickson Make consn_app thm
R31108:31116 Coccinelle.dickson Make consn_app thm
R31130:31139 Coccinelle.more_list <> mem_or_app thm
R31130:31139 Coccinelle.more_list <> mem_or_app thm
R31166:31176 Coccinelle.dickson Make appendn_app thm
R31190:31199 Coccinelle.more_list <> mem_or_app thm
R31227:31236 Coccinelle.more_list <> mem_or_app thm
R31251:31260 Coccinelle.more_list <> mem_insert thm
R31166:31176 Coccinelle.dickson Make appendn_app thm
R31166:31176 Coccinelle.dickson Make appendn_app thm
R31190:31199 Coccinelle.more_list <> mem_or_app thm
R31190:31199 Coccinelle.more_list <> mem_or_app thm
R31227:31236 Coccinelle.more_list <> mem_or_app thm
R31227:31236 Coccinelle.more_list <> mem_or_app thm
R31251:31260 Coccinelle.more_list <> mem_insert thm
R31317:31330 Coccinelle.dickson Make mem_permut_mem defax
R31317:31330 Coccinelle.dickson Make mem_permut_mem defax
R31317:31330 Coccinelle.dickson Make mem_permut_mem defax
R31389:31397 Coccinelle.dickson Make consn_app thm
R31413:31422 Coccinelle.more_list <> mem_insert thm
R31436:31444 Coccinelle.dickson Make consn_app thm
R31456:31469 Coccinelle.dickson Make mem_permut_mem defax
R31474:31485 Coccinelle.dickson Make permut_consn thm
R31501:31509 Coccinelle.dickson Make consn_app thm
R31523:31532 Coccinelle.more_list <> mem_or_app thm
R31389:31397 Coccinelle.dickson Make consn_app thm
R31389:31397 Coccinelle.dickson Make consn_app thm
R31413:31422 Coccinelle.more_list <> mem_insert thm
R31436:31444 Coccinelle.dickson Make consn_app thm
R31436:31444 Coccinelle.dickson Make consn_app thm
R31456:31469 Coccinelle.dickson Make mem_permut_mem defax
R31474:31485 Coccinelle.dickson Make permut_consn thm
R31456:31469 Coccinelle.dickson Make mem_permut_mem defax
R31474:31485 Coccinelle.dickson Make permut_consn thm
R31501:31509 Coccinelle.dickson Make consn_app thm
R31501:31509 Coccinelle.dickson Make consn_app thm
R31523:31532 Coccinelle.more_list <> mem_or_app thm
R31523:31532 Coccinelle.more_list <> mem_or_app thm
R31562:31572 Coccinelle.dickson Make appendn_app thm
R31599:31612 Coccinelle.dickson Make mem_permut_mem defax
R31617:31630 Coccinelle.dickson Make permut_appendn thm
R31562:31572 Coccinelle.dickson Make appendn_app thm
R31562:31572 Coccinelle.dickson Make appendn_app thm
R31599:31612 Coccinelle.dickson Make mem_permut_mem defax
R31617:31630 Coccinelle.dickson Make permut_appendn thm
R31599:31612 Coccinelle.dickson Make mem_permut_mem defax
R31617:31630 Coccinelle.dickson Make permut_appendn thm
R31658:31668 Coccinelle.dickson Make appendn_app thm
R31682:31691 Coccinelle.more_list <> mem_or_app thm
R31702:31712 Coccinelle.dickson Make appendn_app thm
R31658:31668 Coccinelle.dickson Make appendn_app thm
R31658:31668 Coccinelle.dickson Make appendn_app thm
R31682:31691 Coccinelle.more_list <> mem_or_app thm
R31682:31691 Coccinelle.more_list <> mem_or_app thm
R31702:31712 Coccinelle.dickson Make appendn_app thm
R31702:31712 Coccinelle.dickson Make appendn_app thm
R31739:31748 Coccinelle.more_list <> mem_or_app thm
R31841:31850 Coccinelle.more_list <> mem_or_app thm
R31739:31748 Coccinelle.more_list <> mem_or_app thm
R31739:31748 Coccinelle.more_list <> mem_or_app thm
R31841:31850 Coccinelle.more_list <> mem_or_app thm
R31841:31850 Coccinelle.more_list <> mem_or_app thm
R31897:31899 Coccinelle.more_list <> mem def
R31901:31904 Coccinelle.dickson Make eq_A defax
R31897:31899 Coccinelle.more_list <> mem def
R31901:31904 Coccinelle.dickson Make eq_A defax
R31978:31980 Coccinelle.more_list <> mem def
R31990:31996 Coccinelle.dickson Make appendn def
R31982:31985 Coccinelle.dickson Make eq_A defax
R31978:31980 Coccinelle.more_list <> mem def
R31990:31996 Coccinelle.dickson Make appendn def
R31982:31985 Coccinelle.dickson Make eq_A defax
R32022:32034 Coccinelle.more_list <> mem_split_set thm
R32040:32049 Coccinelle.dickson Make eq_bool_ok defax
R32022:32034 Coccinelle.more_list <> mem_split_set thm
R32040:32049 Coccinelle.dickson Make eq_bool_ok defax
R32124:32135 Coccinelle.dickson Make permut_trans defax
R32138:32147 Coccinelle.dickson Make permut_sym defax
R32124:32135 Coccinelle.dickson Make permut_trans defax
R32138:32147 Coccinelle.dickson Make permut_sym defax
R32189:32195 Coq.Lists.List <> ass_app abbrev
R32216:32233 Coccinelle.dickson Make permut_cons_inside defax
R32254:32260 Coq.Lists.List <> ass_app abbrev
R32189:32195 Coq.Lists.List <> ass_app abbrev
R32189:32195 Coq.Lists.List <> ass_app abbrev
R32216:32233 Coccinelle.dickson Make permut_cons_inside defax
R32216:32233 Coccinelle.dickson Make permut_cons_inside defax
R32216:32233 Coccinelle.dickson Make permut_cons_inside defax
R32254:32260 Coq.Lists.List <> ass_app abbrev
R32254:32260 Coq.Lists.List <> ass_app abbrev
R32254:32260 Coq.Lists.List <> ass_app abbrev
R32254:32260 Coq.Lists.List <> ass_app abbrev
R32282:32302 Coccinelle.dickson Make remove_equiv_is_sound defax
R32305:32309 Coccinelle.dickson Make consn def
R32330:32341 Coccinelle.more_list <> remove_equiv def
R32343:32343 Coccinelle.dickson Make A defax
R32345:32351 Coccinelle.dickson Make eq_bool defax
R32354:32358 Coccinelle.dickson Make consn def
R32430:32450 Coccinelle.dickson Make multiset_closure_aux3 thm
R32282:32302 Coccinelle.dickson Make remove_equiv_is_sound defax
R32305:32309 Coccinelle.dickson Make consn def
R32330:32341 Coccinelle.more_list <> remove_equiv def
R32343:32343 Coccinelle.dickson Make A defax
R32345:32351 Coccinelle.dickson Make eq_bool defax
R32354:32358 Coccinelle.dickson Make consn def
R32430:32450 Coccinelle.dickson Make multiset_closure_aux3 thm
R32527:32530 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32503:32503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32505:32506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32526:32526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32510:32514 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32525:32525 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32515:32521 Coccinelle.dickson Make appendn def
R32547:32551 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32563:32563 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32555:32558 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32527:32530 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32503:32503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32505:32506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32526:32526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32510:32514 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32525:32525 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32515:32521 Coccinelle.dickson Make appendn def
R32547:32551 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32563:32563 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32555:32558 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32608:32611 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32587:32598 Coccinelle.dickson Make permut_trans defax
R32608:32611 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32587:32598 Coccinelle.dickson Make permut_trans defax
R32656:32660 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32685:32685 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32670:32673 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32661:32667 Coccinelle.dickson Make appendn def
R32677:32680 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32635:32646 Coccinelle.dickson Make permut_trans defax
R32656:32660 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32685:32685 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32670:32673 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32661:32667 Coccinelle.dickson Make appendn def
R32677:32680 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32635:32646 Coccinelle.dickson Make permut_trans defax
R32700:32710 Coccinelle.dickson Make permut_app1 defax
R32700:32710 Coccinelle.dickson Make permut_app1 defax
R32700:32710 Coccinelle.dickson Make permut_app1 defax
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32763:32773 Coccinelle.dickson Make permut_app2 defax
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32738:32744 Coq.Lists.List <> ass_app abbrev
R32763:32773 Coccinelle.dickson Make permut_app2 defax
R32763:32773 Coccinelle.dickson Make permut_app2 defax
R32763:32773 Coccinelle.dickson Make permut_app2 defax
R32763:32773 Coccinelle.dickson Make permut_app2 defax
R32801:32801 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32811:32815 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32804:32807 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32816:32822 Coccinelle.dickson Make appendn def
R32782:32793 Coccinelle.dickson Make permut_trans defax
R32801:32801 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32811:32815 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32804:32807 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32816:32822 Coccinelle.dickson Make appendn def
R32782:32793 Coccinelle.dickson Make permut_trans defax
R32839:32849 Coccinelle.dickson Make permut_app2 defax
R32839:32849 Coccinelle.dickson Make permut_app2 defax
R32839:32849 Coccinelle.dickson Make permut_app2 defax
R32875:32881 Coq.Lists.List <> ass_app abbrev
R32892:32903 Coccinelle.dickson Make permut_trans defax
R32906:32924 Coccinelle.dickson Make list_permut_app_app defax
R32946:32956 Coccinelle.dickson Make permut_app2 defax
R32970:32976 Coq.Lists.List <> ass_app abbrev
R32990:33000 Coccinelle.dickson Make appendn_app thm
R33014:33024 Coccinelle.dickson Make permut_app1 defax
R32875:32881 Coq.Lists.List <> ass_app abbrev
R32875:32881 Coq.Lists.List <> ass_app abbrev
R32892:32903 Coccinelle.dickson Make permut_trans defax
R32906:32924 Coccinelle.dickson Make list_permut_app_app defax
R32946:32956 Coccinelle.dickson Make permut_app2 defax
R32946:32956 Coccinelle.dickson Make permut_app2 defax
R32970:32976 Coq.Lists.List <> ass_app abbrev
R32970:32976 Coq.Lists.List <> ass_app abbrev
R32990:33000 Coccinelle.dickson Make appendn_app thm
R32990:33000 Coccinelle.dickson Make appendn_app thm
R33014:33024 Coccinelle.dickson Make permut_app1 defax
R33014:33024 Coccinelle.dickson Make permut_app1 defax
R33033:33046 Coccinelle.dickson Make permut_appendn thm
R33033:33046 Coccinelle.dickson Make permut_appendn thm
R33100:33103 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33093:33097 Coccinelle.dickson Make consn def
R33107:33110 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33113:33116 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33074:33085 Coccinelle.dickson Make permut_trans defax
R33100:33103 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33093:33097 Coccinelle.dickson Make consn def
R33107:33110 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33113:33116 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33074:33085 Coccinelle.dickson Make permut_trans defax
R33151:33157 Coq.Lists.List <> ass_app abbrev
R33166:33175 Coccinelle.dickson Make permut_sym defax
R33190:33207 Coccinelle.dickson Make permut_cons_inside defax
R33151:33157 Coq.Lists.List <> ass_app abbrev
R33151:33157 Coq.Lists.List <> ass_app abbrev
R33166:33175 Coccinelle.dickson Make permut_sym defax
R33190:33207 Coccinelle.dickson Make permut_cons_inside defax
R33190:33207 Coccinelle.dickson Make permut_cons_inside defax
R33190:33207 Coccinelle.dickson Make permut_cons_inside defax
R33232:33238 Coq.Lists.List <> ass_app abbrev
R33257:33267 Coccinelle.dickson Make permut_app2 defax
R33232:33238 Coq.Lists.List <> ass_app abbrev
R33232:33238 Coq.Lists.List <> ass_app abbrev
R33232:33238 Coq.Lists.List <> ass_app abbrev
R33232:33238 Coq.Lists.List <> ass_app abbrev
R33257:33267 Coccinelle.dickson Make permut_app2 defax
R33257:33267 Coccinelle.dickson Make permut_app2 defax
R33257:33267 Coccinelle.dickson Make permut_app2 defax
R33257:33267 Coccinelle.dickson Make permut_app2 defax
R33304:33307 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33295:33299 Coccinelle.dickson Make consn def
R33308:33312 Coccinelle.dickson Make consn def
R33276:33287 Coccinelle.dickson Make permut_trans defax
R33304:33307 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33295:33299 Coccinelle.dickson Make consn def
R33308:33312 Coccinelle.dickson Make consn def
R33276:33287 Coccinelle.dickson Make permut_trans defax
R33330:33340 Coccinelle.dickson Make permut_app1 defax
R33349:33358 Coccinelle.dickson Make permut_sym defax
R33330:33340 Coccinelle.dickson Make permut_app1 defax
R33330:33340 Coccinelle.dickson Make permut_app1 defax
R33349:33358 Coccinelle.dickson Make permut_sym defax
R33384:33392 Coccinelle.dickson Make consn_app thm
R33401:33412 Coccinelle.dickson Make permut_consn thm
R33384:33392 Coccinelle.dickson Make consn_app thm
R33384:33392 Coccinelle.dickson Make consn_app thm
R33401:33412 Coccinelle.dickson Make permut_consn thm
R33446:33449 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33421:33436 Coccinelle.dickson Make permut_trans defax
R33446:33449 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33421:33436 Coccinelle.dickson Make permut_trans defax
R33462:33484 Coccinelle.dickson Make list_permut_app_app defax
R33462:33484 Coccinelle.dickson Make list_permut_app_app defax
R33493:33506 Coccinelle.dickson Make permut_sym defax
R33493:33506 Coccinelle.dickson Make permut_sym defax
R33669:33678 Coccinelle.more_list <> mem_or_app thm
R33669:33678 Coccinelle.more_list <> mem_or_app thm
R33669:33678 Coccinelle.more_list <> mem_or_app thm
R33759:33772 Coccinelle.dickson Make mem_permut_mem defax
R33759:33772 Coccinelle.dickson Make mem_permut_mem defax
R33759:33772 Coccinelle.dickson Make mem_permut_mem defax
R33793:33802 Coccinelle.more_list <> mem_or_app thm
R33793:33802 Coccinelle.more_list <> mem_or_app thm
R33793:33802 Coccinelle.more_list <> mem_or_app thm
R33831:33840 Coccinelle.dickson Make in_appendn thm
R33831:33840 Coccinelle.dickson Make in_appendn thm
R33954:33977 Coccinelle.list_permut <> in_permut_in thm
R33954:33977 Coccinelle.list_permut <> in_permut_in thm
R33954:33977 Coccinelle.list_permut <> in_permut_in thm
R33990:33998 Coq.Lists.List <> in_or_app thm
R33990:33998 Coq.Lists.List <> in_or_app thm
R34040:34053 Coccinelle.dickson Make mem_permut_mem defax
R34074:34083 Coccinelle.more_list <> mem_or_app thm
R34040:34053 Coccinelle.dickson Make mem_permut_mem defax
R34040:34053 Coccinelle.dickson Make mem_permut_mem defax
R34074:34083 Coccinelle.more_list <> mem_or_app thm
R34074:34083 Coccinelle.more_list <> mem_or_app thm
R34104:34117 Coccinelle.dickson Make mem_permut_mem defax
R34104:34117 Coccinelle.dickson Make mem_permut_mem defax
R34104:34117 Coccinelle.dickson Make mem_permut_mem defax
R34134:34142 Coccinelle.dickson Make mem_consn thm
R34134:34142 Coccinelle.dickson Make mem_consn thm
R34134:34142 Coccinelle.dickson Make mem_consn thm
R34209:34232 Coccinelle.list_permut <> in_permut_in thm
R34245:34253 Coq.Lists.List <> in_or_app thm
R34209:34232 Coccinelle.list_permut <> in_permut_in thm
R34209:34232 Coccinelle.list_permut <> in_permut_in thm
R34245:34253 Coq.Lists.List <> in_or_app thm
R34307:34313 Coq.Lists.List <> ass_app abbrev
R34324:34330 Coq.Lists.List <> ass_app abbrev
R34307:34313 Coq.Lists.List <> ass_app abbrev
R34307:34313 Coq.Lists.List <> ass_app abbrev
R34324:34330 Coq.Lists.List <> ass_app abbrev
R34324:34330 Coq.Lists.List <> ass_app abbrev
R34377:34386 Coccinelle.more_list <> mem_or_app thm
R34377:34386 Coccinelle.more_list <> mem_or_app thm
R34377:34386 Coccinelle.more_list <> mem_or_app thm
R34505:34514 Coccinelle.more_list <> mem_or_app thm
R34505:34514 Coccinelle.more_list <> mem_or_app thm
R34505:34514 Coccinelle.more_list <> mem_or_app thm
R34615:34628 Coccinelle.dickson Make mem_permut_mem defax
R34650:34659 Coccinelle.more_list <> mem_or_app thm
R34615:34628 Coccinelle.dickson Make mem_permut_mem defax
R34615:34628 Coccinelle.dickson Make mem_permut_mem defax
R34650:34659 Coccinelle.more_list <> mem_or_app thm
R34650:34659 Coccinelle.more_list <> mem_or_app thm
R34714:34723 Coccinelle.dickson Make in_appendn thm
R34714:34723 Coccinelle.dickson Make in_appendn thm
R34864:34887 Coccinelle.list_permut <> in_permut_in thm
R34864:34887 Coccinelle.list_permut <> in_permut_in thm
R34864:34887 Coccinelle.list_permut <> in_permut_in thm
R34900:34908 Coq.Lists.List <> in_or_app thm
R34900:34908 Coq.Lists.List <> in_or_app thm
R34933:34942 Coccinelle.more_list <> mem_eq_mem thm
R34944:34951 Coccinelle.dickson Make eq_proof defax
R34933:34942 Coccinelle.more_list <> mem_eq_mem thm
R34944:34951 Coccinelle.dickson Make eq_proof defax
R34998:35011 Coccinelle.dickson Make mem_permut_mem defax
R35033:35042 Coccinelle.more_list <> mem_or_app thm
R35063:35076 Coccinelle.dickson Make mem_permut_mem defax
R34998:35011 Coccinelle.dickson Make mem_permut_mem defax
R34998:35011 Coccinelle.dickson Make mem_permut_mem defax
R35033:35042 Coccinelle.more_list <> mem_or_app thm
R35033:35042 Coccinelle.more_list <> mem_or_app thm
R35063:35076 Coccinelle.dickson Make mem_permut_mem defax
R35063:35076 Coccinelle.dickson Make mem_permut_mem defax
R35093:35101 Coccinelle.dickson Make mem_consn thm
R35093:35101 Coccinelle.dickson Make mem_consn thm
R35093:35101 Coccinelle.dickson Make mem_consn thm
R35135:35144 Coccinelle.more_list <> mem_or_app thm
R35135:35144 Coccinelle.more_list <> mem_or_app thm
R35135:35144 Coccinelle.more_list <> mem_or_app thm
R35246:35259 Coccinelle.dickson Make mem_permut_mem defax
R35246:35259 Coccinelle.dickson Make mem_permut_mem defax
R35246:35259 Coccinelle.dickson Make mem_permut_mem defax
R35319:35332 Coccinelle.dickson Make mem_permut_mem defax
R35337:35348 Coccinelle.dickson Make permut_consn thm
R35364:35372 Coccinelle.dickson Make consn_app thm
R35387:35396 Coccinelle.more_list <> mem_or_app thm
R35319:35332 Coccinelle.dickson Make mem_permut_mem defax
R35337:35348 Coccinelle.dickson Make permut_consn thm
R35319:35332 Coccinelle.dickson Make mem_permut_mem defax
R35337:35348 Coccinelle.dickson Make permut_consn thm
R35364:35372 Coccinelle.dickson Make consn_app thm
R35364:35372 Coccinelle.dickson Make consn_app thm
R35387:35396 Coccinelle.more_list <> mem_or_app thm
R35387:35396 Coccinelle.more_list <> mem_or_app thm
R35424:35437 Coccinelle.dickson Make mem_permut_mem defax
R35442:35455 Coccinelle.dickson Make permut_appendn thm
R35471:35481 Coccinelle.dickson Make appendn_app thm
R35496:35505 Coccinelle.more_list <> mem_or_app thm
R35424:35437 Coccinelle.dickson Make mem_permut_mem defax
R35442:35455 Coccinelle.dickson Make permut_appendn thm
R35424:35437 Coccinelle.dickson Make mem_permut_mem defax
R35442:35455 Coccinelle.dickson Make permut_appendn thm
R35471:35481 Coccinelle.dickson Make appendn_app thm
R35471:35481 Coccinelle.dickson Make appendn_app thm
R35496:35505 Coccinelle.more_list <> mem_or_app thm
R35496:35505 Coccinelle.more_list <> mem_or_app thm
R35624:35637 Coccinelle.dickson Make mem_permut_mem defax
R35642:35655 Coccinelle.dickson Make permut_appendn thm
R35671:35681 Coccinelle.dickson Make appendn_app thm
R35695:35704 Coccinelle.more_list <> mem_or_app thm
R35624:35637 Coccinelle.dickson Make mem_permut_mem defax
R35642:35655 Coccinelle.dickson Make permut_appendn thm
R35624:35637 Coccinelle.dickson Make mem_permut_mem defax
R35642:35655 Coccinelle.dickson Make permut_appendn thm
R35671:35681 Coccinelle.dickson Make appendn_app thm
R35671:35681 Coccinelle.dickson Make appendn_app thm
R35695:35704 Coccinelle.more_list <> mem_or_app thm
R35695:35704 Coccinelle.more_list <> mem_or_app thm
R35765:35778 Coccinelle.dickson Make mem_permut_mem defax
R35783:35794 Coccinelle.dickson Make permut_consn thm
R35810:35818 Coccinelle.dickson Make consn_app thm
R35833:35842 Coccinelle.more_list <> mem_or_app thm
R35765:35778 Coccinelle.dickson Make mem_permut_mem defax
R35783:35794 Coccinelle.dickson Make permut_consn thm
R35765:35778 Coccinelle.dickson Make mem_permut_mem defax
R35783:35794 Coccinelle.dickson Make permut_consn thm
R35810:35818 Coccinelle.dickson Make consn_app thm
R35810:35818 Coccinelle.dickson Make consn_app thm
R35833:35842 Coccinelle.more_list <> mem_or_app thm
R35833:35842 Coccinelle.more_list <> mem_or_app thm
R35870:35883 Coccinelle.dickson Make mem_permut_mem defax
R35888:35901 Coccinelle.dickson Make permut_appendn thm
R35917:35927 Coccinelle.dickson Make appendn_app thm
R35942:35951 Coccinelle.more_list <> mem_or_app thm
R35870:35883 Coccinelle.dickson Make mem_permut_mem defax
R35888:35901 Coccinelle.dickson Make permut_appendn thm
R35870:35883 Coccinelle.dickson Make mem_permut_mem defax
R35888:35901 Coccinelle.dickson Make permut_appendn thm
R35917:35927 Coccinelle.dickson Make appendn_app thm
R35917:35927 Coccinelle.dickson Make appendn_app thm
R35942:35951 Coccinelle.more_list <> mem_or_app thm
R35942:35951 Coccinelle.more_list <> mem_or_app thm
prf 35998:36044 Make context_trans_clos_multiset_extension_step_cons
binder 36057:36057 <> R:295
R36074:36077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36060:36069 Coq.Relations.Relation_Definitions <> transitive def
R36073:36073 Coccinelle.dickson <> R:295 var
R36078:36078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36095:36102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 36086:36086 <> a:296
R36089:36089 Coq.Init.Logic <> ::type_scope:'~'_x not
R36090:36090 Coccinelle.dickson <> R:295 var
R36092:36092 Coccinelle.dickson <> a:296 var
R36094:36094 Coccinelle.dickson <> a:296 var
binder 36110:36110 <> a:297
binder 36112:36113 <> l1:298
binder 36115:36116 <> l2:299
R36177:36205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36119:36128 Coccinelle.TransClosure <> trans_clos ind
R36170:36173 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R36169:36169 Coccinelle.dickson <> a:297 var
R36174:36175 Coccinelle.dickson <> l2:299 var
R36160:36163 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R36159:36159 Coccinelle.dickson <> a:297 var
R36164:36165 Coccinelle.dickson <> l1:298 var
R36131:36153 Coccinelle.dickson Make multiset_extension_step ind
R36155:36155 Coccinelle.dickson <> R:295 var
R36206:36215 Coccinelle.TransClosure <> trans_clos ind
R36248:36249 Coccinelle.dickson <> l2:299 var
R36245:36246 Coccinelle.dickson <> l1:298 var
R36218:36240 Coccinelle.dickson Make multiset_extension_step ind
R36242:36242 Coccinelle.dickson <> R:295 var
R36306:36321 Coccinelle.dickson Make multiset_closure thm
R36306:36321 Coccinelle.dickson Make multiset_closure thm
R36412:36422 Coccinelle.more_list <> mem_bool_ok thm
R36428:36437 Coccinelle.dickson Make eq_bool_ok defax
R36412:36422 Coccinelle.more_list <> mem_bool_ok thm
R36428:36437 Coccinelle.dickson Make eq_bool_ok defax
R36451:36458 Coccinelle.more_list <> mem_bool def
R36460:36470 Coccinelle.dickson DS1 eq_bool defax
R36451:36458 Coccinelle.more_list <> mem_bool def
R36460:36470 Coccinelle.dickson DS1 eq_bool defax
R36523:36535 Coccinelle.more_list <> mem_split_set thm
R36541:36550 Coccinelle.dickson Make eq_bool_ok defax
R36523:36535 Coccinelle.more_list <> mem_split_set thm
R36541:36550 Coccinelle.dickson Make eq_bool_ok defax
R36650:36656 Coq.Lists.List <> ass_app abbrev
R36676:36693 Coccinelle.dickson Make permut_cons_inside defax
R36714:36720 Coq.Lists.List <> ass_app abbrev
R36650:36656 Coq.Lists.List <> ass_app abbrev
R36650:36656 Coq.Lists.List <> ass_app abbrev
R36676:36693 Coccinelle.dickson Make permut_cons_inside defax
R36676:36693 Coccinelle.dickson Make permut_cons_inside defax
R36676:36693 Coccinelle.dickson Make permut_cons_inside defax
R36714:36720 Coq.Lists.List <> ass_app abbrev
R36714:36720 Coq.Lists.List <> ass_app abbrev
R36714:36720 Coq.Lists.List <> ass_app abbrev
R36714:36720 Coq.Lists.List <> ass_app abbrev
R36737:36743 Coq.Lists.List <> ass_app abbrev
R36763:36780 Coccinelle.dickson Make permut_cons_inside defax
R36801:36807 Coq.Lists.List <> ass_app abbrev
R36737:36743 Coq.Lists.List <> ass_app abbrev
R36737:36743 Coq.Lists.List <> ass_app abbrev
R36763:36780 Coccinelle.dickson Make permut_cons_inside defax
R36763:36780 Coccinelle.dickson Make permut_cons_inside defax
R36763:36780 Coccinelle.dickson Make permut_cons_inside defax
R36801:36807 Coq.Lists.List <> ass_app abbrev
R36801:36807 Coq.Lists.List <> ass_app abbrev
R36801:36807 Coq.Lists.List <> ass_app abbrev
R36801:36807 Coq.Lists.List <> ass_app abbrev
R36823:36842 Coccinelle.dickson Make multiset_closure_aux thm
R36849:36852 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36823:36842 Coccinelle.dickson Make multiset_closure_aux thm
R36849:36852 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36954:36962 Coq.Init.Logic <> False_rec scheme
R36954:36962 Coq.Init.Logic <> False_rec scheme
R37022:37024 Coccinelle.more_list <> mem def
R37042:37045 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37034:37038 Coccinelle.dickson Make consn def
R37026:37029 Coccinelle.dickson Make eq_A defax
R37022:37024 Coccinelle.more_list <> mem def
R37042:37045 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37034:37038 Coccinelle.dickson Make consn def
R37026:37029 Coccinelle.dickson Make eq_A defax
R37063:37076 Coccinelle.dickson Make mem_permut_mem defax
R37063:37076 Coccinelle.dickson Make mem_permut_mem defax
R37063:37076 Coccinelle.dickson Make mem_permut_mem defax
R37107:37116 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37122:37129 Coccinelle.dickson Make eq_proof defax
R37107:37116 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37122:37129 Coccinelle.dickson Make eq_proof defax
R37144:37153 Coccinelle.more_list <> mem_or_app thm
R37144:37153 Coccinelle.more_list <> mem_or_app thm
R37144:37153 Coccinelle.more_list <> mem_or_app thm
R37243:37245 Coccinelle.more_list <> mem def
R37247:37250 Coccinelle.dickson Make eq_A defax
R37243:37245 Coccinelle.more_list <> mem def
R37247:37250 Coccinelle.dickson Make eq_A defax
R37299:37301 Coccinelle.more_list <> mem def
R37321:37324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37311:37317 Coccinelle.dickson Make appendn def
R37303:37306 Coccinelle.dickson Make eq_A defax
R37299:37301 Coccinelle.more_list <> mem def
R37321:37324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37311:37317 Coccinelle.dickson Make appendn def
R37303:37306 Coccinelle.dickson Make eq_A defax
R37342:37355 Coccinelle.dickson Make mem_permut_mem defax
R37342:37355 Coccinelle.dickson Make mem_permut_mem defax
R37342:37355 Coccinelle.dickson Make mem_permut_mem defax
R37386:37395 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37401:37408 Coccinelle.dickson Make eq_proof defax
R37386:37395 Coq.Relations.Relation_Definitions <> equiv_refl proj
R37401:37408 Coccinelle.dickson Make eq_proof defax
R37423:37432 Coccinelle.more_list <> mem_or_app thm
R37423:37432 Coccinelle.more_list <> mem_or_app thm
R37423:37432 Coccinelle.more_list <> mem_or_app thm
R37522:37524 Coccinelle.more_list <> mem def
R37526:37529 Coccinelle.dickson Make eq_A defax
R37522:37524 Coccinelle.more_list <> mem def
R37526:37529 Coccinelle.dickson Make eq_A defax
prf 37559:37612 Make remove_context_trans_clos_multiset_extension_step_app1
binder 37625:37625 <> R:300
R37642:37645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37628:37637 Coq.Relations.Relation_Definitions <> transitive def
R37641:37641 Coccinelle.dickson <> R:300 var
R37646:37646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37663:37670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 37654:37654 <> a:301
R37657:37657 Coq.Init.Logic <> ::type_scope:'~'_x not
R37658:37658 Coccinelle.dickson <> R:300 var
R37660:37660 Coccinelle.dickson <> a:301 var
R37662:37662 Coccinelle.dickson <> a:301 var
binder 37678:37679 <> l1:302
binder 37681:37682 <> l2:303
binder 37684:37684 <> l:304
R37745:37773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37687:37696 Coccinelle.TransClosure <> trans_clos ind
R37738:37741 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37737:37737 Coccinelle.dickson <> l:304 var
R37742:37743 Coccinelle.dickson <> l2:303 var
R37728:37731 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37727:37727 Coccinelle.dickson <> l:304 var
R37732:37733 Coccinelle.dickson <> l1:302 var
R37699:37721 Coccinelle.dickson Make multiset_extension_step ind
R37723:37723 Coccinelle.dickson <> R:300 var
R37774:37783 Coccinelle.TransClosure <> trans_clos ind
R37816:37817 Coccinelle.dickson <> l2:303 var
R37813:37814 Coccinelle.dickson <> l1:302 var
R37786:37808 Coccinelle.dickson Make multiset_extension_step ind
R37810:37810 Coccinelle.dickson <> R:300 var
R37961:38007 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
R37961:38007 Coccinelle.dickson Make context_trans_clos_multiset_extension_step_cons thm
prf 38038:38056 Make nil_is_the_smallest
binder 38069:38069 <> R:305
binder 38071:38071 <> e:306
binder 38073:38073 <> l:307
R38076:38085 Coccinelle.TransClosure <> trans_clos ind
R38121:38124 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38120:38120 Coccinelle.dickson <> e:306 var
R38125:38125 Coccinelle.dickson <> l:307 var
R38115:38117 Coq.Init.Datatypes <> nil constr
R38088:38110 Coccinelle.dickson Make multiset_extension_step ind
R38112:38112 Coccinelle.dickson <> R:305 var
R38217:38222 Coccinelle.TransClosure <> t_step constr
R38234:38241 Coccinelle.dickson Make rmv_case constr
R38249:38251 Coq.Init.Datatypes <> nil constr
R38253:38255 Coq.Init.Datatypes <> nil constr
R38217:38222 Coccinelle.TransClosure <> t_step constr
R38234:38241 Coccinelle.dickson Make rmv_case constr
R38249:38251 Coq.Init.Datatypes <> nil constr
R38253:38255 Coq.Init.Datatypes <> nil constr
R38333:38336 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38305:38323 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38333:38336 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38305:38323 Coccinelle.TransClosure <> trans_clos_is_trans thm
R38356:38361 Coccinelle.TransClosure <> t_step constr
R38373:38380 Coccinelle.dickson Make rmv_case constr
R38391:38394 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38398:38400 Coq.Init.Datatypes <> nil constr
R38356:38361 Coccinelle.TransClosure <> t_step constr
R38373:38380 Coccinelle.dickson Make rmv_case constr
R38391:38394 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38398:38400 Coq.Init.Datatypes <> nil constr
R38445:38462 Coccinelle.dickson Make permut_cons_inside defax
R38497:38500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38501:38503 Coq.Init.Datatypes <> nil constr
R38488:38491 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38445:38462 Coccinelle.dickson Make permut_cons_inside defax
R38497:38500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38501:38503 Coq.Init.Datatypes <> nil constr
R38488:38491 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38445:38462 Coccinelle.dickson Make permut_cons_inside defax
R38497:38500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38501:38503 Coq.Init.Datatypes <> nil constr
R38488:38491 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38445:38462 Coccinelle.dickson Make permut_cons_inside defax
R38497:38500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38501:38503 Coq.Init.Datatypes <> nil constr
R38488:38491 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R38523:38532 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38538:38545 Coccinelle.dickson Make eq_proof defax
R38523:38532 Coq.Relations.Relation_Definitions <> equiv_refl proj
R38538:38545 Coccinelle.dickson Make eq_proof defax
sec 38563:38566 Make Mult
var 38579:38579 Make.Mult R
R38583:38590 Coq.Relations.Relation_Definitions <> relation def
R38592:38592 Coccinelle.dickson Make A defax
var 38604:38609 Make.Mult R_bool
R38614:38617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38613:38613 Coccinelle.dickson Make A defax
R38619:38622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38618:38618 Coccinelle.dickson Make A defax
R38623:38626 Coq.Init.Datatypes <> bool ind
var 38638:38646 Make.Mult R_bool_ok
binder 38661:38662 <> a1:310
binder 38664:38665 <> a2:311
R38678:38683 Coccinelle.dickson <> Make.Mult.R_bool var
R38688:38689 Coccinelle.dickson <> a2:311 var
R38685:38686 Coccinelle.dickson <> a1:310 var
R38701:38704 Coq.Init.Datatypes <> true constr
R38709:38709 Coccinelle.dickson <> Make.Mult.R var
R38714:38715 Coccinelle.dickson <> a2:311 var
R38711:38712 Coccinelle.dickson <> a1:310 var
R38722:38726 Coq.Init.Datatypes <> false constr
R38731:38732 Coq.Init.Logic <> ::type_scope:'~'_x not
R38733:38733 Coccinelle.dickson <> Make.Mult.R var
R38738:38739 Coccinelle.dickson <> a2:311 var
R38735:38736 Coccinelle.dickson <> a1:310 var
def 38761:38764 Make mult
R38775:38778 Coq.Init.Datatypes <> list ind
R38780:38780 Coccinelle.dickson Make A defax
binder 38767:38768 <> l1:313
binder 38770:38771 <> l2:314
R38785:38788 Coccinelle.ordered_set <> comp ind
R38801:38812 Coccinelle.more_list <> remove_equiv def
R38825:38826 Coccinelle.dickson <> l2:314 var
R38822:38823 Coccinelle.dickson <> l1:313 var
R38814:38820 Coccinelle.dickson Make eq_bool defax
R38839:38839 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38843:38844 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38848:38848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38840:38842 Coq.Init.Datatypes <> nil constr
R38845:38847 Coq.Init.Datatypes <> nil constr
R38853:38862 Coccinelle.ordered_set <> Equivalent constr
R38870:38870 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38873:38874 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38877:38877 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38890:38900 Coccinelle.more_list <> list_forall def
R38954:38955 Coccinelle.dickson <> l2:314 var
binder 38907:38908 <> t2:315
R38913:38923 Coccinelle.more_list <> list_exists def
R38950:38951 Coccinelle.dickson <> l1:313 var
binder 38930:38931 <> t1:316
R38936:38941 Coccinelle.dickson <> Make.Mult.R_bool var
R38946:38947 Coccinelle.dickson <> t1:316 var
R38943:38944 Coccinelle.dickson <> t2:315 var
R38972:38975 Coq.Init.Datatypes <> true constr
R38980:38991 Coccinelle.ordered_set <> Greater_than constr
R38996:39000 Coq.Init.Datatypes <> false constr
R39014:39024 Coccinelle.more_list <> list_forall def
R39078:39079 Coccinelle.dickson <> l1:313 var
binder 39031:39032 <> t1:317
R39037:39047 Coccinelle.more_list <> list_exists def
R39074:39075 Coccinelle.dickson <> l2:314 var
binder 39054:39055 <> t2:318
R39060:39065 Coccinelle.dickson <> Make.Mult.R_bool var
R39070:39071 Coccinelle.dickson <> t2:318 var
R39067:39068 Coccinelle.dickson <> t1:317 var
R39091:39094 Coq.Init.Datatypes <> true constr
R39099:39107 Coccinelle.ordered_set <> Less_than constr
R39114:39118 Coq.Init.Datatypes <> false constr
R39123:39134 Coccinelle.ordered_set <> Uncomparable constr
prf 39171:39182 Make greater_case
binder 39196:39197 <> l1:319
binder 39199:39200 <> l2:320
R39203:39203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39253:39259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 39211:39211 <> a:321
R39227:39230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39214:39216 Coccinelle.more_list <> mem def
R39225:39226 Coccinelle.dickson <> l1:319 var
R39223:39223 Coccinelle.dickson <> a:321 var
R39218:39221 Coccinelle.dickson Make eq_A defax
R39244:39247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39231:39233 Coccinelle.more_list <> mem def
R39242:39243 Coccinelle.dickson <> l2:320 var
R39240:39240 Coccinelle.dickson <> a:321 var
R39235:39238 Coccinelle.dickson Make eq_A defax
R39248:39252 Coq.Init.Logic <> False ind
R39333:39339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39326:39328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39260:39270 Coccinelle.more_list <> list_forall def
R39324:39325 Coccinelle.dickson <> l2:320 var
binder 39277:39278 <> t2:322
R39283:39293 Coccinelle.more_list <> list_exists def
R39320:39321 Coccinelle.dickson <> l1:319 var
binder 39300:39301 <> t1:323
R39306:39311 Coccinelle.dickson <> Make.Mult.R_bool var
R39316:39317 Coccinelle.dickson <> t1:323 var
R39313:39314 Coccinelle.dickson <> t2:322 var
R39329:39332 Coq.Init.Datatypes <> true constr
R39340:39346 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39349:39350 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 39347:39348 <> le:324
R39351:39357 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39360:39361 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 39358:39359 <> ll:325
R39388:39421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39362:39367 Coccinelle.dickson Make permut abbrev
R39381:39384 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R39373:39377 Coccinelle.dickson Make consn def
R39379:39380 Coccinelle.dickson <> ll:325 var
R39385:39386 Coccinelle.dickson <> le:324 var
R39369:39370 Coccinelle.dickson <> l1:319 var
R39445:39479 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39541:39541 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39422:39427 Coccinelle.dickson Make permut abbrev
R39434:39440 Coccinelle.dickson Make appendn def
R39442:39443 Coccinelle.dickson <> ll:325 var
R39430:39431 Coccinelle.dickson <> l2:320 var
binder 39487:39487 <> a:326
binder 39489:39490 <> la:327
R39505:39508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39493:39494 Coq.Lists.List <> In def
R39503:39504 Coccinelle.dickson <> ll:325 var
R39496:39496 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39498:39498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39501:39501 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39497:39497 Coccinelle.dickson <> a:326 var
R39499:39500 Coccinelle.dickson <> la:327 var
binder 39516:39516 <> b:328
R39532:39535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39519:39521 Coccinelle.more_list <> mem def
R39530:39531 Coccinelle.dickson <> la:327 var
R39528:39528 Coccinelle.dickson <> b:328 var
R39523:39526 Coccinelle.dickson Make eq_A defax
R39536:39536 Coccinelle.dickson <> Make.Mult.R var
R39540:39540 Coccinelle.dickson <> a:326 var
R39538:39538 Coccinelle.dickson <> b:328 var
R39666:39668 Coq.Init.Datatypes <> nil constr
R39670:39670 Coccinelle.dickson Make A defax
R39684:39686 Coq.Init.Datatypes <> nil constr
R39690:39692 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39689:39689 Coccinelle.dickson Make A defax
R39693:39696 Coq.Init.Datatypes <> list ind
R39698:39698 Coccinelle.dickson Make A defax
R39666:39668 Coq.Init.Datatypes <> nil constr
R39670:39670 Coccinelle.dickson Make A defax
R39684:39686 Coq.Init.Datatypes <> nil constr
R39690:39692 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39689:39689 Coccinelle.dickson Make A defax
R39693:39696 Coq.Init.Datatypes <> list ind
R39698:39698 Coccinelle.dickson Make A defax
R39743:39746 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R39761:39763 Coq.Init.Datatypes <> nil constr
R39767:39769 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39766:39766 Coccinelle.dickson Make A defax
R39770:39773 Coq.Init.Datatypes <> list ind
R39775:39775 Coccinelle.dickson Make A defax
R39743:39746 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R39761:39763 Coq.Init.Datatypes <> nil constr
R39767:39769 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39766:39766 Coccinelle.dickson Make A defax
R39770:39773 Coq.Init.Datatypes <> list ind
R39775:39775 Coccinelle.dickson Make A defax
R39830:39849 Coccinelle.more_list <> list_exists_is_sound thm
R39861:39861 Coccinelle.dickson Make A defax
binder 39856:39857 <> t1:329
R39866:39871 Coccinelle.dickson <> Make.Mult.R_bool var
R39876:39877 Coccinelle.dickson <> t1:329 var
R39891:39901 Coccinelle.more_list <> list_exists def
R39913:39913 Coccinelle.dickson Make A defax
binder 39908:39909 <> t1:330
R39918:39923 Coccinelle.dickson <> Make.Mult.R_bool var
R39928:39929 Coccinelle.dickson <> t1:330 var
R39830:39849 Coccinelle.more_list <> list_exists_is_sound thm
R39861:39861 Coccinelle.dickson Make A defax
binder 39856:39857 <> t1:331
R39866:39871 Coccinelle.dickson <> Make.Mult.R_bool var
R39876:39877 Coccinelle.dickson <> t1:331 var
R39891:39901 Coccinelle.more_list <> list_exists def
R39913:39913 Coccinelle.dickson Make A defax
binder 39908:39909 <> t1:332
R39918:39923 Coccinelle.dickson <> Make.Mult.R_bool var
R39928:39929 Coccinelle.dickson <> t1:332 var
R39958:39962 Coq.Init.Logic <> proj1 thm
R39967:39976 Coq.Init.Logic <> refl_equal abbrev
R39958:39962 Coq.Init.Logic <> proj1 thm
R39967:39976 Coq.Init.Logic <> refl_equal abbrev
R40044:40044 Coccinelle.dickson <> Make.Mult.R var
R40044:40044 Coccinelle.dickson <> Make.Mult.R var
R40066:40074 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40066:40074 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R40134:40134 Coccinelle.dickson Make A defax
binder 40130:40130 <> x:333
R40150:40153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40137:40139 Coccinelle.more_list <> mem def
R40146:40146 Coccinelle.dickson <> x:333 var
R40141:40144 Coccinelle.dickson Make eq_A defax
R40167:40170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40154:40156 Coccinelle.more_list <> mem def
R40163:40163 Coccinelle.dickson <> x:333 var
R40158:40161 Coccinelle.dickson Make eq_A defax
R40171:40175 Coq.Init.Logic <> False ind
R40134:40134 Coccinelle.dickson Make A defax
binder 40130:40130 <> x:334
R40150:40153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40137:40139 Coccinelle.more_list <> mem def
R40146:40146 Coccinelle.dickson <> x:334 var
R40141:40144 Coccinelle.dickson Make eq_A defax
R40167:40170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40154:40156 Coccinelle.more_list <> mem def
R40163:40163 Coccinelle.dickson <> x:334 var
R40158:40161 Coccinelle.dickson Make eq_A defax
R40171:40175 Coq.Init.Logic <> False ind
R40296:40306 Coccinelle.more_list <> list_forall def
R40318:40318 Coccinelle.dickson Make A defax
binder 40313:40314 <> t2:335
R40323:40333 Coccinelle.more_list <> list_exists def
R40345:40345 Coccinelle.dickson Make A defax
binder 40340:40341 <> t1:336
R40350:40355 Coccinelle.dickson <> Make.Mult.R_bool var
R40360:40361 Coccinelle.dickson <> t1:336 var
R40357:40358 Coccinelle.dickson <> t2:335 var
R40296:40306 Coccinelle.more_list <> list_forall def
R40318:40318 Coccinelle.dickson Make A defax
binder 40313:40314 <> t2:337
R40323:40333 Coccinelle.more_list <> list_exists def
R40345:40345 Coccinelle.dickson Make A defax
binder 40340:40341 <> t1:338
R40350:40355 Coccinelle.dickson <> Make.Mult.R_bool var
R40360:40361 Coccinelle.dickson <> t1:338 var
R40357:40358 Coccinelle.dickson <> t2:337 var
R40560:40562 Coccinelle.more_list <> mem def
R40581:40584 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40573:40577 Coccinelle.dickson Make consn def
R40564:40567 Coccinelle.dickson Make eq_A defax
R40560:40562 Coccinelle.more_list <> mem def
R40581:40584 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40573:40577 Coccinelle.dickson Make consn def
R40564:40567 Coccinelle.dickson Make eq_A defax
R40603:40616 Coccinelle.dickson Make mem_permut_mem defax
R40632:40642 Coccinelle.more_list <> in_impl_mem thm
R40603:40616 Coccinelle.dickson Make mem_permut_mem defax
R40603:40616 Coccinelle.dickson Make mem_permut_mem defax
R40632:40642 Coccinelle.more_list <> in_impl_mem thm
R40668:40677 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40683:40690 Coccinelle.dickson Make eq_proof defax
R40668:40677 Coq.Relations.Relation_Definitions <> equiv_refl proj
R40683:40690 Coccinelle.dickson Make eq_proof defax
R40705:40714 Coccinelle.more_list <> mem_or_app thm
R40705:40714 Coccinelle.more_list <> mem_or_app thm
R40705:40714 Coccinelle.more_list <> mem_or_app thm
R40813:40817 Coq.Init.Logic <> proj1 thm
R40820:40828 Coccinelle.dickson Make mem_consn thm
R40813:40817 Coq.Init.Logic <> proj1 thm
R40820:40828 Coccinelle.dickson Make mem_consn thm
R40886:40893 Coq.Lists.List <> In_split abbrev
R40886:40893 Coq.Lists.List <> In_split abbrev
R40966:40969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40984:40987 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40970:40970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40973:40974 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40983:40983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40977:40980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40966:40969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R40984:40987 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40970:40970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40973:40974 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40983:40983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40977:40980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41010:41018 Coccinelle.dickson Make consn_app thm
R41036:41044 Coccinelle.dickson Make consn_app thm
R41010:41018 Coccinelle.dickson Make consn_app thm
R41010:41018 Coccinelle.dickson Make consn_app thm
R41036:41044 Coccinelle.dickson Make consn_app thm
R41036:41044 Coccinelle.dickson Make consn_app thm
R41090:41100 Coccinelle.dickson Make appendn_app thm
R41121:41138 Coccinelle.dickson Make permut_cons_inside defax
R41149:41159 Coccinelle.dickson Make appendn_app thm
R41090:41100 Coccinelle.dickson Make appendn_app thm
R41090:41100 Coccinelle.dickson Make appendn_app thm
R41121:41138 Coccinelle.dickson Make permut_cons_inside defax
R41121:41138 Coccinelle.dickson Make permut_cons_inside defax
R41121:41138 Coccinelle.dickson Make permut_cons_inside defax
R41149:41159 Coccinelle.dickson Make appendn_app thm
R41149:41159 Coccinelle.dickson Make appendn_app thm
R41149:41159 Coccinelle.dickson Make appendn_app thm
R41149:41159 Coccinelle.dickson Make appendn_app thm
R41197:41206 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41212:41219 Coccinelle.dickson Make eq_proof defax
R41197:41206 Coq.Relations.Relation_Definitions <> equiv_refl proj
R41212:41219 Coccinelle.dickson Make eq_proof defax
R41262:41270 Coq.Lists.List <> in_app_or thm
R41262:41270 Coq.Lists.List <> in_app_or thm
R41385:41393 Coq.Lists.List <> in_or_app thm
R41385:41393 Coq.Lists.List <> in_or_app thm
R41611:41619 Coq.Lists.List <> in_or_app thm
R41611:41619 Coq.Lists.List <> in_or_app thm
R41656:41668 Coccinelle.more_list <> mem_split_set thm
R41674:41683 Coccinelle.dickson Make eq_bool_ok defax
R41656:41668 Coccinelle.more_list <> mem_split_set thm
R41674:41683 Coccinelle.dickson Make eq_bool_ok defax
R41800:41803 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41834:41837 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41819:41819 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41822:41823 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41833:41833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41826:41829 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41830:41832 Coq.Init.Datatypes <> nil constr
R41800:41803 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41834:41837 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41819:41819 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41822:41823 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41833:41833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41826:41829 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41830:41832 Coq.Init.Datatypes <> nil constr
R41890:41893 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41882:41886 Coccinelle.dickson Make consn def
R41897:41900 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41904:41907 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41863:41874 Coccinelle.dickson Make permut_trans defax
R41890:41893 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41882:41886 Coccinelle.dickson Make consn def
R41897:41900 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R41904:41907 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41863:41874 Coccinelle.dickson Make permut_trans defax
R41935:41941 Coq.Lists.List <> ass_app abbrev
R41950:41959 Coccinelle.dickson Make permut_sym defax
R41973:41990 Coccinelle.dickson Make permut_cons_inside defax
R41935:41941 Coq.Lists.List <> ass_app abbrev
R41935:41941 Coq.Lists.List <> ass_app abbrev
R41950:41959 Coccinelle.dickson Make permut_sym defax
R41973:41990 Coccinelle.dickson Make permut_cons_inside defax
R41973:41990 Coccinelle.dickson Make permut_cons_inside defax
R41973:41990 Coccinelle.dickson Make permut_cons_inside defax
R42010:42016 Coq.Lists.List <> ass_app abbrev
R42010:42016 Coq.Lists.List <> ass_app abbrev
R42010:42016 Coq.Lists.List <> ass_app abbrev
R42050:42060 Coccinelle.dickson Make permut_cons defax
R42050:42060 Coccinelle.dickson Make permut_cons defax
R42050:42060 Coccinelle.dickson Make permut_cons defax
R42050:42060 Coccinelle.dickson Make permut_cons defax
R42079:42088 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42094:42101 Coccinelle.dickson Make eq_proof defax
R42079:42088 Coq.Relations.Relation_Definitions <> equiv_refl proj
R42094:42101 Coccinelle.dickson Make eq_proof defax
R42367:42377 Coccinelle.more_list <> list_forall def
R42395:42395 Coccinelle.dickson Make A defax
binder 42390:42391 <> t1:339
R42407:42414 Coq.Bool.Bool <> ifb def
R42417:42422 Coccinelle.dickson <> Make.Mult.R_bool var
R42424:42425 Coccinelle.dickson <> t1:339 var
R42431:42434 Coq.Init.Datatypes <> true constr
R42446:42456 Coccinelle.more_list <> list_exists def
R42468:42468 Coccinelle.dickson Make A defax
binder 42463:42464 <> t2:340
R42473:42478 Coccinelle.dickson <> Make.Mult.R_bool var
R42483:42484 Coccinelle.dickson <> t2:340 var
R42480:42481 Coccinelle.dickson <> t1:339 var
R42367:42377 Coccinelle.more_list <> list_forall def
R42395:42395 Coccinelle.dickson Make A defax
binder 42390:42391 <> t1:341
R42407:42414 Coq.Bool.Bool <> ifb def
R42417:42422 Coccinelle.dickson <> Make.Mult.R_bool var
R42424:42425 Coccinelle.dickson <> t1:341 var
R42431:42434 Coq.Init.Datatypes <> true constr
R42446:42456 Coccinelle.more_list <> list_exists def
R42468:42468 Coccinelle.dickson Make A defax
binder 42463:42464 <> t2:342
R42473:42478 Coccinelle.dickson <> Make.Mult.R_bool var
R42483:42484 Coccinelle.dickson <> t2:342 var
R42480:42481 Coccinelle.dickson <> t1:341 var
R42552:42562 Coccinelle.more_list <> list_forall def
R42583:42583 Coccinelle.dickson Make A defax
binder 42578:42579 <> t1:343
R42598:42605 Coq.Bool.Bool <> ifb def
R42608:42613 Coccinelle.dickson <> Make.Mult.R_bool var
R42615:42616 Coccinelle.dickson <> t1:343 var
R42622:42625 Coq.Init.Datatypes <> true constr
R42640:42650 Coccinelle.more_list <> list_exists def
R42662:42662 Coccinelle.dickson Make A defax
binder 42657:42658 <> t2:344
R42667:42672 Coccinelle.dickson <> Make.Mult.R_bool var
R42677:42678 Coccinelle.dickson <> t2:344 var
R42674:42675 Coccinelle.dickson <> t1:343 var
R42552:42562 Coccinelle.more_list <> list_forall def
R42583:42583 Coccinelle.dickson Make A defax
binder 42578:42579 <> t1:345
R42598:42605 Coq.Bool.Bool <> ifb def
R42608:42613 Coccinelle.dickson <> Make.Mult.R_bool var
R42615:42616 Coccinelle.dickson <> t1:345 var
R42622:42625 Coq.Init.Datatypes <> true constr
R42640:42650 Coccinelle.more_list <> list_exists def
R42662:42662 Coccinelle.dickson Make A defax
binder 42657:42658 <> t2:346
R42667:42672 Coccinelle.dickson <> Make.Mult.R_bool var
R42677:42678 Coccinelle.dickson <> t2:346 var
R42674:42675 Coccinelle.dickson <> t1:345 var
prf 42734:42746 Make mult_is_sound
binder 42758:42759 <> l1:347
binder 42761:42762 <> l2:348
R42773:42776 Coccinelle.dickson Make mult def
R42781:42782 Coccinelle.dickson <> l2:348 var
R42778:42779 Coccinelle.dickson <> l1:347 var
R42793:42802 Coccinelle.ordered_set <> Equivalent constr
R42807:42812 Coccinelle.dickson Make permut abbrev
R42817:42818 Coccinelle.dickson <> l2:348 var
R42814:42815 Coccinelle.dickson <> l1:347 var
R42824:42832 Coccinelle.ordered_set <> Less_than constr
R42837:42846 Coccinelle.TransClosure <> trans_clos ind
R42879:42880 Coccinelle.dickson <> l2:348 var
R42876:42877 Coccinelle.dickson <> l1:347 var
R42849:42871 Coccinelle.dickson Make multiset_extension_step ind
R42873:42873 Coccinelle.dickson <> Make.Mult.R var
R42886:42897 Coccinelle.ordered_set <> Greater_than constr
R42902:42911 Coccinelle.TransClosure <> trans_clos ind
R42944:42945 Coccinelle.dickson <> l1:347 var
R42941:42942 Coccinelle.dickson <> l2:348 var
R42914:42936 Coccinelle.dickson Make multiset_extension_step ind
R42938:42938 Coccinelle.dickson <> Make.Mult.R var
R42956:42959 Coq.Init.Logic <> True ind
R42996:42999 Coccinelle.dickson Make mult def
R43015:43035 Coccinelle.dickson Make remove_equiv_is_sound defax
R43015:43035 Coccinelle.dickson Make remove_equiv_is_sound defax
R43052:43052 Coccinelle.dickson Make A defax
R43067:43078 Coccinelle.more_list <> remove_equiv def
R43080:43084 Coccinelle.dickson DS1 A defax
R43086:43092 Coccinelle.dickson Make eq_bool defax
R43067:43078 Coccinelle.more_list <> remove_equiv def
R43080:43084 Coccinelle.dickson DS1 A defax
R43086:43092 Coccinelle.dickson Make eq_bool defax
R43263:43266 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43267:43269 Coq.Init.Datatypes <> nil constr
R43243:43254 Coccinelle.dickson Make permut_trans defax
R43263:43266 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43267:43269 Coq.Init.Datatypes <> nil constr
R43243:43254 Coccinelle.dickson Make permut_trans defax
R43291:43300 Coccinelle.dickson Make permut_sym defax
R43291:43300 Coccinelle.dickson Make permut_sym defax
R43333:43343 Coq.Lists.List <> app_nil_end thm
R43359:43379 Coccinelle.dickson Make multiset_closure_aux2 thm
R43451:43453 Coq.Init.Datatypes <> nil constr
R43436:43439 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43381:43381 Coccinelle.dickson <> Make.Mult.R var
R43333:43343 Coq.Lists.List <> app_nil_end thm
R43333:43343 Coq.Lists.List <> app_nil_end thm
R43359:43379 Coccinelle.dickson Make multiset_closure_aux2 thm
R43451:43453 Coq.Init.Datatypes <> nil constr
R43436:43439 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43381:43381 Coccinelle.dickson <> Make.Mult.R var
R43499:43502 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43506:43509 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43479:43490 Coccinelle.dickson Make permut_trans defax
R43499:43502 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43506:43509 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43479:43490 Coccinelle.dickson Make permut_trans defax
R43536:43548 Coq.Lists.List <> app_comm_cons thm
R43557:43575 Coccinelle.dickson Make list_permut_app_app defax
R43536:43548 Coq.Lists.List <> app_comm_cons thm
R43536:43548 Coq.Lists.List <> app_comm_cons thm
R43557:43575 Coccinelle.dickson Make list_permut_app_app defax
R43640:43650 Coq.Lists.List <> app_nil_end thm
R43666:43686 Coccinelle.dickson Make multiset_closure_aux2 thm
R43758:43760 Coq.Init.Datatypes <> nil constr
R43743:43746 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43688:43688 Coccinelle.dickson <> Make.Mult.R var
R43640:43650 Coq.Lists.List <> app_nil_end thm
R43640:43650 Coq.Lists.List <> app_nil_end thm
R43666:43686 Coccinelle.dickson Make multiset_closure_aux2 thm
R43758:43760 Coq.Init.Datatypes <> nil constr
R43743:43746 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43688:43688 Coccinelle.dickson <> Make.Mult.R var
R43806:43809 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43813:43816 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43786:43797 Coccinelle.dickson Make permut_trans defax
R43806:43809 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43813:43816 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43786:43797 Coccinelle.dickson Make permut_trans defax
R43843:43855 Coq.Lists.List <> app_comm_cons thm
R43864:43882 Coccinelle.dickson Make list_permut_app_app defax
R43843:43855 Coq.Lists.List <> app_comm_cons thm
R43843:43855 Coq.Lists.List <> app_comm_cons thm
R43864:43882 Coccinelle.dickson Make list_permut_app_app defax
R43941:43952 Coccinelle.dickson Make greater_case thm
R43971:43974 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43958:43961 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43991:43991 Coccinelle.dickson Make A defax
R43941:43952 Coccinelle.dickson Make greater_case thm
R43971:43974 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R43958:43961 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44005:44015 Coccinelle.more_list <> list_forall def
R44099:44102 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44027:44031 Coccinelle.dickson DS1 A defax
binder 44022:44023 <> t2:349
R44036:44046 Coccinelle.more_list <> list_exists def
R44085:44088 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44058:44062 Coccinelle.dickson DS1 A defax
binder 44053:44054 <> t1:350
R44067:44072 Coccinelle.dickson <> Make.Mult.R_bool var
R44077:44078 Coccinelle.dickson <> t1:350 var
R44074:44075 Coccinelle.dickson <> t2:349 var
R44005:44015 Coccinelle.more_list <> list_forall def
R44099:44102 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44027:44031 Coccinelle.dickson DS1 A defax
binder 44022:44023 <> t2:351
R44036:44046 Coccinelle.more_list <> list_exists def
R44085:44088 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44058:44062 Coccinelle.dickson DS1 A defax
binder 44053:44054 <> t1:352
R44067:44072 Coccinelle.dickson <> Make.Mult.R_bool var
R44077:44078 Coccinelle.dickson <> t1:352 var
R44074:44075 Coccinelle.dickson <> t2:351 var
R44134:44143 Coq.Init.Logic <> refl_equal abbrev
R44134:44143 Coq.Init.Logic <> refl_equal abbrev
R44207:44227 Coccinelle.dickson Make multiset_closure_aux2 thm
R44229:44229 Coccinelle.dickson <> Make.Mult.R var
R44207:44227 Coccinelle.dickson Make multiset_closure_aux2 thm
R44229:44229 Coccinelle.dickson <> Make.Mult.R var
R44316:44319 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44323:44326 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44296:44307 Coccinelle.dickson Make permut_trans defax
R44316:44319 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44323:44326 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44296:44307 Coccinelle.dickson Make permut_trans defax
R44371:44374 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44375:44381 Coccinelle.dickson Make appendn def
R44351:44362 Coccinelle.dickson Make permut_trans defax
R44371:44374 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44375:44381 Coccinelle.dickson Make appendn def
R44351:44362 Coccinelle.dickson Make permut_trans defax
R44399:44409 Coccinelle.dickson Make permut_app1 defax
R44399:44409 Coccinelle.dickson Make permut_app1 defax
R44399:44409 Coccinelle.dickson Make permut_app1 defax
R44430:44448 Coccinelle.dickson Make list_permut_app_app defax
R44430:44448 Coccinelle.dickson Make list_permut_app_app defax
R44477:44480 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44484:44487 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44457:44468 Coccinelle.dickson Make permut_trans defax
R44477:44480 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44484:44487 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44457:44468 Coccinelle.dickson Make permut_trans defax
R44532:44535 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44544:44547 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44536:44540 Coccinelle.dickson Make consn def
R44512:44523 Coccinelle.dickson Make permut_trans defax
R44532:44535 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44544:44547 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44536:44540 Coccinelle.dickson Make consn def
R44512:44523 Coccinelle.dickson Make permut_trans defax
R44564:44574 Coccinelle.dickson Make permut_app1 defax
R44564:44574 Coccinelle.dickson Make permut_app1 defax
R44564:44574 Coccinelle.dickson Make permut_app1 defax
R44615:44618 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44621:44624 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44625:44629 Coccinelle.dickson Make consn def
R44595:44606 Coccinelle.dickson Make permut_trans defax
R44615:44618 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44621:44624 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44625:44629 Coccinelle.dickson Make consn def
R44595:44606 Coccinelle.dickson Make permut_trans defax
R44647:44657 Coccinelle.dickson Make permut_app1 defax
R44666:44684 Coccinelle.dickson Make list_permut_app_app defax
R44647:44657 Coccinelle.dickson Make permut_app1 defax
R44647:44657 Coccinelle.dickson Make permut_app1 defax
R44666:44684 Coccinelle.dickson Make list_permut_app_app defax
R44696:44702 Coq.Lists.List <> ass_app abbrev
R44715:44733 Coccinelle.dickson Make list_permut_app_app defax
R44696:44702 Coq.Lists.List <> ass_app abbrev
R44696:44702 Coq.Lists.List <> ass_app abbrev
R44715:44733 Coccinelle.dickson Make list_permut_app_app defax
R44805:44817 Coccinelle.list_permut <> permut_length thm
R44862:44864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44848:44848 Coq.Init.Datatypes <> S constr
R44851:44856 Coq.Init.Datatypes <> length def
R44805:44817 Coccinelle.list_permut <> permut_length thm
R44862:44864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44848:44848 Coq.Init.Datatypes <> S constr
R44851:44856 Coq.Init.Datatypes <> length def
R44957:44961 Coccinelle.dickson DS1 A defax
binder 44953:44953 <> x:353
R44987:44990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44964:44966 Coccinelle.more_list <> mem def
R44979:44982 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44973:44973 Coccinelle.dickson <> x:353 var
R44968:44971 Coccinelle.dickson Make eq_A defax
R45014:45017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44991:44993 Coccinelle.more_list <> mem def
R45006:45009 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45000:45000 Coccinelle.dickson <> x:353 var
R44995:44998 Coccinelle.dickson Make eq_A defax
R45018:45022 Coq.Init.Logic <> False ind
R44957:44961 Coccinelle.dickson DS1 A defax
binder 44953:44953 <> x:354
R44987:44990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44964:44966 Coccinelle.more_list <> mem def
R44979:44982 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44973:44973 Coccinelle.dickson <> x:354 var
R44968:44971 Coccinelle.dickson Make eq_A defax
R45014:45017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44991:44993 Coccinelle.more_list <> mem def
R45006:45009 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45000:45000 Coccinelle.dickson <> x:354 var
R44995:44998 Coccinelle.dickson Make eq_A defax
R45018:45022 Coq.Init.Logic <> False ind
R45083:45094 Coccinelle.dickson Make greater_case thm
R45113:45116 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45100:45103 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45134:45134 Coccinelle.dickson Make A defax
R45148:45158 Coccinelle.more_list <> list_forall def
R45242:45245 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45170:45174 Coccinelle.dickson DS1 A defax
binder 45165:45166 <> t1:355
R45179:45189 Coccinelle.more_list <> list_exists def
R45228:45231 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45201:45205 Coccinelle.dickson DS1 A defax
binder 45196:45197 <> t2:356
R45210:45215 Coccinelle.dickson <> Make.Mult.R_bool var
R45220:45221 Coccinelle.dickson <> t2:356 var
R45217:45218 Coccinelle.dickson <> t1:355 var
R45083:45094 Coccinelle.dickson Make greater_case thm
R45113:45116 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45100:45103 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45148:45158 Coccinelle.more_list <> list_forall def
R45242:45245 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45170:45174 Coccinelle.dickson DS1 A defax
binder 45165:45166 <> t1:357
R45179:45189 Coccinelle.more_list <> list_exists def
R45228:45231 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45201:45205 Coccinelle.dickson DS1 A defax
binder 45196:45197 <> t2:358
R45210:45215 Coccinelle.dickson <> Make.Mult.R_bool var
R45220:45221 Coccinelle.dickson <> t2:358 var
R45217:45218 Coccinelle.dickson <> t1:357 var
R45277:45286 Coq.Init.Logic <> refl_equal abbrev
R45277:45286 Coq.Init.Logic <> refl_equal abbrev
R45350:45370 Coccinelle.dickson Make multiset_closure_aux2 thm
R45372:45372 Coccinelle.dickson <> Make.Mult.R var
R45350:45370 Coccinelle.dickson Make multiset_closure_aux2 thm
R45372:45372 Coccinelle.dickson <> Make.Mult.R var
R45459:45462 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45466:45469 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45439:45450 Coccinelle.dickson Make permut_trans defax
R45459:45462 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45466:45469 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45439:45450 Coccinelle.dickson Make permut_trans defax
R45514:45517 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45518:45524 Coccinelle.dickson Make appendn def
R45494:45505 Coccinelle.dickson Make permut_trans defax
R45514:45517 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45518:45524 Coccinelle.dickson Make appendn def
R45494:45505 Coccinelle.dickson Make permut_trans defax
R45542:45552 Coccinelle.dickson Make permut_app1 defax
R45542:45552 Coccinelle.dickson Make permut_app1 defax
R45542:45552 Coccinelle.dickson Make permut_app1 defax
R45573:45591 Coccinelle.dickson Make list_permut_app_app defax
R45573:45591 Coccinelle.dickson Make list_permut_app_app defax
R45620:45623 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45627:45630 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45600:45611 Coccinelle.dickson Make permut_trans defax
R45620:45623 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45627:45630 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R45600:45611 Coccinelle.dickson Make permut_trans defax
R45675:45678 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45687:45690 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45679:45683 Coccinelle.dickson Make consn def
R45655:45666 Coccinelle.dickson Make permut_trans defax
R45675:45678 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45687:45690 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45679:45683 Coccinelle.dickson Make consn def
R45655:45666 Coccinelle.dickson Make permut_trans defax
R45707:45717 Coccinelle.dickson Make permut_app1 defax
R45707:45717 Coccinelle.dickson Make permut_app1 defax
R45707:45717 Coccinelle.dickson Make permut_app1 defax
R45758:45761 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45764:45767 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45768:45772 Coccinelle.dickson Make consn def
R45738:45749 Coccinelle.dickson Make permut_trans defax
R45758:45761 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45764:45767 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R45768:45772 Coccinelle.dickson Make consn def
R45738:45749 Coccinelle.dickson Make permut_trans defax
R45790:45800 Coccinelle.dickson Make permut_app1 defax
R45809:45827 Coccinelle.dickson Make list_permut_app_app defax
R45790:45800 Coccinelle.dickson Make permut_app1 defax
R45790:45800 Coccinelle.dickson Make permut_app1 defax
R45809:45827 Coccinelle.dickson Make list_permut_app_app defax
R45839:45845 Coq.Lists.List <> ass_app abbrev
R45858:45876 Coccinelle.dickson Make list_permut_app_app defax
R45839:45845 Coq.Lists.List <> ass_app abbrev
R45839:45845 Coq.Lists.List <> ass_app abbrev
R45858:45876 Coccinelle.dickson Make list_permut_app_app defax
R45948:45960 Coccinelle.list_permut <> permut_length thm
R46005:46007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45991:45991 Coq.Init.Datatypes <> S constr
R45994:45999 Coq.Init.Datatypes <> length def
R45948:45960 Coccinelle.list_permut <> permut_length thm
R46005:46007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45991:45991 Coq.Init.Datatypes <> S constr
R45994:45999 Coq.Init.Datatypes <> length def
prf 46101:46122 Make mult_is_complete_equiv
binder 46134:46135 <> l1:359
binder 46137:46138 <> l2:360
R46153:46156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46141:46146 Coccinelle.dickson Make permut abbrev
R46151:46152 Coccinelle.dickson <> l2:360 var
R46148:46149 Coccinelle.dickson <> l1:359 var
R46167:46169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46157:46160 Coccinelle.dickson Make mult def
R46165:46166 Coccinelle.dickson <> l2:360 var
R46162:46163 Coccinelle.dickson <> l1:359 var
R46170:46179 Coccinelle.ordered_set <> Equivalent constr
R46219:46224 Coccinelle.dickson Make permut abbrev
R46232:46235 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46236:46238 Coq.Init.Datatypes <> nil constr
R46219:46224 Coccinelle.dickson Make permut abbrev
R46232:46235 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46236:46238 Coq.Init.Datatypes <> nil constr
R46254:46264 Coq.Lists.List <> app_nil_end thm
R46273:46283 Coccinelle.dickson Make permut_refl defax
R46254:46264 Coq.Lists.List <> app_nil_end thm
R46254:46264 Coq.Lists.List <> app_nil_end thm
R46273:46283 Coccinelle.dickson Make permut_refl defax
R46299:46304 Coccinelle.dickson Make permut abbrev
R46312:46315 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46316:46318 Coq.Init.Datatypes <> nil constr
R46299:46304 Coccinelle.dickson Make permut abbrev
R46312:46315 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46316:46318 Coq.Init.Datatypes <> nil constr
R46334:46344 Coq.Lists.List <> app_nil_end thm
R46353:46362 Coccinelle.dickson Make permut_sym defax
R46334:46344 Coq.Lists.List <> app_nil_end thm
R46334:46344 Coq.Lists.List <> app_nil_end thm
R46353:46362 Coccinelle.dickson Make permut_sym defax
R46400:46400 Coccinelle.dickson Make A defax
binder 46396:46396 <> x:361
R46417:46420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46403:46405 Coccinelle.more_list <> mem def
R46414:46416 Coq.Init.Datatypes <> nil constr
R46412:46412 Coccinelle.dickson <> x:361 var
R46407:46410 Coccinelle.dickson Make eq_A defax
R46435:46438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46421:46423 Coccinelle.more_list <> mem def
R46432:46434 Coq.Init.Datatypes <> nil constr
R46430:46430 Coccinelle.dickson <> x:361 var
R46425:46428 Coccinelle.dickson Make eq_A defax
R46439:46443 Coq.Init.Logic <> False ind
R46400:46400 Coccinelle.dickson Make A defax
binder 46396:46396 <> x:362
R46417:46420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46403:46405 Coccinelle.more_list <> mem def
R46414:46416 Coq.Init.Datatypes <> nil constr
R46412:46412 Coccinelle.dickson <> x:362 var
R46407:46410 Coccinelle.dickson Make eq_A defax
R46435:46438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46421:46423 Coccinelle.more_list <> mem def
R46432:46434 Coq.Init.Datatypes <> nil constr
R46430:46430 Coccinelle.dickson <> x:362 var
R46425:46428 Coccinelle.dickson Make eq_A defax
R46439:46443 Coq.Init.Logic <> False ind
R46483:46506 Coccinelle.dickson Make remove_equiv_is_complete defax
R46517:46519 Coq.Init.Datatypes <> nil constr
R46521:46523 Coq.Init.Datatypes <> nil constr
R46483:46506 Coccinelle.dickson Make remove_equiv_is_complete defax
R46517:46519 Coq.Init.Datatypes <> nil constr
R46521:46523 Coq.Init.Datatypes <> nil constr
R46542:46545 Coccinelle.dickson Make mult def
R46555:46555 Coccinelle.dickson Make A defax
R46570:46581 Coccinelle.more_list <> remove_equiv def
R46583:46587 Coccinelle.dickson DS1 A defax
R46589:46595 Coccinelle.dickson Make eq_bool defax
R46570:46581 Coccinelle.more_list <> remove_equiv def
R46583:46587 Coccinelle.dickson DS1 A defax
R46589:46595 Coccinelle.dickson Make eq_bool defax
R46649:46658 Coccinelle.list_permut <> permut_nil thm
R46649:46658 Coccinelle.list_permut <> permut_nil thm
R46649:46658 Coccinelle.list_permut <> permut_nil thm
R46687:46696 Coccinelle.list_permut <> permut_nil thm
R46687:46696 Coccinelle.list_permut <> permut_nil thm
R46687:46696 Coccinelle.list_permut <> permut_nil thm
R46709:46718 Coq.Init.Logic <> refl_equal abbrev
R46709:46718 Coq.Init.Logic <> refl_equal abbrev
prf 46737:46764 Make mult_is_complete_greater_aux
R46783:46786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46769:46778 Coq.Relations.Relation_Definitions <> transitive def
R46782:46782 Coccinelle.dickson <> Make.Mult.R var
R46787:46787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46805:46810 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 46795:46795 <> a:363
R46798:46799 Coq.Init.Logic <> ::type_scope:'~'_x not
R46800:46800 Coccinelle.dickson <> Make.Mult.R var
R46804:46804 Coccinelle.dickson <> a:363 var
R46802:46802 Coccinelle.dickson <> a:363 var
binder 46818:46818 <> l:364
binder 46820:46821 <> l1:365
binder 46823:46824 <> l2:366
R46827:46827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46877:46884 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 46835:46835 <> a:367
R46851:46854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46838:46840 Coccinelle.more_list <> mem def
R46849:46850 Coccinelle.dickson <> l1:365 var
R46847:46847 Coccinelle.dickson <> a:367 var
R46842:46845 Coccinelle.dickson Make eq_A defax
R46868:46871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46855:46857 Coccinelle.more_list <> mem def
R46866:46867 Coccinelle.dickson <> l2:366 var
R46864:46864 Coccinelle.dickson <> a:367 var
R46859:46862 Coccinelle.dickson Make eq_A defax
R46872:46876 Coq.Init.Logic <> False ind
R46943:46948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46885:46894 Coccinelle.TransClosure <> trans_clos ind
R46936:46939 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46935:46935 Coccinelle.dickson <> l:364 var
R46940:46941 Coccinelle.dickson <> l1:365 var
R46926:46929 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R46925:46925 Coccinelle.dickson <> l:364 var
R46930:46931 Coccinelle.dickson <> l2:366 var
R46897:46919 Coccinelle.dickson Make multiset_extension_step ind
R46921:46921 Coccinelle.dickson <> Make.Mult.R var
R46949:46949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47016:47019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46950:46960 Coccinelle.more_list <> list_forall def
R47014:47015 Coccinelle.dickson <> l2:366 var
binder 46967:46968 <> t2:368
R46973:46983 Coccinelle.more_list <> list_exists def
R47010:47011 Coccinelle.dickson <> l1:365 var
binder 46990:46991 <> t1:369
R46996:47001 Coccinelle.dickson <> Make.Mult.R_bool var
R47006:47007 Coccinelle.dickson <> t1:369 var
R47003:47004 Coccinelle.dickson <> t2:368 var
R47020:47023 Coq.Init.Datatypes <> true constr
R47108:47161 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47108:47161 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R47233:47248 Coccinelle.dickson Make multiset_closure thm
R47233:47248 Coccinelle.dickson Make multiset_closure thm
R47435:47437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47438:47440 Coq.Init.Datatypes <> nil constr
R47435:47437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47438:47440 Coq.Init.Datatypes <> nil constr
R47511:47520 Coq.Init.Logic <> refl_equal abbrev
R47511:47520 Coq.Init.Logic <> refl_equal abbrev
R47563:47571 Coq.Init.Logic <> False_rec scheme
R47563:47571 Coq.Init.Logic <> False_rec scheme
R47605:47618 Coccinelle.dickson Make mem_permut_mem defax
R47638:47647 Coccinelle.more_list <> mem_or_app thm
R47670:47679 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47685:47692 Coccinelle.dickson Make eq_proof defax
R47605:47618 Coccinelle.dickson Make mem_permut_mem defax
R47605:47618 Coccinelle.dickson Make mem_permut_mem defax
R47638:47647 Coccinelle.more_list <> mem_or_app thm
R47638:47647 Coccinelle.more_list <> mem_or_app thm
R47670:47679 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47685:47692 Coccinelle.dickson Make eq_proof defax
R47705:47718 Coccinelle.dickson Make mem_permut_mem defax
R47738:47747 Coccinelle.more_list <> mem_or_app thm
R47770:47779 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47785:47792 Coccinelle.dickson Make eq_proof defax
R47705:47718 Coccinelle.dickson Make mem_permut_mem defax
R47705:47718 Coccinelle.dickson Make mem_permut_mem defax
R47738:47747 Coccinelle.more_list <> mem_or_app thm
R47738:47747 Coccinelle.more_list <> mem_or_app thm
R47770:47779 Coq.Relations.Relation_Definitions <> equiv_refl proj
R47785:47792 Coccinelle.dickson Make eq_proof defax
R47817:47827 Coq.Lists.List <> app_nil_end thm
R47847:47857 Coq.Lists.List <> app_nil_end thm
R47817:47827 Coq.Lists.List <> app_nil_end thm
R47817:47827 Coq.Lists.List <> app_nil_end thm
R47847:47857 Coq.Lists.List <> app_nil_end thm
R47847:47857 Coq.Lists.List <> app_nil_end thm
R47906:47906 Coccinelle.dickson Make A defax
binder 47890:47891 <> ta:370
binder 47893:47895 <> ta':371
binder 47897:47898 <> tb:372
binder 47900:47902 <> tb':373
R47919:47922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47909:47912 Coccinelle.dickson Make eq_A defax
R47914:47915 Coccinelle.dickson <> ta:370 var
R47917:47918 Coccinelle.dickson <> tb:372 var
R47935:47938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47923:47926 Coccinelle.dickson Make eq_A defax
R47928:47930 Coccinelle.dickson <> ta':371 var
R47932:47934 Coccinelle.dickson <> tb':373 var
R47952:47954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47939:47944 Coccinelle.dickson <> Make.Mult.R_bool var
R47949:47951 Coccinelle.dickson <> ta':371 var
R47946:47947 Coccinelle.dickson <> ta:370 var
R47955:47960 Coccinelle.dickson <> Make.Mult.R_bool var
R47965:47967 Coccinelle.dickson <> tb':373 var
R47962:47963 Coccinelle.dickson <> tb:372 var
R47906:47906 Coccinelle.dickson Make A defax
binder 47890:47891 <> ta:374
binder 47893:47895 <> ta':375
binder 47897:47898 <> tb:376
binder 47900:47902 <> tb':377
R47919:47922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47909:47912 Coccinelle.dickson Make eq_A defax
R47914:47915 Coccinelle.dickson <> ta:374 var
R47917:47918 Coccinelle.dickson <> tb:376 var
R47935:47938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47923:47926 Coccinelle.dickson Make eq_A defax
R47928:47930 Coccinelle.dickson <> ta':375 var
R47932:47934 Coccinelle.dickson <> tb':377 var
R47952:47954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47939:47944 Coccinelle.dickson <> Make.Mult.R_bool var
R47949:47951 Coccinelle.dickson <> ta':375 var
R47946:47947 Coccinelle.dickson <> ta:374 var
R47955:47960 Coccinelle.dickson <> Make.Mult.R_bool var
R47965:47967 Coccinelle.dickson <> tb':377 var
R47962:47963 Coccinelle.dickson <> tb:376 var
R47978:47981 Coccinelle.dickson Make eq_A defax
R48031:48040 Coq.Init.Logic <> refl_equal abbrev
R48031:48040 Coq.Init.Logic <> refl_equal abbrev
R48052:48076 Coccinelle.list_permut <> permut_list_forall_exists thm
R48085:48090 Coccinelle.dickson <> Make.Mult.R_bool var
R48078:48083 Coccinelle.dickson <> Make.Mult.R_bool var
R48052:48076 Coccinelle.list_permut <> permut_list_forall_exists thm
R48085:48090 Coccinelle.dickson <> Make.Mult.R_bool var
R48078:48083 Coccinelle.dickson <> Make.Mult.R_bool var
R48052:48076 Coccinelle.list_permut <> permut_list_forall_exists thm
R48085:48090 Coccinelle.dickson <> Make.Mult.R_bool var
R48078:48083 Coccinelle.dickson <> Make.Mult.R_bool var
R48209:48223 Coccinelle.more_list <> list_forall_app thm
R48234:48251 Coq.Bool.Bool <> andb_true_iff thm
R48209:48223 Coccinelle.more_list <> list_forall_app thm
R48209:48223 Coccinelle.more_list <> list_forall_app thm
R48234:48251 Coq.Bool.Bool <> andb_true_iff thm
R48234:48251 Coq.Bool.Bool <> andb_true_iff thm
R48293:48301 Coq.Init.Logic <> or_introl constr
R48306:48315 Coq.Init.Logic <> refl_equal abbrev
R48293:48301 Coq.Init.Logic <> or_introl constr
R48306:48315 Coq.Init.Logic <> refl_equal abbrev
R48418:48426 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48440:48445 Coccinelle.dickson <> Make.Mult.R_bool var
R48418:48426 Coccinelle.dickson <> Make.Mult.R_bool_ok var
R48440:48445 Coccinelle.dickson <> Make.Mult.R_bool var
R48553:48561 Coq.Init.Logic <> False_rec scheme
R48609:48618 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48624:48631 Coccinelle.dickson Make eq_proof defax
R48553:48561 Coq.Init.Logic <> False_rec scheme
R48609:48618 Coq.Relations.Relation_Definitions <> equiv_refl proj
R48624:48631 Coccinelle.dickson Make eq_proof defax
R48644:48659 Coccinelle.more_list <> list_forall_impl thm
R48986:48992 Coccinelle.dickson Make appendn def
R48779:48779 Coccinelle.dickson Make A defax
binder 48774:48775 <> t1:378
R48785:48792 Coq.Bool.Bool <> ifb def
R48795:48800 Coccinelle.dickson <> Make.Mult.R_bool var
R48802:48803 Coccinelle.dickson <> t1:378 var
R48808:48811 Coq.Init.Datatypes <> true constr
R48891:48901 Coccinelle.more_list <> list_exists def
R48933:48937 Coccinelle.dickson Make consn def
R48913:48913 Coccinelle.dickson Make A defax
binder 48908:48909 <> t2:379
R48918:48923 Coccinelle.dickson <> Make.Mult.R_bool var
R48928:48929 Coccinelle.dickson <> t2:379 var
R48925:48926 Coccinelle.dickson <> t1:378 var
R48671:48671 Coccinelle.dickson Make A defax
binder 48666:48667 <> t1:380
R48676:48686 Coccinelle.more_list <> list_exists def
R48718:48722 Coccinelle.dickson Make consn def
R48698:48698 Coccinelle.dickson Make A defax
binder 48693:48694 <> t2:381
R48703:48708 Coccinelle.dickson <> Make.Mult.R_bool var
R48713:48714 Coccinelle.dickson <> t2:381 var
R48710:48711 Coccinelle.dickson <> t1:380 var
R48644:48659 Coccinelle.more_list <> list_forall_impl thm
R48986:48992 Coccinelle.dickson Make appendn def
R48779:48779 Coccinelle.dickson Make A defax
binder 48774:48775 <> t1:382
R48785:48792 Coq.Bool.Bool <> ifb def
R48795:48800 Coccinelle.dickson <> Make.Mult.R_bool var
R48802:48803 Coccinelle.dickson <> t1:382 var
R48808:48811 Coq.Init.Datatypes <> true constr
R48891:48901 Coccinelle.more_list <> list_exists def
R48933:48937 Coccinelle.dickson Make consn def
R48913:48913 Coccinelle.dickson Make A defax
binder 48908:48909 <> t2:383
R48918:48923 Coccinelle.dickson <> Make.Mult.R_bool var
R48928:48929 Coccinelle.dickson <> t2:383 var
R48925:48926 Coccinelle.dickson <> t1:382 var
R48671:48671 Coccinelle.dickson Make A defax
binder 48666:48667 <> t1:384
R48676:48686 Coccinelle.more_list <> list_exists def
R48718:48722 Coccinelle.dickson Make consn def
R48698:48698 Coccinelle.dickson Make A defax
binder 48693:48694 <> t2:385
R48703:48708 Coccinelle.dickson <> Make.Mult.R_bool var
R48713:48714 Coccinelle.dickson <> t2:385 var
R48710:48711 Coccinelle.dickson <> t1:384 var
R48644:48659 Coccinelle.more_list <> list_forall_impl thm
R48986:48992 Coccinelle.dickson Make appendn def
R48779:48779 Coccinelle.dickson Make A defax
binder 48774:48775 <> t1:386
R48785:48792 Coq.Bool.Bool <> ifb def
R48795:48800 Coccinelle.dickson <> Make.Mult.R_bool var
R48802:48803 Coccinelle.dickson <> t1:386 var
R48808:48811 Coq.Init.Datatypes <> true constr
R48891:48901 Coccinelle.more_list <> list_exists def
R48933:48937 Coccinelle.dickson Make consn def
R48913:48913 Coccinelle.dickson Make A defax
binder 48908:48909 <> t2:387
R48918:48923 Coccinelle.dickson <> Make.Mult.R_bool var
R48928:48929 Coccinelle.dickson <> t2:387 var
R48925:48926 Coccinelle.dickson <> t1:386 var
R48671:48671 Coccinelle.dickson Make A defax
binder 48666:48667 <> t1:388
R48676:48686 Coccinelle.more_list <> list_exists def
R48718:48722 Coccinelle.dickson Make consn def
R48698:48698 Coccinelle.dickson Make A defax
binder 48693:48694 <> t2:389
R48703:48708 Coccinelle.dickson <> Make.Mult.R_bool var
R48713:48714 Coccinelle.dickson <> t2:389 var
R48710:48711 Coccinelle.dickson <> t1:388 var
R48644:48659 Coccinelle.more_list <> list_forall_impl thm
R48986:48992 Coccinelle.dickson Make appendn def
R48779:48779 Coccinelle.dickson Make A defax
binder 48774:48775 <> t1:390
R48785:48792 Coq.Bool.Bool <> ifb def
R48795:48800 Coccinelle.dickson <> Make.Mult.R_bool var
R48802:48803 Coccinelle.dickson <> t1:390 var
R48808:48811 Coq.Init.Datatypes <> true constr
R48891:48901 Coccinelle.more_list <> list_exists def
R48933:48937 Coccinelle.dickson Make consn def
R48913:48913 Coccinelle.dickson Make A defax
binder 48908:48909 <> t2:391
R48918:48923 Coccinelle.dickson <> Make.Mult.R_bool var
R48928:48929 Coccinelle.dickson <> t2:391 var
R48925:48926 Coccinelle.dickson <> t1:390 var
R48671:48671 Coccinelle.dickson Make A defax
binder 48666:48667 <> t1:392
R48676:48686 Coccinelle.more_list <> list_exists def
R48718:48722 Coccinelle.dickson Make consn def
R48698:48698 Coccinelle.dickson Make A defax
binder 48693:48694 <> t2:393
R48703:48708 Coccinelle.dickson <> Make.Mult.R_bool var
R48713:48714 Coccinelle.dickson <> t2:393 var
R48710:48711 Coccinelle.dickson <> t1:392 var
R48644:48659 Coccinelle.more_list <> list_forall_impl thm
R48986:48992 Coccinelle.dickson Make appendn def
R48779:48779 Coccinelle.dickson Make A defax
binder 48774:48775 <> t1:394
R48785:48792 Coq.Bool.Bool <> ifb def
R48795:48800 Coccinelle.dickson <> Make.Mult.R_bool var
R48802:48803 Coccinelle.dickson <> t1:394 var
R48808:48811 Coq.Init.Datatypes <> true constr
R48891:48901 Coccinelle.more_list <> list_exists def
R48933:48937 Coccinelle.dickson Make consn def
R48913:48913 Coccinelle.dickson Make A defax
binder 48908:48909 <> t2:395
R48918:48923 Coccinelle.dickson <> Make.Mult.R_bool var
R48928:48929 Coccinelle.dickson <> t2:395 var
R48925:48926 Coccinelle.dickson <> t1:394 var
R48671:48671 Coccinelle.dickson Make A defax
binder 48666:48667 <> t1:396
R48676:48686 Coccinelle.more_list <> list_exists def
R48718:48722 Coccinelle.dickson Make consn def
R48698:48698 Coccinelle.dickson Make A defax
binder 48693:48694 <> t2:397
R48703:48708 Coccinelle.dickson <> Make.Mult.R_bool var
R48713:48714 Coccinelle.dickson <> t2:397 var
R48710:48711 Coccinelle.dickson <> t1:396 var
R49006:49015 Coq.Init.Logic <> refl_equal abbrev
R49006:49015 Coq.Init.Logic <> refl_equal abbrev
R49045:49050 Coccinelle.dickson <> Make.Mult.R_bool var
R49072:49081 Coq.Init.Logic <> refl_equal abbrev
R49045:49050 Coccinelle.dickson <> Make.Mult.R_bool var
R49072:49081 Coq.Init.Logic <> refl_equal abbrev
prf 49182:49192 Make mult_irrefl
R49211:49214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49197:49206 Coq.Relations.Relation_Definitions <> transitive def
R49210:49210 Coccinelle.dickson <> Make.Mult.R var
R49215:49215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49233:49237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 49223:49223 <> a:398
R49226:49227 Coq.Init.Logic <> ::type_scope:'~'_x not
R49228:49228 Coccinelle.dickson <> Make.Mult.R var
R49232:49232 Coccinelle.dickson <> a:398 var
R49230:49230 Coccinelle.dickson <> a:398 var
binder 49245:49245 <> l:399
R49290:49293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49248:49257 Coccinelle.TransClosure <> trans_clos ind
R49289:49289 Coccinelle.dickson <> l:399 var
R49287:49287 Coccinelle.dickson <> l:399 var
R49260:49282 Coccinelle.dickson Make multiset_extension_step ind
R49284:49284 Coccinelle.dickson <> Make.Mult.R var
R49294:49298 Coq.Init.Logic <> False ind
R49351:49361 Coq.Lists.List <> app_nil_end thm
R49351:49361 Coq.Lists.List <> app_nil_end thm
R49351:49361 Coq.Lists.List <> app_nil_end thm
R49399:49452 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49475:49477 Coq.Init.Datatypes <> nil constr
R49471:49473 Coq.Init.Datatypes <> nil constr
R49399:49452 Coccinelle.dickson Make remove_context_trans_clos_multiset_extension_step_app1 thm
R49475:49477 Coq.Init.Datatypes <> nil constr
R49471:49473 Coq.Init.Datatypes <> nil constr
binder 49525:49526 <> l1:400
binder 49528:49529 <> l2:401
R49576:49579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49532:49541 Coccinelle.TransClosure <> trans_clos ind
R49574:49575 Coccinelle.dickson <> l2:401 var
R49571:49572 Coccinelle.dickson <> l1:400 var
R49544:49566 Coccinelle.dickson Make multiset_extension_step ind
R49568:49568 Coccinelle.dickson <> Make.Mult.R var
R49588:49591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49582:49584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49580:49581 Coccinelle.dickson <> l2:401 var
R49585:49587 Coq.Init.Datatypes <> nil constr
R49592:49596 Coq.Init.Logic <> False ind
binder 49525:49526 <> l1:402
binder 49528:49529 <> l2:403
R49576:49579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49532:49541 Coccinelle.TransClosure <> trans_clos ind
R49574:49575 Coccinelle.dickson <> l2:403 var
R49571:49572 Coccinelle.dickson <> l1:402 var
R49544:49566 Coccinelle.dickson Make multiset_extension_step ind
R49568:49568 Coccinelle.dickson <> Make.Mult.R var
R49588:49591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49582:49584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49580:49581 Coccinelle.dickson <> l2:403 var
R49585:49587 Coq.Init.Datatypes <> nil constr
R49592:49596 Coq.Init.Logic <> False ind
R49738:49750 Coccinelle.list_permut <> permut_length thm
R49738:49750 Coccinelle.list_permut <> permut_length thm
R49796:49805 Coq.Init.Logic <> refl_equal abbrev
R49796:49805 Coq.Init.Logic <> refl_equal abbrev
R49840:49849 Coq.Init.Logic <> refl_equal abbrev
R49840:49849 Coq.Init.Logic <> refl_equal abbrev
prf 49864:49887 Make mult_is_complete_greater
R49906:49909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49892:49901 Coq.Relations.Relation_Definitions <> transitive def
R49905:49905 Coccinelle.dickson <> Make.Mult.R var
R49910:49910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49928:49935 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 49918:49918 <> a:404
R49921:49922 Coq.Init.Logic <> ::type_scope:'~'_x not
R49923:49923 Coccinelle.dickson <> Make.Mult.R var
R49927:49927 Coccinelle.dickson <> a:404 var
R49925:49925 Coccinelle.dickson <> a:404 var
binder 49943:49944 <> l1:405
binder 49946:49947 <> l2:406
R49994:49997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49950:49959 Coccinelle.TransClosure <> trans_clos ind
R49992:49993 Coccinelle.dickson <> l1:405 var
R49989:49990 Coccinelle.dickson <> l2:406 var
R49962:49984 Coccinelle.dickson Make multiset_extension_step ind
R49986:49986 Coccinelle.dickson <> Make.Mult.R var
R50008:50010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49998:50001 Coccinelle.dickson Make mult def
R50006:50007 Coccinelle.dickson <> l2:406 var
R50003:50004 Coccinelle.dickson <> l1:405 var
R50011:50022 Coccinelle.ordered_set <> Greater_than constr
R50084:50104 Coccinelle.dickson Make remove_equiv_is_sound defax
R50121:50124 Coccinelle.dickson Make mult def
R50134:50134 Coccinelle.dickson Make A defax
R50151:50162 Coccinelle.more_list <> remove_equiv def
R50164:50170 Coccinelle.dickson Make eq_bool defax
R50084:50104 Coccinelle.dickson Make remove_equiv_is_sound defax
R50151:50162 Coccinelle.more_list <> remove_equiv def
R50164:50170 Coccinelle.dickson Make eq_bool defax
R50243:50252 Coccinelle.TransClosure <> trans_clos ind
R50294:50297 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50284:50287 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50255:50277 Coccinelle.dickson Make multiset_extension_step ind
R50279:50279 Coccinelle.dickson <> Make.Mult.R var
R50243:50252 Coccinelle.TransClosure <> trans_clos ind
R50294:50297 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50284:50287 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50255:50277 Coccinelle.dickson Make multiset_extension_step ind
R50279:50279 Coccinelle.dickson <> Make.Mult.R var
R50310:50357 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50310:50357 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R50396:50443 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50396:50443 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R50484:50511 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50484:50511 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R50567:50567 Coccinelle.dickson Make A defax
R50664:50673 Coq.Init.Logic <> refl_equal abbrev
R50664:50673 Coq.Init.Logic <> refl_equal abbrev
R50715:50724 Coq.Init.Logic <> refl_equal abbrev
R50715:50724 Coq.Init.Logic <> refl_equal abbrev
R50743:50751 Coq.Init.Logic <> False_rec scheme
R50743:50751 Coq.Init.Logic <> False_rec scheme
R50761:50771 Coccinelle.dickson Make mult_irrefl thm
R50761:50771 Coccinelle.dickson Make mult_irrefl thm
prf 50806:50831 Make mult_is_complete_less_than
R50850:50853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50836:50845 Coq.Relations.Relation_Definitions <> transitive def
R50849:50849 Coccinelle.dickson <> Make.Mult.R var
R50854:50854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50872:50879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 50862:50862 <> a:407
R50865:50866 Coq.Init.Logic <> ::type_scope:'~'_x not
R50867:50867 Coccinelle.dickson <> Make.Mult.R var
R50871:50871 Coccinelle.dickson <> a:407 var
R50869:50869 Coccinelle.dickson <> a:407 var
binder 50887:50888 <> l1:408
binder 50890:50891 <> l2:409
R50938:50941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50894:50903 Coccinelle.TransClosure <> trans_clos ind
R50936:50937 Coccinelle.dickson <> l2:409 var
R50933:50934 Coccinelle.dickson <> l1:408 var
R50906:50928 Coccinelle.dickson Make multiset_extension_step ind
R50930:50930 Coccinelle.dickson <> Make.Mult.R var
R50952:50954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50942:50945 Coccinelle.dickson Make mult def
R50950:50951 Coccinelle.dickson <> l2:409 var
R50947:50948 Coccinelle.dickson <> l1:408 var
R50955:50963 Coccinelle.ordered_set <> Less_than constr
R51025:51040 Coccinelle.dickson Make multiset_closure thm
R51025:51040 Coccinelle.dickson Make multiset_closure thm
R51186:51191 Coccinelle.dickson Make permut abbrev
R51199:51202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51203:51209 Coccinelle.dickson Make appendn def
R51186:51191 Coccinelle.dickson Make permut abbrev
R51199:51202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51203:51209 Coccinelle.dickson Make appendn def
R51252:51255 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51242:51248 Coccinelle.dickson Make appendn def
R51223:51234 Coccinelle.dickson Make permut_trans defax
R51252:51255 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51242:51248 Coccinelle.dickson Make appendn def
R51223:51234 Coccinelle.dickson Make permut_trans defax
R51279:51290 Coccinelle.list_permut <> permut_swapp thm
R51299:51309 Coccinelle.dickson Make permut_refl defax
R51279:51290 Coccinelle.list_permut <> permut_swapp thm
R51299:51309 Coccinelle.dickson Make permut_refl defax
R51299:51309 Coccinelle.dickson Make permut_refl defax
R51325:51330 Coccinelle.dickson Make permut abbrev
R51338:51341 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51342:51346 Coccinelle.dickson Make consn def
R51325:51330 Coccinelle.dickson Make permut abbrev
R51338:51341 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51342:51346 Coccinelle.dickson Make consn def
R51387:51390 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51379:51383 Coccinelle.dickson Make consn def
R51360:51371 Coccinelle.dickson Make permut_trans defax
R51387:51390 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R51379:51383 Coccinelle.dickson Make consn def
R51360:51371 Coccinelle.dickson Make permut_trans defax
R51414:51425 Coccinelle.list_permut <> permut_swapp thm
R51434:51444 Coccinelle.dickson Make permut_refl defax
R51414:51425 Coccinelle.list_permut <> permut_swapp thm
R51434:51444 Coccinelle.dickson Make permut_refl defax
R51434:51444 Coccinelle.dickson Make permut_refl defax
R51481:51481 Coccinelle.dickson Make A defax
binder 51477:51477 <> x:410
R51507:51510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51484:51486 Coccinelle.more_list <> mem def
R51496:51502 Coccinelle.dickson Make appendn def
R51493:51493 Coccinelle.dickson <> x:410 var
R51488:51491 Coccinelle.dickson Make eq_A defax
R51532:51535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51511:51513 Coccinelle.more_list <> mem def
R51523:51527 Coccinelle.dickson Make consn def
R51520:51520 Coccinelle.dickson <> x:410 var
R51515:51518 Coccinelle.dickson Make eq_A defax
R51536:51540 Coq.Init.Logic <> False ind
R51481:51481 Coccinelle.dickson Make A defax
binder 51477:51477 <> x:411
R51507:51510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51484:51486 Coccinelle.more_list <> mem def
R51496:51502 Coccinelle.dickson Make appendn def
R51493:51493 Coccinelle.dickson <> x:411 var
R51488:51491 Coccinelle.dickson Make eq_A defax
R51532:51535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51511:51513 Coccinelle.more_list <> mem def
R51523:51527 Coccinelle.dickson Make consn def
R51520:51520 Coccinelle.dickson <> x:411 var
R51515:51518 Coccinelle.dickson Make eq_A defax
R51536:51540 Coq.Init.Logic <> False ind
R51620:51643 Coccinelle.dickson Make remove_equiv_is_complete defax
R51672:51684 Coccinelle.dickson Make mult_is_sound thm
R51620:51643 Coccinelle.dickson Make remove_equiv_is_complete defax
R51672:51684 Coccinelle.dickson Make mult_is_sound thm
R51701:51704 Coccinelle.dickson Make mult def
R51714:51714 Coccinelle.dickson Make A defax
R51729:51740 Coccinelle.more_list <> remove_equiv def
R51742:51746 Coccinelle.dickson DS1 A defax
R51748:51754 Coccinelle.dickson Make eq_bool defax
R51729:51740 Coccinelle.more_list <> remove_equiv def
R51742:51746 Coccinelle.dickson DS1 A defax
R51748:51754 Coccinelle.dickson Make eq_bool defax
R51812:51839 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51812:51839 Coccinelle.dickson Make mult_is_complete_greater_aux thm
R51876:51876 Coccinelle.dickson Make A defax
R51996:52004 Coq.Init.Logic <> False_rec scheme
R52032:52041 Coq.Init.Logic <> refl_equal abbrev
R51996:52004 Coq.Init.Logic <> False_rec scheme
R52032:52041 Coq.Init.Logic <> refl_equal abbrev
R52077:52085 Coq.Init.Logic <> False_rec scheme
R52077:52085 Coq.Init.Logic <> False_rec scheme
R52101:52113 Coccinelle.list_permut <> permut_length thm
R52101:52113 Coccinelle.list_permut <> permut_length thm
R52149:52158 Coq.Init.Logic <> refl_equal abbrev
R52149:52158 Coq.Init.Logic <> refl_equal abbrev
R52211:52221 Coccinelle.more_list <> list_forall def
R52233:52237 Coccinelle.dickson DS1 A defax
binder 52228:52229 <> t2:412
R52242:52252 Coccinelle.more_list <> list_exists def
R52290:52293 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R52264:52268 Coccinelle.dickson DS1 A defax
binder 52259:52260 <> t1:413
R52273:52278 Coccinelle.dickson <> Make.Mult.R_bool var
R52283:52284 Coccinelle.dickson <> t1:413 var
R52280:52281 Coccinelle.dickson <> t2:412 var
R52211:52221 Coccinelle.more_list <> list_forall def
R52233:52237 Coccinelle.dickson DS1 A defax
binder 52228:52229 <> t2:414
R52242:52252 Coccinelle.more_list <> list_exists def
R52290:52293 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R52264:52268 Coccinelle.dickson DS1 A defax
binder 52259:52260 <> t1:415
R52273:52278 Coccinelle.dickson <> Make.Mult.R_bool var
R52283:52284 Coccinelle.dickson <> t1:415 var
R52280:52281 Coccinelle.dickson <> t2:414 var
R52326:52334 Coq.Init.Logic <> False_rec scheme
R52326:52334 Coq.Init.Logic <> False_rec scheme
R52345:52355 Coccinelle.dickson Make mult_irrefl thm
R52345:52355 Coccinelle.dickson Make mult_irrefl thm
R52385:52403 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52385:52403 Coccinelle.TransClosure <> trans_clos_is_trans thm
R52440:52449 Coq.Init.Logic <> refl_equal abbrev
R52440:52449 Coq.Init.Logic <> refl_equal abbrev
R52515:52528 Coccinelle.dickson Make mem_permut_mem defax
R52515:52528 Coccinelle.dickson Make mem_permut_mem defax
R52515:52528 Coccinelle.dickson Make mem_permut_mem defax
R52562:52575 Coccinelle.dickson Make mem_permut_mem defax
R52562:52575 Coccinelle.dickson Make mem_permut_mem defax
R52562:52575 Coccinelle.dickson Make mem_permut_mem defax
R52603:52650 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52603:52650 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_1 thm
R52688:52691 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52667:52678 Coccinelle.dickson Make permut_trans defax
R52688:52691 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52667:52678 Coccinelle.dickson Make permut_trans defax
R52732:52735 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52722:52728 Coccinelle.dickson Make appendn def
R52703:52714 Coccinelle.dickson Make permut_trans defax
R52732:52735 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52722:52728 Coccinelle.dickson Make appendn def
R52703:52714 Coccinelle.dickson Make permut_trans defax
R52764:52774 Coccinelle.dickson Make permut_app2 defax
R52783:52792 Coccinelle.dickson Make permut_sym defax
R52764:52774 Coccinelle.dickson Make permut_app2 defax
R52764:52774 Coccinelle.dickson Make permut_app2 defax
R52783:52792 Coccinelle.dickson Make permut_sym defax
R52813:52824 Coccinelle.list_permut <> permut_swapp thm
R52833:52843 Coccinelle.dickson Make permut_refl defax
R52813:52824 Coccinelle.list_permut <> permut_swapp thm
R52833:52843 Coccinelle.dickson Make permut_refl defax
R52833:52843 Coccinelle.dickson Make permut_refl defax
R52852:52899 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52852:52899 Coccinelle.dickson Make list_permut_trans_clos_multiset_extension_step_2 thm
R52937:52940 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52916:52927 Coccinelle.dickson Make permut_trans defax
R52937:52940 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52916:52927 Coccinelle.dickson Make permut_trans defax
R52979:52982 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52971:52975 Coccinelle.dickson Make consn def
R52952:52963 Coccinelle.dickson Make permut_trans defax
R52979:52982 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R52971:52975 Coccinelle.dickson Make consn def
R52952:52963 Coccinelle.dickson Make permut_trans defax
R53011:53021 Coccinelle.dickson Make permut_app2 defax
R53030:53039 Coccinelle.dickson Make permut_sym defax
R53011:53021 Coccinelle.dickson Make permut_app2 defax
R53011:53021 Coccinelle.dickson Make permut_app2 defax
R53030:53039 Coccinelle.dickson Make permut_sym defax
R53060:53071 Coccinelle.list_permut <> permut_swapp thm
R53080:53090 Coccinelle.dickson Make permut_refl defax
R53060:53071 Coccinelle.list_permut <> permut_swapp thm
R53080:53090 Coccinelle.dickson Make permut_refl defax
R53080:53090 Coccinelle.dickson Make permut_refl defax
prf 53121:53136 Make mult_is_complete
R53156:53159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53142:53151 Coq.Relations.Relation_Definitions <> transitive def
R53155:53155 Coccinelle.dickson <> Make.Mult.R var
R53160:53160 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53178:53183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 53168:53168 <> a:416
R53171:53172 Coq.Init.Logic <> ::type_scope:'~'_x not
R53173:53173 Coccinelle.dickson <> Make.Mult.R var
R53177:53177 Coccinelle.dickson <> a:416 var
R53175:53175 Coccinelle.dickson <> a:416 var
binder 53191:53192 <> l1:417
binder 53194:53195 <> l2:418
R53206:53209 Coccinelle.dickson Make mult def
R53214:53215 Coccinelle.dickson <> l2:418 var
R53211:53212 Coccinelle.dickson <> l1:417 var
R53226:53237 Coccinelle.ordered_set <> Uncomparable constr
R53256:53297 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53242:53243 Coq.Init.Logic <> ::type_scope:'~'_x not
R53244:53249 Coccinelle.dickson Make permut abbrev
R53254:53255 Coccinelle.dickson <> l2:418 var
R53251:53252 Coccinelle.dickson <> l1:417 var
R53343:53385 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53298:53298 Coq.Init.Logic <> ::type_scope:'~'_x not
R53299:53308 Coccinelle.TransClosure <> trans_clos ind
R53341:53342 Coccinelle.dickson <> l2:418 var
R53338:53339 Coccinelle.dickson <> l1:417 var
R53311:53333 Coccinelle.dickson Make multiset_extension_step ind
R53335:53335 Coccinelle.dickson <> Make.Mult.R var
R53386:53386 Coq.Init.Logic <> ::type_scope:'~'_x not
R53387:53396 Coccinelle.TransClosure <> trans_clos ind
R53429:53430 Coccinelle.dickson <> l1:417 var
R53426:53427 Coccinelle.dickson <> l2:418 var
R53399:53421 Coccinelle.dickson Make multiset_extension_step ind
R53423:53423 Coccinelle.dickson <> Make.Mult.R var
R53441:53444 Coq.Init.Logic <> True ind
R53503:53515 Coccinelle.dickson Make mult_is_sound thm
R53526:53547 Coccinelle.dickson Make mult_is_complete_equiv thm
R53579:53602 Coccinelle.dickson Make mult_is_complete_greater thm
R53630:53655 Coccinelle.dickson Make mult_is_complete_less_than thm
R53503:53515 Coccinelle.dickson Make mult_is_sound thm
R53526:53547 Coccinelle.dickson Make mult_is_complete_equiv thm
R53579:53602 Coccinelle.dickson Make mult_is_complete_greater thm
R53630:53655 Coccinelle.dickson Make mult_is_complete_less_than thm
R53688:53691 Coccinelle.dickson Make mult def
R53688:53691 Coccinelle.dickson Make mult def
R53861:53864 Coccinelle.dickson Make.Mult <> sec
R53872:53875 Coccinelle.dickson Make <> mod
R53896:53899 Coccinelle.dickson Make <> modtype
R53902:53916 Coccinelle.ordered_set Nat <> modtype
mod 53886:53891 <> NatMul
