Resetting all values
Opening ../examples/even2odd_unoriented.spike

Successfully parsed sorts

Successfully parsed constructors

Successfully parsed functions

Successfully parsed axioms
All constructors are free
dico_const_string:
2 --> 0
-1 --> even1
5 --> False
-2 --> odd1
-4 --> odd
-5 --> plus
-3 --> even
3 --> S
4 --> True

Successfully parsed equivalence relation

Successfully parsed statuses
dico_id_status:
Completing status dico with default status "Multiset"
AC symbols: 
Case 0: no AC symbols
Orienting axioms
	[ 16 ] plus (0, u1) -> u1 ;
	[ 17 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;
	[ 18 ] even (0) -> True ;
	[ 19 ] even (1) -> False ;
	[ 20 ] even (S (S (u1))) -> even1 (plus (S (S (u1)), 0)) ;

WARNING: the axiom [20] is not orientable in a rewrite rule using the current order
	[ 21 ] even1 (0) -> True ;
	[ 22 ] even1 (1) -> False ;
	[ 23 ] odd (u1) = False => even1 (S (S (u1))) -> even (u1) ;
	[ 24 ] odd (u1) = True => even1 (S (S (u1))) -> False ;
	[ 25 ] odd (0) -> False ;
	[ 26 ] odd (1) -> True ;
	[ 27 ] odd (S (S (u1))) -> odd1 (plus (S (S (u1)), 0)) ;

WARNING: the axiom [27] is not orientable in a rewrite rule using the current order
	[ 28 ] odd1 (0) -> False ;
	[ 29 ] odd1 (1) -> True ;
	[ 30 ] even (u1) = True => odd1 (S (S (u1))) -> odd (u1) ;
	[ 31 ] even (u1) = False => odd1 (S (S (u1))) -> True ;
dico_order:
even1: plus 0 S True False;
odd1: plus 0 S True False;
odd: plus 0 S True False;
plus: 0 S;
even: plus 0 S True False;
dico_equivalence:
odd ~ even ~ odd1 ~ even1
Computing nullary sorts
Sort "bool" is nullary
Sort "nat" is not nullary
Computing nullary individuals
We do not have a boolean specification

Successfully parsed properties
Computing default priorities
Using default priorities
Generate will be attempted on the following positions:
Ind_pos_position ()

Successfully parsed strategies

Successfully parsed startpoint

Successfully parsed conjectures
	[ 32 ] plus (u1, 0) = u1 ;
	[ 33 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;
Closing ../examples/even2odd_unoriented.spike

Successfully parsed conjectures
	[ 34 ] even (plus (u1, u1)) = True ;


************************************************************
******************* Starting computation *******************
************************************************************


dico_st:
fullind = (repeat (stra, split_rule), print_goals_history)
negative_clash_rule = delete(id,[try (negative_clash)])
subsumption_rule = delete(id,[try (subsumption (L&C))])
split_rule = add_premise(generate,[try (id)])
case_rewriting_rule = add_premise(total_case_rewriting (simplify_strat, R, *),[try (id)])
normalize = repeat try (delete(id,[negative_clash]), simplify(id,[eliminate_redundant_literal]), simplify(id,[eliminate_trivial_literal]), simplify(id,[positive_clash]), simplify(id,[congruence_closure]), simplify(id,[negative_decomposition]), simplify(id,[auto_simplification]), simplify(id,[rewriting (normalize, L&R, *)]), delete(id,[subsumption (L&C)]), simplify(id,[total_case_rewriting (builtin, R, *)]))
stra = repeat (try (tautology_rule, negative_clash_rule, subsumption_rule, decomposition_rule, rewriting_rule, print_goals, case_rewriting_rule))
recursive = try (delete, rewrite, add_premise(id,[generate]))
query = ?
generate_reduce = try (delete(id,[tautology]), rewrite)
rewriting_rule = simplify(id,[try (rewriting (rewrite, L&R&C, *))])
tautology_rule = delete(id,[try (tautology)])
decompose = saturate (simplify(id,[positive_decomposition]), simplify(id,[negative_decomposition]))
clean = saturate (simplify(id,[eliminate_redundant_literal]), simplify(id,[eliminate_trivial_literal]), simplify(id,[positive_clash]))
simplify = saturate (delete, clean, decompose, simplify(id,[auto_simplification]))
total_case_rewriting_rule = simplify(id,[try (total_case_rewriting (simplify_strat, R, *))])
rewrite = try (simplify(id,[rewriting (normalize, R, *)]), simplify(id,[equational_rewriting (*)]), simplify(id,[partial_case_rewriting (R&L, *)]))
builtin = try (delete, rewrite, add_premise(id,[generate]))
decomposition_rule = simplify(id,[try (negative_decomposition)])
delete = saturate (delete(id,[tautology]), delete(id,[subsumption (R&L)]), delete(id,[negative_clash]))
Start point is now fullind

************************  Proving  *************************
[ 35 ] plus (u1, 0) = u1 ;
[ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using strategy 

fullind mixed with DRaCuLa
************************************************************

Current goals E1 (2):
[ 35 ] plus (u1, 0) = u1 ;
[ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;


GENERATE 1 on
« [ 35 ] plus (u1, 0) = u1 ;

from the positions:
	true/1/[1] --> plus (u1, 0)
	
at true/1/[1] on 	plus (u1, 0) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 50 ] 0 = 0 ;

using the rule [ 16 ] plus (0, u1) -> u1 ;
2) [ 56 ] S (plus (u2, 0)) = S (u2) ;

using the rule [ 17 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

TAUTOLOGY: delete
« [ 50 ] 0 = 0 ;

POSITIVE DECOMPOSITION : simplify
« [ 56 ] S (plus (u2, 0)) = S (u2) ;

» [ 59 ] plus (u2, 0) = u2 ;


SUBSUMPTION: delete
« [ 59 ] plus (u2, 0) = u2 ;

Subsumed in C1 by [ 35 ] plus (u1, 0) = u1 ;

	with epsilon = <! u1, u2 !>

The IH ([ 35 ] plus (u1, 0) = u1 ; <! u1, u2 !>) is checked by the 1-cycle

	([ 35 ] plus (u1, 0) = u1 ; <! u1, S (u2) !>)
	([ 56 ] S (plus (u2, 0)) = S (u2) ; <!  !>)


Current goals E2 (1):
[ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;

Current premises H2 (1):
[ 35 ] plus (u1, 0) = u1 ;


GENERATE 2 on
« [ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;

from the positions:
	true/1/[1] --> plus (u1, S (u2))
	
at true/1/[1] on 	plus (u1, S (u2)) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u3) !>

We obtain :

1) [ 74 ] S (u2) = S (plus (0, u2)) ;

using the rule [ 16 ] plus (0, u1) -> u1 ;
2) [ 80 ] S (plus (u3, S (u2))) = S (plus (S (u3), u2)) ;

using the rule [ 17 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

POSITIVE DECOMPOSITION : simplify
« [ 74 ] S (u2) = S (plus (0, u2)) ;

» [ 87 ] u2 = plus (0, u2) ;

POSITIVE DECOMPOSITION : simplify
« [ 80 ] S (plus (u3, S (u2))) = S (plus (S (u3), u2)) ;

» [ 91 ] plus (u3, S (u2)) = plus (S (u3), u2) ;


REWRITING 1: simplify by rewriting 
« [ 87 ] u2 = plus (0, u2) ;


- rewriting at the position true/1/[2]:

plus (0, u2)
   is simplified by : plus (0, u1) -> u1   (from [ 16 ] of R)
   with substitution: <! u1, u2 !> into
u2


» [ 97 ] u2 = u2 ;

TAUTOLOGY: delete
« [ 97 ] u2 = u2 ;


REWRITING 2: simplify by rewriting 
« [ 91 ] plus (u3, S (u2)) = plus (S (u3), u2) ;

- rewriting at the position true/1/[1]:

plus (u3, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 36 ] of C1)
   with substitution: <! u1, u3 ; u2, u2 !> into
S (plus (u3, u2))

» [ 102 ] S (plus (u3, u2)) = plus (S (u3), u2) ;



The IH ([ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ; <! u1, u3 ; u2, u2 !>) is checked by the 1-cycle

	([ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ; <! u1, S (u3) !>)
	([ 80 ] S (plus (u3, S (u2))) = S (plus (S (u3), u2)) ; <!  !>)


REWRITING 3: simplify by rewriting 
« [ 102 ] S (plus (u3, u2)) = plus (S (u3), u2) ;


- rewriting at the position true/1/[2]:

plus (S (u3), u2)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 17 ] of R)
   with substitution: <! u1, u3 ; u2, u2 !> into
S (plus (u3, u2))


» [ 111 ] S (plus (u3, u2)) = S (plus (u3, u2)) ;

TAUTOLOGY: delete
« [ 111 ] S (plus (u3, u2)) = S (plus (u3, u2)) ;



The following initial conjectures are inductive consequences of R

[ 35 ] plus (u1, 0) = u1 ;

[ 36 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;
Elapsed time: 0.016042 s

--- Global statistics of the main successful operations ---

- tautology               : 3 of 20 tries.
- rewriting               : 3 of 6 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 0 of 15 tries.
- total_case_rewriting    : 0 of 3 tries.
- generate                : 2 of 2 tries.

-----------
  Total clauses: 111

-----------
  Total lemmas: 1

  Max depth    : 1

************************  Proving  *************************
[ 112 ] even (plus (u1, u1)) = True ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 35 ] plus (u1, 0) -> u1 ;
[ 36 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;


using strategy 

fullind mixed with DRaCuLa
************************************************************

Current goals E3 (1):
[ 112 ] even (plus (u1, u1)) = True ;


GENERATE 3 on
« [ 112 ] even (plus (u1, u1)) = True ;

from the positions:
	true/1/[1] --> even (plus (u1, u1))
	true/1/[1-1] --> plus (u1, u1)
	
at true/1/[1-1] on 	plus (u1, u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 124 ] even (0) = True ;

using the rule [ 16 ] plus (0, u1) -> u1 ;
2) [ 130 ] even (S (plus (u2, S (u2)))) = True ;

using the rule [ 17 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 4: simplify by rewriting 
« [ 124 ] even (0) = True ;


- rewriting at the position true/1/[1]:

even (0)
   is simplified by : even (0) -> True   (from [ 18 ] of R)
   with substitution: <!  !> into
True


» [ 139 ] True = True ;

TAUTOLOGY: delete
« [ 139 ] True = True ;


REWRITING 5: simplify by rewriting 
« [ 130 ] even (S (plus (u2, S (u2)))) = True ;


- rewriting at the position true/1/[1-1-1]:

plus (u2, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 36 ] of L)
   with substitution: <! u1, u2 ; u2, u2 !> into
S (plus (u2, u2))


» [ 142 ] even (S (S (plus (u2, u2)))) = True ;


REWRITING 6: simplify by rewriting 
« [ 142 ] even (S (S (plus (u2, u2)))) = True ;


- rewriting at the position true/1/[1]:

even (S (S (plus (u2, u2))))
   is simplified by : even (S (S (u1))) -> even1 (plus (S (S (u1)), 0))   (from [ 20 ] of R)
   with substitution: <! u1, plus (u2, u2) !> into
even1 (plus (S (S (plus (u2, u2))), 0))


» [ 148 ] even1 (plus (S (S (plus (u2, u2))), 0)) = True ;


REWRITING 7: simplify by rewriting 
« [ 148 ] even1 (plus (S (S (plus (u2, u2))), 0)) = True ;


- rewriting at the position true/1/[1-1]:

plus (S (S (plus (u2, u2))), 0)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 17 ] of R)
   with substitution: <! u1, S (plus (u2, u2)) ; u2, 0 !> into
S (plus (S (plus (u2, u2)), 0))


» [ 156 ] even1 (S (plus (S (plus (u2, u2)), 0))) = True ;


REWRITING 8: simplify by rewriting 
« [ 156 ] even1 (S (plus (S (plus (u2, u2)), 0))) = True ;


- rewriting at the position true/1/[1-1-1]:

plus (S (plus (u2, u2)), 0)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 17 ] of R)
   with substitution: <! u1, plus (u2, u2) ; u2, 0 !> into
S (plus (plus (u2, u2), 0))


» [ 164 ] even1 (S (S (plus (plus (u2, u2), 0)))) = True ;


REWRITING 9: simplify by rewriting 
« [ 164 ] even1 (S (S (plus (plus (u2, u2), 0)))) = True ;


- rewriting at the position true/1/[1-1-1-1]:

plus (plus (u2, u2), 0)
   is simplified by : plus (u1, 0) -> u1   (from [ 35 ] of L)
   with substitution: <! u1, plus (u2, u2) !> into
plus (u2, u2)


» [ 172 ] even1 (S (S (plus (u2, u2)))) = True ;


Current goals E4 (1):
[ 172 ] even1 (S (S (plus (u2, u2)))) = True ;

Current premises H4 (1):
[ 112 ] even (plus (u1, u1)) = True ;

TOTAL CASE REWRITING 1: simplify clause
[ 172 ] even1 (S (S (plus (u2, u2)))) = True ;

at position true/1/[1] on 	even1 (S (S (plus (u2, u2))))


 The current clause is added to H since the new conjectures are smaller : 

« [ 172 ] even1 (S (S (plus (u2, u2)))) = True ;

with the rules 

1) [ 23 ] odd (u1) = False => even1 (S (S (u1))) -> even (u1) ;
2) [ 24 ] odd (u1) = True => even1 (S (S (u1))) -> False ;

resulting

» 1) [ 182 ] odd (plus (u2, u2)) = False => even (plus (u2, u2)) = True ;

using [ 23 ] from R

» 2) [ 186 ] odd (plus (u2, u2)) = True => False = True ;

using [ 24 ] from R



SUBSUMPTION: delete
« [ 182 ] odd (plus (u2, u2)) = False => even (plus (u2, u2)) = True ;

Subsumed in C1 by [ 112 ] even (plus (u1, u1)) = True ;

	with epsilon = <! u1, u2 !>

The IH ([ 112 ] even (plus (u1, u1)) = True ; <! u1, u2 !>) is checked by the 1-cycle

	([ 112 ] even (plus (u1, u1)) = True ; <! u1, S (u2) !>)
	([ 130 ] even (S (plus (u2, S (u2)))) = True ; <!  !>)
	([ 142 ] even (S (S (plus (u2, u2)))) = True ; <!  !>)
	([ 148 ] even1 (plus (S (S (plus (u2, u2))), 0)) = True ; <!  !>)
	([ 156 ] even1 (S (plus (S (plus (u2, u2)), 0))) = True ; <!  !>)
	([ 164 ] even1 (S (S (plus (plus (u2, u2), 0)))) = True ; <!  !>)
	([ 172 ] even1 (S (S (plus (u2, u2)))) = True ; <!  !>)


Current goals E5 (1):
[ 186 ] odd (plus (u2, u2)) = True => False = True ;

Current premises H5 (2):
[ 112 ] even (plus (u1, u1)) = True ;
[ 172 ] even1 (S (S (plus (u2, u2)))) = True ;


GENERATE 4 on
« [ 186 ] odd (plus (u2, u2)) = True => False = True ;

from the positions:
	false/1/[1] --> odd (plus (u2, u2))
	false/1/[1-1] --> plus (u2, u2)
	
at false/1/[1-1] on 	plus (u2, u2) 	 using the test substitutions:

 1) <! u2, 0 !>
 2) <! u2, S (u3) !>

We obtain :

1) [ 211 ] odd (0) = True => False = True ;

using the rule [ 16 ] plus (0, u1) -> u1 ;
2) [ 217 ] odd (S (plus (u3, S (u3)))) = True => False = True ;

using the rule [ 17 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 10: simplify by rewriting 
« [ 211 ] odd (0) = True => False = True ;


- rewriting at the position false/1/[1]:

odd (0)
   is simplified by : odd (0) -> False   (from [ 25 ] of R)
   with substitution: <!  !> into
False


» [ 233 ] False = True => False = True ;

TAUTOLOGY: delete
« [ 233 ] False = True => False = True ;


REWRITING 11: simplify by rewriting 
« [ 217 ] odd (S (plus (u3, S (u3)))) = True => False = True ;


- rewriting at the position false/1/[1-1-1]:

plus (u3, S (u3))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 36 ] of L)
   with substitution: <! u1, u3 ; u2, u3 !> into
S (plus (u3, u3))


» [ 236 ] odd (S (S (plus (u3, u3)))) = True => False = True ;


REWRITING 12: simplify by rewriting 
« [ 236 ] odd (S (S (plus (u3, u3)))) = True => False = True ;


- rewriting at the position false/1/[1]:

odd (S (S (plus (u3, u3))))
   is simplified by : odd (S (S (u1))) -> odd1 (plus (S (S (u1)), 0))   (from [ 27 ] of R)
   with substitution: <! u1, plus (u3, u3) !> into
odd1 (plus (S (S (plus (u3, u3))), 0))


» [ 249 ] odd1 (plus (S (S (plus (u3, u3))), 0)) = True => False = True ;


REWRITING 13: simplify by rewriting 
« [ 249 ] odd1 (plus (S (S (plus (u3, u3))), 0)) = True => False = True ;


- rewriting at the position false/1/[1-1]:

plus (S (S (plus (u3, u3))), 0)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 17 ] of R)
   with substitution: <! u1, S (plus (u3, u3)) ; u2, 0 !> into
S (plus (S (plus (u3, u3)), 0))


» [ 264 ] odd1 (S (plus (S (plus (u3, u3)), 0))) = True => False = True ;


REWRITING 14: simplify by rewriting 
« [ 264 ] odd1 (S (plus (S (plus (u3, u3)), 0))) = True => False = True ;


- rewriting at the position false/1/[1-1-1]:

plus (S (plus (u3, u3)), 0)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 17 ] of R)
   with substitution: <! u1, plus (u3, u3) ; u2, 0 !> into
S (plus (plus (u3, u3), 0))


» [ 279 ] odd1 (S (S (plus (plus (u3, u3), 0)))) = True => False = True ;


REWRITING 15: simplify by rewriting 
« [ 279 ] odd1 (S (S (plus (plus (u3, u3), 0)))) = True => False = True ;


- rewriting at the position false/1/[1-1-1-1]:

plus (plus (u3, u3), 0)
   is simplified by : plus (u1, 0) -> u1   (from [ 35 ] of L)
   with substitution: <! u1, plus (u3, u3) !> into
plus (u3, u3)


» [ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ;


Current goals E6 (1):
[ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ;

Current premises H6 (3):
[ 112 ] even (plus (u1, u1)) = True ;
[ 172 ] even1 (S (S (plus (u2, u2)))) = True ;
[ 186 ] odd (plus (u2, u2)) = True => False = True ;

TOTAL CASE REWRITING 2: simplify clause
[ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ;

at position false/1/[1] on 	odd1 (S (S (plus (u3, u3))))


 The current clause is added to H since the new conjectures are smaller : 

« [ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ;

with the rules 

1) [ 30 ] even (u1) = True => odd1 (S (S (u1))) -> odd (u1) ;
2) [ 31 ] even (u1) = False => odd1 (S (S (u1))) -> True ;

resulting

» 1) [ 311 ] odd (plus (u3, u3)) = True /\ even (plus (u3, u3)) = True => False = True ;

using [ 30 ] from R

» 2) [ 315 ] True = True /\ even (plus (u3, u3)) = False => False = True ;

using [ 31 ] from R



SUBSUMPTION: delete
« [ 311 ] odd (plus (u3, u3)) = True /\ even (plus (u3, u3)) = True => False = True ;

Subsumed in C1 by [ 186 ] odd (plus (u2, u2)) = True => False = True ;

	with epsilon = <! u2, u3 !>

The IH ([ 186 ] odd (plus (u2, u2)) = True => False = True ; <! u2, u3 !>) is checked by the 1-cycle

	([ 186 ] odd (plus (u2, u2)) = True => False = True ; <! u2, S (u3) !>)
	([ 217 ] odd (S (plus (u3, S (u3)))) = True => False = True ; <!  !>)
	([ 236 ] odd (S (S (plus (u3, u3)))) = True => False = True ; <!  !>)
	([ 249 ] odd1 (plus (S (S (plus (u3, u3))), 0)) = True => False = True ; <!  !>)
	([ 264 ] odd1 (S (plus (S (plus (u3, u3)), 0))) = True => False = True ; <!  !>)
	([ 279 ] odd1 (S (S (plus (plus (u3, u3), 0)))) = True => False = True ; <!  !>)
	([ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ; <!  !>)

NEGATIVE DECOMPOSITION : simplify
« [ 315 ] True = True /\ even (plus (u3, u3)) = False => False = True ;

» [ 347 ] even (plus (u3, u3)) = False => False = True ;


REWRITING 16: simplify by rewriting 
« [ 347 ] even (plus (u3, u3)) = False => False = True ;

- rewriting at the position false/1/[1]:

even (plus (u3, u3))
   is simplified by : even (plus (u1, u1)) -> True   (from [ 112 ] of C1)
   with substitution: <! u1, u3 !> into
True

» [ 361 ] True = False => False = True ;



The IH ([ 112 ] even (plus (u1, u1)) = True ; <! u1, u3 !>) is checked by the 1-cycle

	([ 112 ] even (plus (u1, u1)) = True ; <! u1, S (u2) !>)
	([ 130 ] even (S (plus (u2, S (u2)))) = True ; <!  !>)
	([ 142 ] even (S (S (plus (u2, u2)))) = True ; <!  !>)
	([ 148 ] even1 (plus (S (S (plus (u2, u2))), 0)) = True ; <!  !>)
	([ 156 ] even1 (S (plus (S (plus (u2, u2)), 0))) = True ; <!  !>)
	([ 164 ] even1 (S (S (plus (plus (u2, u2), 0)))) = True ; <!  !>)
	([ 172 ] even1 (S (S (plus (u2, u2)))) = True ; <!  !>)
	([ 186 ] odd (plus (u2, u2)) = True => False = True ; <! u2, S (u3) !>)
	([ 217 ] odd (S (plus (u3, S (u3)))) = True => False = True ; <!  !>)
	([ 236 ] odd (S (S (plus (u3, u3)))) = True => False = True ; <!  !>)
	([ 249 ] odd1 (plus (S (S (plus (u3, u3))), 0)) = True => False = True ; <!  !>)
	([ 264 ] odd1 (S (plus (S (plus (u3, u3)), 0))) = True => False = True ; <!  !>)
	([ 279 ] odd1 (S (S (plus (plus (u3, u3), 0)))) = True => False = True ; <!  !>)
	([ 294 ] odd1 (S (S (plus (u3, u3)))) = True => False = True ; <!  !>)
	([ 315 ] True = True /\ even (plus (u3, u3)) = False => False = True ; <!  !>)

TAUTOLOGY: delete
« [ 361 ] True = False => False = True ;



The following initial conjectures are inductive consequences of R

[ 112 ] even (plus (u1, u1)) = True ;
Elapsed time: 0.03016 s

--- Global statistics of the main successful operations ---

- tautology               : 6 of 49 tries.
- rewriting               : 16 of 23 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 0 of 37 tries.
- total_case_rewriting    : 2 of 7 tries.
- generate                : 4 of 4 tries.

-----------
  Total clauses: 377

-----------
  Total lemmas: 2

  Max depth    : 1


All sets of conjectures were successfully processed


